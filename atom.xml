<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jarod&#39;s Blog</title>
  
  
  <link href="https://jarod.vip/atom.xml" rel="self"/>
  
  <link href="https://jarod.vip/"/>
  <updated>2022-09-29T13:27:45.735Z</updated>
  <id>https://jarod.vip/</id>
  
  <author>
    <name>Jarod</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MacBook Pro 外接显示屏开启 HiDPI</title>
    <link href="https://jarod.vip/2022/09/29/MacBook-Pro-%E5%A4%96%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%B1%8F%E5%BC%80%E5%90%AF-HiDPI/"/>
    <id>https://jarod.vip/2022/09/29/MacBook-Pro-%E5%A4%96%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%B1%8F%E5%BC%80%E5%90%AF-HiDPI/</id>
    <published>2022-09-29T13:27:45.734Z</published>
    <updated>2022-09-29T13:27:45.735Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HiDPI"><a href="#HiDPI" class="headerlink" title="HiDPI"></a>HiDPI</h2><p>本质上是用软件的方式实现单位面积内的高密度像素。用四个像素点来表现一个像素，因此能够更加清晰细腻</p><p>高 PPI(硬件) + HiDPI 渲染(软件) &#x3D; 更细腻的显示效果(Retina)</p><p><a href="https://user-images.githubusercontent.com/16217324/123499689-13fb1980-d66b-11eb-8f33-b473d58ef351.png"><img src="https://user-images.githubusercontent.com/16217324/123499689-13fb1980-d66b-11eb-8f33-b473d58ef351.png" alt="WechatIMG2168"></a></p><h2 id="获取外接显示器-DisplayVendorID-和-DisplayProductID"><a href="#获取外接显示器-DisplayVendorID-和-DisplayProductID" class="headerlink" title="获取外接显示器 DisplayVendorID 和 DisplayProductID"></a>获取外接显示器 DisplayVendorID 和 DisplayProductID</h2><p>在终端输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l  grep &quot;DisplayVendorID&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果获得两个，那说明的你的 Macbook 还在亮着，可以合盖来排除掉</p><h2 id="制作外接显示屏系统配置文件"><a href="#制作外接显示屏系统配置文件" class="headerlink" title="制作外接显示屏系统配置文件"></a>制作外接显示屏系统配置文件</h2><h3 id="转换-16-进制"><a href="#转换-16-进制" class="headerlink" title="转换 16 进制"></a>转换 16 进制</h3><p>将 DisplayVendorID 和 DisplayProductID 的数值，转换为 16 进制，<a href="https://tool.lu/hexconvert/">在线转换工具</a></p><h3 id="创建显示器配置文件夹"><a href="#创建显示器配置文件夹" class="headerlink" title="创建显示器配置文件夹"></a>创建显示器配置文件夹</h3><p>新建文件夹，命名为：DisplayVendorID-XXXX，其中 XXXX 是刚才转换的 DisplayVendorID 的 16 进制值小写</p><h3 id="创建显示器配置内容"><a href="#创建显示器配置内容" class="headerlink" title="创建显示器配置内容"></a>创建显示器配置内容</h3><p>这里需要借助工具来生成，<a href="https://codeclou.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/">在线生成工具</a>，将显示器的名称、DisplayVendorID（16 进制） 和 DisplayProductID（16 进制） 对应填写进去，即可获得配置文件，下载文件到刚创建的 DisplayVendorID-XXXX 文件夹内，将 plist 的后缀去掉</p><p><a href="https://user-images.githubusercontent.com/16217324/123499686-0c3b7500-d66b-11eb-96be-234022b2c651.png"><img src="https://user-images.githubusercontent.com/16217324/123499686-0c3b7500-d66b-11eb-96be-234022b2c651.png" alt="WechatIMG2169"></a></p><p>然后需要将文件放到系统的 <code>/System/Library/Displays/Contents/Resources/Overrides/</code> 文件夹中</p><p>如果 <code>Overrides</code> 没有权限操作，在终端中输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ csrutil status</span><br></pre></td></tr></table></figure><p><a href="https://user-images.githubusercontent.com/16217324/123499683-05acfd80-d66b-11eb-843e-a70b6fc736f8.png"><img src="https://user-images.githubusercontent.com/16217324/123499683-05acfd80-d66b-11eb-843e-a70b6fc736f8.png" alt="WechatIMG2170"></a></p><p>如果是关闭状态，则需要开启</p><h3 id="开启-rootless"><a href="#开启-rootless" class="headerlink" title="开启 rootless"></a>开启 rootless</h3><ol><li><p>重启 MacBook，按住 command + R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式</p></li><li><p>在屏幕左上方的工具栏找到实用工具（左数第 3 个），打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ csrutil disable</span><br></pre></td></tr></table></figure></li><li><p>重启 MacBook</p></li></ol><h3 id="关闭-rootless"><a href="#关闭-rootless" class="headerlink" title="关闭 rootless"></a>关闭 rootless</h3><ol><li><p>重启 MacBook，按住 command + R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式</p></li><li><p>在屏幕左上方的工具栏找到实用工具（左数第 3 个），打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ csrutil disable</span><br></pre></td></tr></table></figure></li><li><p>重启 MacBook</p></li></ol><p>如果已关闭 rootless，还是不行，那么需要在终端输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount -rw /</span><br></pre></td></tr></table></figure><p>Tips:</p><ol><li><p>10.15 之后，系统的目录除了几个 rootless 可以修改的，都是只读的，所有对系统的修改都不支持，你的那个目录是在只读分区内的。要是写机器域的文件，在&#x2F;Library 目录中操作。</p></li><li><p>macOS 有个内核保护机制 rootless，有时候你需要装什么软件时，需要一些 root 权限，但是在 macOS 上 root 虽然权力是最大的，但是苹果还是限制了它一下。</p></li></ol><h2 id="开启-HiDPI"><a href="#开启-HiDPI" class="headerlink" title="开启 HiDPI"></a>开启 HiDPI</h2><p><a href="https://github.com/xzhih/one-key-hidpi/blob/master/README-zh.md">one-key-hidpi</a></p><p>此脚本的目的是为中低分辨率的屏幕开启 HiDPI 选项，并且具有原生的 HiDPI 设置，不需要 RDM 软件即可在系统显示器设置中设置</p><p>macOS 的 DPI 机制和 Windows 下不一样，比如 1080p 的屏幕在 Windows 下有 125%、150% 这样的缩放选项，而同样的屏幕在 macOS 下，缩放选项里只是单纯的调节分辨率，这就使得在默认分辨率下字体和 UI 看起来很小，降低分辨率又显得模糊</p><p>同时，此脚本也可以通过注入修补后的 EDID 修复闪屏，或者睡眠唤醒后的闪屏问题，当然这个修复因人而异</p><p>开机的第二阶段 logo 总是会稍微放大，因为分辨率是仿冒的</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ol><li>远程模式: 在终端输入以下命令回车即可</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>本地模式: 下载项目解压,双击 <code>hidpi.command</code> 运行</li></ol><p><a href="https://user-images.githubusercontent.com/16217324/123499664-ec0bb600-d66a-11eb-85cb-524aff4757ef.jpeg"><img src="https://user-images.githubusercontent.com/16217324/123499664-ec0bb600-d66a-11eb-85cb-524aff4757ef.jpeg" alt="WechatIMG2171"></a></p><p><a href="https://user-images.githubusercontent.com/16217324/123499670-f5951e00-d66a-11eb-9a74-99e150806caa.jpeg"><img src="https://user-images.githubusercontent.com/16217324/123499670-f5951e00-d66a-11eb-9a74-99e150806caa.jpeg" alt="WechatIMG2172"></a></p><h2 id="RDM"><a href="#RDM" class="headerlink" title="RDM"></a>RDM</h2><p>RDM 全称为 Retina Display Manage，<a href="http://avi.alkalay.net/software/RDM">安装地址</a></p><p>重启后打开 RDM，选取带雷电符号的 1920x1080，即可开启 HiDPI。</p><p><a href="https://user-images.githubusercontent.com/16217324/123499675-fc239580-d66a-11eb-8731-5fe3a320558f.png"><img src="https://user-images.githubusercontent.com/16217324/123499675-fc239580-d66a-11eb-8731-5fe3a320558f.png" alt="WechatIMG2173"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;HiDPI&quot;&gt;&lt;a href=&quot;#HiDPI&quot; class=&quot;headerlink&quot; title=&quot;HiDPI&quot;&gt;&lt;/a&gt;HiDPI&lt;/h2&gt;&lt;p&gt;本质上是用软件的方式实现单位面积内的高密度像素。用四个像素点来表现一个像素，因此能够更加清晰细腻&lt;/p&gt;
&lt;p&gt;高 </summary>
      
    
    
    
    <category term="uncategorized" scheme="https://jarod.vip/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS 升级后开机卡在进度条和唤醒时黑屏的解决方法</title>
    <link href="https://jarod.vip/2022/09/29/macOS-%E5%8D%87%E7%BA%A7%E5%90%8E%E5%BC%80%E6%9C%BA%E5%8D%A1%E5%9C%A8%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%92%8C%E5%94%A4%E9%86%92%E6%97%B6%E9%BB%91%E5%B1%8F%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://jarod.vip/2022/09/29/macOS-%E5%8D%87%E7%BA%A7%E5%90%8E%E5%BC%80%E6%9C%BA%E5%8D%A1%E5%9C%A8%E8%BF%9B%E5%BA%A6%E6%9D%A1%E5%92%8C%E5%94%A4%E9%86%92%E6%97%B6%E9%BB%91%E5%B1%8F%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2022-09-29T13:27:45.732Z</published>
    <updated>2022-09-29T13:27:45.732Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190822151646.gif"><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190822151646.gif"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次升级 macOS 在抱着对 Apple 高质量软硬件的幻想中破灭，从 macOS High Sierra 手贱升级到 macOS Mojave (version 10.14)，各种字体发虚，Kernel Panic(六国语言重启)，系统卡顿，耗电快等问题接踵而至。本来寄希望于升级 macOS Mojave (version 10.14.1-10.14.6)可以解决部分稳定性和兼容性问题，但是 MacBook 居然开机卡在进度条，然后我等了一上午都没有完成，差点以为要悲剧的重装系统丢失数据了。所以很有必要给大伙提个醒，无论是 Windows 还是 macOS 在新版本推送的早期都不要点击更新，升级到高版本后如果不选择 erase 擦除数据是无法降级至低版本的，比如从 Catalina 降级至 Mojave 或 High Sierra。抑制住你体内的洪荒之力和强迫症，不要手贱，不要手贱，不要手贱。实在手痒的厉害，千万记住先备份后折腾。</p><blockquote><p>拒绝重装！教你如何拯救开机失败的 Mac 电脑</p></blockquote><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2021 年 10 月 10 日 - 增加 macOS Catalina 升级至 Big Sur 遇到问题的解决方案 2019 年 08 月 22 日 - 更新解决问题的常见套路，可修复截止至 10.14.6 之前的大多数问题，对 Catalina 不抱有 Bug 变少希望 2019 年 01 月 30 日 - 更新解决唤醒时黑屏只看见鼠标的问题 2018 年 11 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macos/">https://wsgzao.github.io/post/macos/</a></p><p><strong>扩展阅读</strong></p><p>Upgrade to macOS Mojave - <a href="https://www.apple.com/macos/how-to-upgrade/">https://www.apple.com/macos/how-to-upgrade/</a> 如何升级到 macOS Mojave - <a href="https://support.apple.com/zh-cn/HT201475">https://support.apple.com/zh-cn/HT201475</a> 如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904">https://support.apple.com/zh-cn/HT204904</a> 如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372">https://support.apple.com/zh-cn/HT201372</a> 使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250">https://support.apple.com/zh-cn/HT201250</a></p><hr><h2 id="macOS-history"><a href="#macOS-history" class="headerlink" title="macOS history"></a>macOS history</h2><blockquote><p>第一次体验苹果虚拟机和黑苹果记得还是 Tiger 和 Leopard 的时候</p></blockquote><p>Version</p><p>Codename</p><p>Most recent version</p><p>Mac OS X 10.0</p><p>Cheetah</p><p>10.0.4 (June 22, 2001)</p><p>Mac OS X 10.1</p><p>Puma</p><p>10.1.5 (June 6, 2002)</p><p>Mac OS X 10.2</p><p>Jaguar</p><p>10.2.8 (October 3, 2003)</p><p>Mac OS X 10.3</p><p>Panther</p><p>10.3.9 (April 15, 2005)</p><p>Mac OS X 10.4</p><p>Tiger</p><p>10.4.11 (November 14, 2007)</p><p>Mac OS X 10.5</p><p>Leopard</p><p>10.5.8 (August 5, 2009)</p><p>Mac OS X 10.6</p><p>Snow Leopard</p><p>10.6.8 v1.1 (July 25, 2011)</p><p>Mac OS X 10.7</p><p>Lion</p><p>10.7.5 (September 19, 2012)</p><p>OS X 10.8</p><p>Mountain Lion</p><p>10.8.5 (12F45) (October 3, 2013)</p><p>OS X 10.9</p><p>Mavericks</p><p>10.9.5 (13F1112) (September 18, 2014)[170]</p><p>OS X 10.10</p><p>Yosemite</p><p>10.10.5 (14F27) (August 13, 2015)</p><p>OS X 10.11</p><p>El Capitan</p><p>10.11.6 (15G22010) (July 9, 2018)</p><p>macOS 10.12</p><p>Sierra</p><p>10.12.6 (16G2136) (September 26, 2019)</p><p>macOS 10.13</p><p>High Sierra</p><p>10.13.6 (17G14042) (November 12, 2020)</p><p>macOS 10.14</p><p>Mojave</p><p>10.14.6 (18G9323) (July 21, 2021)</p><p>macOS 10.15</p><p>Catalina</p><p>10.15.7 (19H1419) (September 23, 2021)</p><p>macOS 11</p><p>Big Sur</p><p>11.6 (20G165) (September 13, 2021)</p><p>macOS release history - <a href="https://en.wikipedia.org/wiki/MacOS">https://en.wikipedia.org/wiki/MacOS</a></p><h2 id="macOS-最新稳定版常见问题"><a href="#macOS-最新稳定版常见问题" class="headerlink" title="macOS 最新稳定版常见问题"></a>macOS 最新稳定版常见问题</h2><blockquote><p>macOS Catalina 升级至 Big Sur 遇到问题的解决方案</p></blockquote><p>问题描述： Mac 不能打开软件，提示检查为恶意软件 can’t be opened because Apple cannot check it for malicious software. App can’t be opened because it is from an unidentified developer</p><p>解决方法：</p><p>1<br>2</p><p># 打开 Terminal, 运行命令解决<br>sudo spctl –master-disable</p><p> </p><p>Mac &gt; System Preferences &gt; Security &amp; Privacy 多了一个选项 Anywhere</p><h2 id="常见的拯救方法"><a href="#常见的拯救方法" class="headerlink" title="常见的拯救方法"></a>常见的拯救方法</h2><blockquote><p>苹果官方客服的标准答复三板斧，有一定道理但不一定可以解决你的问题，属于玄学。重点还是要掌握正确的分析思路，检查日志和启动项，通过安全模式做对比交叉分析寻找蛛丝马迹</p></blockquote><ol><li>Reset NVRAM</li><li>Rest SMC</li><li>Use safe mode to isolate issues</li></ol><h3 id="重置-SMC"><a href="#重置-SMC" class="headerlink" title="重置 SMC"></a>重置 SMC</h3><p>先关机，然后断开电源，拔掉所有 USB 的连接，然后同时按住键盘左下角的 Shift，Control，Option 和开机键 15 秒。全过程 Mac 不会开机。15 秒后松手插上电源开机。</p><p>如何重置 Mac 上的系统管理控制器 (SMC) - <a href="https://support.apple.com/zh-cn/HT201295">https://support.apple.com/zh-cn/HT201295</a></p><h3 id="重置-NVRAM"><a href="#重置-NVRAM" class="headerlink" title="重置 NVRAM"></a>重置 NVRAM</h3><p>将 Mac 关机，然后开机并立即同时按住以下四个按键：Option、Command、P 和 R。您可以在大约 20 秒后松开这些按键，在此期间您的 Mac 可能看似在重新启动。</p><p>重置 Mac 上的 NVRAM 或 PRAM - <a href="https://support.apple.com/zh-cn/HT204063">https://support.apple.com/zh-cn/HT204063</a></p><h3 id="使用安全模式"><a href="#使用安全模式" class="headerlink" title="使用安全模式"></a>使用安全模式</h3><p>要以安全模式启动，请按照以下步骤操作：</p><ol><li>启动或重新启动 Mac，然后立即按住 Shift 键。显示屏上将出现 Apple 标志。如果没有看到 Apple 标志，请了解该如何操作。</li><li>看到登录窗口时，松开 Shift 键。如果启动磁盘使用 FileVault 进行了加密，系统可能会两次提示登录：第一次为解锁启动磁盘，第二次则为登录 Finder。</li></ol><p>使用安全模式查明 Mac 的相关问题 - <a href="https://support.apple.com/zh-cn/HT201262">https://support.apple.com/zh-cn/HT201262</a></p><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><p>如果以上都不能解决你的问题，且系统是最新的，硬件是没问题的，那么重装系统吧。哈哈，重装系统总是这么简单霸气的解决一些问题。</p><p>前提：</p><ol><li>保证你能连到 wifi 或者有线，因为重装系统需要连接远程服务器</li><li>保证有足够的电源，最好是附件有插板可以充电的情况下重装系统，这个过程还是比较久的，50 分钟左右。</li></ol><p>步骤如下：</p><ol><li>开机按住 Command (⌘)-R</li><li>出现的四个选项的界面选择第二个重装系统(Reinstall macOS)</li><li>等待重装系统完成即可</li></ol><p>如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904">https://support.apple.com/zh-cn/HT204904</a></p><h3 id="TimeMachine-恢复"><a href="#TimeMachine-恢复" class="headerlink" title="TimeMachine 恢复"></a>TimeMachine 恢复</h3><blockquote><p>TimeMachine 数据恢复的成本太高，需要先 Reinstall macOS 然后使用 TimeMacthine 恢复，再重新配置软件，不到万不得已之时不推荐</p></blockquote><ol><li>制作 U 盘启动</li><li>TimeMachine 恢复</li></ol><p>如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372">https://support.apple.com/zh-cn/HT201372</a></p><p>使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250">https://support.apple.com/zh-cn/HT201250</a></p><h2 id="Mac-的启动组合键"><a href="#Mac-的启动组合键" class="headerlink" title="Mac 的启动组合键"></a>Mac 的启动组合键</h2><p>若要使用这些组合键中的任何一个，请在按下电源按钮以开启 Mac 后或在 Mac 开始重新启动后，立即按住相应按键。请一直按住，直至电脑出现对应的行为。</p><p>Command (⌘)-R：从内建的 macOS 恢复系统启动。或者，您也可以使用 Option-Command-R 或 Shift-Option-Command-R 以通过互联网从 macOS 恢复功能启动。macOS 恢复功能可以安装不同版本的 macOS，具体取决于您在电脑启动时使用的组合键。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option (⌥)：启动进入“启动管理器”，您可以从中选取其他启动磁盘或宗卷（若可用）。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option-Command-P-R：重置 NVRAM 或 PRAM。如果您的 Mac 使用了固件密码，它会忽略这个组合键或从 macOS 恢复功能启动。</p><p>Shift (⇧)：以安全模式启动。</p><p>D：从内建的 Apple Hardware Test 或 Apple Diagnostics 实用工具启动，具体取决于您的 Mac 机型。或者，您也可以使用 Option-D 通过互联网从这个实用工具启动。</p><p>N：从兼容的 NetBoot 服务器启动（若可用）。要使用 NetBoot 服务器上默认的引导映像，则请按住 Option-N。配备 Apple T2 芯片的电脑不支持这个启动键。</p><p>Command-S：以单用户模式启动。这个组合键要求使用 macOS High Sierra 或更早版本。</p><p>T：以目标磁盘模式启动。</p><p>Command-V：以详细模式启动。</p><p>Mac 的启动组合键 - <a href="https://support.apple.com/zh-cn/HT201255">https://support.apple.com/zh-cn/HT201255</a></p><h2 id="有效的解决方法"><a href="#有效的解决方法" class="headerlink" title="有效的解决方法"></a>有效的解决方法</h2><blockquote><p>如果你遇到和我类似的问题，不妨尝试寻找下具体的错误日志，然后向 Google 或者咨询苹果客服求助</p></blockquote><ol><li>command + v 进入代码界面，等出现不停的输出 Too many corpses being created 这段代码的时候，说明是缓存太多造成的</li><li>command + R 进入 macOS 使用工具页面，左上角找到终端工具</li><li>输入以下代码，重命名数据库缓存就行了</li><li>然后再重新启动电脑，耐心等待一会儿就可以重新进入桌面</li></ol><p>1<br>2</p><p>cd &#x2F;Volumes&#x2F;Macintosh\ HD&#x2F;var&#x2F;db&#x2F;caches&#x2F;opendirectory&#x2F;<br>mv .&#x2F;mbr_cache .&#x2F;mbr_cache-old</p><h2 id="解决唤醒时黑屏只看见鼠标的问题"><a href="#解决唤醒时黑屏只看见鼠标的问题" class="headerlink" title="解决唤醒时黑屏只看见鼠标的问题"></a>解决唤醒时黑屏只看见鼠标的问题</h2><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><p>1<br>2<br>3<br>4<br>5</p><p>&#x2F;sbin&#x2F;fsck -fy<br>&#x2F;sbin&#x2F;mount -uw &#x2F;<br>rm -f &#x2F;Library&#x2F;Preferences&#x2F;com.apple.loginwindow.plist<br>rm -f &#x2F;var&#x2F;db&#x2F;.AppleUpgrade<br>reboot</p><h2 id="其它异常"><a href="#其它异常" class="headerlink" title="其它异常"></a>其它异常</h2><blockquote><p>最直接的方法莫过于检查日志文件</p></blockquote><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26</p><p># 如果非意外重启报错可以打开 console 控制台查看<br>pmset -g log</p><p># 常见的手动清理步骤<br>brew list<br>brew uninstall<br>brew uninstall v2ray-core</p><p>brew cask list<br>brew cask uninstall<br>brew cask v2rayu</p><p>brew services list<br>brew services stop<br>brew services stop v2rayu</p><p># 如果 system.log 有已删除但没有清理干净的自启动服务<br>launchctl unload -w ~&#x2F;Library&#x2F;LaunchAgents&#x2F;yanue.v2rayu.v2ray-core.plist</p><p># open(&#x2F;var&#x2F;db&#x2F;DetachedSignatures) - No such file or directory<br>sudo touch &#x2F;var&#x2F;db&#x2F;DetachedSignatures</p><p># 检查启动项清理脏数据<br>cd &#x2F;Library&#x2F;LaunchAgents<br>cd &#x2F;Library&#x2F;LaunchDaemons<br>sudo rm</p><p>Name</p><p>Path</p><p>系统日志文件夹</p><p>&#x2F;var&#x2F;log</p><p>系统日志文件</p><p>&#x2F;var&#x2F;log&#x2F;system.log</p><p>Mac 分析数据</p><p>&#x2F;var&#x2F;log&#x2F;DiagnosticMessages</p><p>系统应用程序日志</p><p>&#x2F;Library&#x2F;Logs</p><p>系统报告</p><p>&#x2F;Library&#x2F;Logs&#x2F;DiagnosticReports</p><p>用户应用程序日志</p><p>~&#x2F;Library&#x2F;Logs</p><p>用户报告</p><p>~&#x2F;Library&#x2F;Logs&#x2F;DiagnosticReports</p><p><a href="https://support.apple.com/zh-cn/HT200553">如果 Mac 因为出现问题而重新启动</a></p><p><a href="https://zxtechart.com/2017/05/10/mac-finder-stuck/">排查 Mac 中的 Finder 无限卡住的问题</a></p><p><a href="https://blog.macsales.com/45586-how-to-use-the-mac-console-app-to-diagnose-a-crash/">How to Use the Mac Console App to Diagnose a Crash</a></p><p><a href="https://blog.macsales.com/46475-macos-reversion-how-to-downgrade-from-mojave/">macOS Reversion: How to Downgrade from Mojave</a></p><p>如果遇到频繁卡死并黑屏无法唤醒，最后经常自动重启，我的解决步骤是</p><ol><li>移除了一些比较旧的应用</li><li>关闭了蓝牙等不需要使用的服务</li><li>清理了自启动的脏数据</li><li>最后 Reset NVRAM 和 SMC</li><li>如果电脑目前非常稳定，请不要考虑升级，一个从坑里爬出来的肺腑之言</li></ol><h2 id="不着急的解决方案"><a href="#不着急的解决方案" class="headerlink" title="不着急的解决方案"></a>不着急的解决方案</h2><p>联系 Apple 支持 - <a href="https://getsupport.apple.com/">https://getsupport.apple.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190822151646.gif&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.c</summary>
      
    
    
    
    <category term="Mac" scheme="https://jarod.vip/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows 10 Enterprise LTSC 2019_x64极度精简超详细ES5封装过程（一、系统精简）</title>
    <link href="https://jarod.vip/2022/09/29/Windows-10-Enterprise-LTSC-2019-x64%E6%9E%81%E5%BA%A6%E7%B2%BE%E7%AE%80%E8%B6%85%E8%AF%A6%E7%BB%86ES5%E5%B0%81%E8%A3%85%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E7%B2%BE%E7%AE%80%EF%BC%89/"/>
    <id>https://jarod.vip/2022/09/29/Windows-10-Enterprise-LTSC-2019-x64%E6%9E%81%E5%BA%A6%E7%B2%BE%E7%AE%80%E8%B6%85%E8%AF%A6%E7%BB%86ES5%E5%B0%81%E8%A3%85%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E7%B2%BE%E7%AE%80%EF%BC%89/</id>
    <published>2022-09-29T13:27:45.727Z</published>
    <updated>2022-09-29T13:27:45.727Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. 用到的软件</strong></p><p>1）Windows 10 Enterprise LTSC 2019 (x64)镜像：</p><p>2）NTlite 1.8：</p><p>3）Dism++：</p><p><strong>2. NTLite精简优化</strong> <strong>1）精简优化选项</strong></p><h4 id="本帖隐藏的内容"><a href="#本帖隐藏的内容" class="headerlink" title="本帖隐藏的内容"></a>本帖隐藏的内容</h4><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/100407o1gzgfbfafb2ag1i.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/100431noa9cl3ipacabbwh.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/100443bcymu1epyinzf0z0.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/100459mk9nykj3sii697sp.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/100510fzzneyt4zgv435rt.png"></p><p> 这里我诚恳的告诉大家千万不要移除本地化组件的内容，不要问为什么不能精简本地化，除非你想遇到重装系统后键盘不能用，输入法设置出问题以及各种Unknown Hard Error等错误</p><h4 id="本帖隐藏的内容-1"><a href="#本帖隐藏的内容-1" class="headerlink" title="本帖隐藏的内容"></a>本帖隐藏的内容</h4><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/101354z2e4gieh85lg1218.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/101406vg7no0oybnq7fbos.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/101416s7tlczecs5swkjw7.png"></p><p><strong>2）精简优化过程</strong>     解压镜像cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso得到cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24文件夹</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/093759b9szmgtuuu4x3kix.png"></p><p> 打开NTLite软件，在映像菜单栏下点击添加按钮，选择映像文件(ISO,WIM,ESD,SWM) 选项</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/093827ilgfnr3wo21a1a3x.png"></p><p> 在 cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24&#x2F;sources&#x2F; 目录下打开install.wim系统映像文件</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/093912pinilvwv7x679xzo.png"></p><p> 双击加载系统映像文件</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/093933aukvus3ewv536hgg.png"></p><p> 选择组件移除</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/093948trz6fkteatg1f64g.png"></p><p> 出现Windows组件移除警告窗口，点击确定</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094002e9my4gs6kmk2iufs.png"></p><p>点击展开全部，去掉组件前的勾选，即可移除想要删除的组件，移除的组件就是上面1）精简优化选项章节的精简选项表中的选项，这里为了方便大家寻找移除的组件，精简选项表是按照NTLite顺序进行排列的，你可以根据自己的需求进行自定义</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094017yrvo878szirv72z1.png"></p><p> 选择配置栏的功能设置，勾选SMB 1.0&#x2F;CIFS File Sharing Support，以保证Windows XP可以正常访问Windows 10的共享文件和打印机等</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094044xfpraiw6a6ugp6fi.png"></p><p> 选择配置栏的设置选项，按上面1）精简优化选项章节中的设置表进行如下配置，设置表中的优化选项同样是按照顺序排列的，其中加粗的选项是我更改后的</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094102r6v07mv3omr4aoo2.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094116qtxd1hvobbbyzyvx.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094127stz2f32wqw8qkp88.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094144lbvsfjhc7kx6xz60.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094201e1i0oaa6ng4g81az.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094214djo9444exlxhh2xp.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094228nc1an314xsw0qpnq.png"></p><p> 选择配置栏的服务选项，禁用SysMain服务（超级预读服务很占内存，并且对固态硬盘几乎是负优化，如果你使用的是固态硬盘那么建议禁用）</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094243c6sfcl9ws1bz9slm.png"></p><p> 选择整合栏中更新整合选项，点击左上角的添加，选择最新的在线更新补丁选项，将补丁下载下来后，选择将下载好补丁加入到更新队列中</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094309wl0zpp4fv2zhqq74.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094323vqm6yjqycqy8z6qq.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094336oqhnr8hn9x79xx9o.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094410e911zsyss4sk1bbf.png"></p><p> 选择整合栏的更新整合选项，点击添加更新包</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094522gm44ph0ydn34n3ji.png"></p><p> 在弹出窗口中选择cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24\sources\sxs路径下的microsoft-windows-netfx3-ondemand-package<del>31bf3856ad364e35</del>amd64~~.cab文件，将.Net Framework 3.5集成到系统中</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094535m9rsjjybryoibf99.png"></p><p> 选择自动栏的后期任务选项，添加禁用休眠和禁用用户密码过期模版</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094553kgbjsp1jj6ow6ong.png"></p><p> 选择结束栏中的应用，点击开始按钮进行处理</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094605cbuqcw2f5rrcchcb.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094615jhiidzrii466dgpd.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094628nbufcp391bq413g8.png"></p><p> 将精简后的映像install.wim从 cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24&#x2F;sources&#x2F; 目录中剪切出来保存好，接下来的过程会用到它， 原版映像大约3.39G，精简后大约3.43G，因为添加了很多补丁，所以精简后的系统映像反而变大了一点</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094643qz393z3zxs9u1cl4.png"></p><p> 可以直接在NTLite的预设中导入会话，将之前的保存的会话设置应用到新解压后的系统映像来节省精简的时间</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094654rz52ccmq92k2m5ym.png"></p><p> 点击确定</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094707e7re77cwyagpc7qp.png"></p><p> 右键NTLite右侧窗口里导入的预设文件，选择加载的覆盖选项即可将预设应用于当前的系统映像</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094724v44qnq4z559j09qq.png"></p><p> 当导入的预设前的圆点变成绿色，则说明预设已经导入成功</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/094736xg97vh3tzv72nh99.png">  </p><p><strong>3. Dism++精简优化</strong></p><p><strong>1）精简优化过程</strong>   打开Dism++，点击文件栏选择挂载映像选项</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092555bf8fxjm3atf8745x.png"></p><p> 在弹出的挂载映像窗口中填入使用NTLite精简优化好的install.wim系统映像所在目录，以及它的挂载目录</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092611gbe3wgtgg29g3ekj.png"></p><p> 当系统映像挂载好并准备就绪后，点击窗口中央的打开会话四个字，即可打开Dism软件针对当前系统映像的设置优化界面</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092622v9c4lni9cyccilry.png"></p><p> 选择系统优化，然后在右侧进行相关的设置</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092637aoo5tojlqnsmstut.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092650bmckbcvl6xyhlyql.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092702ixr4q4lz8q0azxml.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092719n5c5stt5yy1q1cny.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092733oej24242mvtzz2jl.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092745gn6xz6c0zajd6bab.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092758bcdzz2i4vez22zet.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092809efjtjtcifsgs3fcg.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092820crnc5qqncrkxvn2q.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092834w9vv5rris7srb7za.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092850bpxe0aduauan8jp4.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092918bxs022oyd1ruy401.png"></p><p> 选择文件栏的保存映像选项，并在弹出窗口中选择直接保存映像</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092931gmdxfnbfv5rbhh2m.png"></p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092947zo3o4em17c139ccf.png"></p><p> 最后卸载映像</p><p><img src="https://img.itsk.com/itkdx/attachment/forum/202006/03/092958ybomo5rq6y3q6h3o.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;1. 用到的软件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1）Windows 10 Enterprise LTSC 2019 (x64)镜像：&lt;/p&gt;
&lt;p&gt;2）NTlite 1.8：&lt;/p&gt;
&lt;p&gt;3）Dism++：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. NTLit</summary>
      
    
    
    
    <category term="Win" scheme="https://jarod.vip/categories/Win/"/>
    
    
  </entry>
  
  <entry>
    <title>编译Google BBR v2 Alpha</title>
    <link href="https://jarod.vip/2022/09/29/%E7%BC%96%E8%AF%91Google-BBR-v2-Alpha/"/>
    <id>https://jarod.vip/2022/09/29/%E7%BC%96%E8%AF%91Google-BBR-v2-Alpha/</id>
    <published>2022-09-29T13:27:45.721Z</published>
    <updated>2022-09-29T13:27:45.721Z</updated>
    
    <content type="html"><![CDATA[<p>我大概几个月前编译过一个旧版本的，最近又更新了，不过还是预览版，没有正式发布。</p><p>上次那个版本的kernel已经飙到5.2了，这次的更是直接到5.4了，要是正式版放出来我估摸着怎么着也得上5.0。。</p><p>上次是随便撸了个脚本没把编译步骤写出来，这次想到如果大家都在自己的机器上编译的话，就可以用自己机器旧内核的配置，这样炸的概率会小很多，当然编译kernel对机器硬件配置要求较高，一般的VPS就别费劲了，浪费时间。。</p><p>另外这次的版本编译起来有几个坑。。第一次编译几分钟报了个错，解决了再来跑一遍竟然后面又报个缺少rsync。。我寻思你要rsync干啥？？</p><p>以下步骤在Debian10上测试通过。</p><p>apt -y install build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync git screen</p><p>编译要花很长时间，建议开个screen守护一下：</p><p>screen -S kernel</p><p>下载源码：</p><p>git clone -b v2alpha <a href="https://github.com/google/bbr.git">https://github.com/google/bbr.git</a> cd bbr</p><p>使用当前机器的旧内核配置，并自动帮你把新内核上的新功能选项以默认值进行配置：</p><p>make olddefconfig</p><p>打开图形化菜单：</p><p>make menuconfig</p><p>选择Networking support：</p><p><a href="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-33-14.png"><img src="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-33-14.png"></a></p><p>选择Networking options：</p><p><a href="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-33-38.png"><img src="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-33-38.png"></a></p><p>选择TCP: advanced…：</p><p><a href="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-34-59.png"><img src="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-34-59.png"></a></p><p>然后在里面你可以看到BBR2的新选项，这里有两种编译方式，M是构建为模块，*是直接构建到内核：</p><p><a href="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-36-19.png"><img src="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-36-19.png"></a></p><p>如果这里选为*的话，你可以在下面的Default TCP…内把默认的拥塞控制协议直接设置为BBR2：</p><p><a href="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-36-32.png"><img src="https://lala.im/wp-content/uploads/2019/11/lala.im_2019-11-21_13-36-32.png"></a></p><p>这样安装好这个内核后就不需要去动sysctl.conf了，默认就开启BBR2。</p><p>当然你用模块也可以，就是需要自己加载模块罢了。设置好了后SAVE一下退出这个界面即可。</p><p>下面是我踩过的坑，解决办法，手动编辑.config：</p><p>nano .config</p><p>把里面的这一行注释掉或者留空里面的值：</p><p>CONFIG_SYSTEM_TRUSTED_KEYS=“debian&#x2F;certs&#x2F;debian-uefi-certs.pem”</p><p>为节省编译时间，关闭DEBUG：</p><p>CONFIG_DEBUG_INFO=n</p><p>做好上面这些后，现在就可以开始编译了：</p><p>make deb-pkg LOCALVERSION=-imlala -j$(nproc)</p><p>编译时间视你的机器性能而定，看看片锻炼下身体，回来应该就编译好了，在上级目录有可用的deb包，使用dpkg安装然后重启：</p><p>cd .. dpkg -i linux-image-5.4.0-rc6-imlala_5.4.0-rc6-imlala-1_amd64.deb<br>dpkg -i linux-headers-5.4.0-rc6-imlala_5.4.0-rc6-imlala-1_amd64.deb<br>reboot</p><p>直接编译到内核的使用下面的方法查看BBR2算法是否已经生效：</p><p>sysctl net.ipv4.tcp_congestion_control</p><p>正常的话会回显：</p><p>net.ipv4.tcp_congestion_control = bbr2</p><p>编译为模块的需要自己手动加载模块再配置sysctl.conf使其生效：</p><p>modprobe tcp_bbr2<br>echo “tcp_bbr2” &gt;&gt; &#x2F;etc&#x2F;modules<br>echo “net.ipv4.tcp_congestion_control &#x3D; bbr2” &gt;&gt; &#x2F;etc&#x2F;sysctl.conf<br>sysctl -p</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我大概几个月前编译过一个旧版本的，最近又更新了，不过还是预览版，没有正式发布。&lt;/p&gt;
&lt;p&gt;上次那个版本的kernel已经飙到5.2了，这次的更是直接到5.4了，要是正式版放出来我估摸着怎么着也得上5.0。。&lt;/p&gt;
&lt;p&gt;上次是随便撸了个脚本没把编译步骤写出来，这次想到</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jarod.vip/2022/09/27/hello-world/"/>
    <id>https://jarod.vip/2022/09/27/hello-world/</id>
    <published>2022-09-26T16:42:10.342Z</published>
    <updated>2022-09-26T16:42:10.342Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用 archinstall 安装 Arch Linux 和 KDE 桌面环境</title>
    <link href="https://jarod.vip/2022/09/19/%E4%BD%BF%E7%94%A8-archinstall-%E5%AE%89%E8%A3%85-arch-linux-%E5%92%8C-kde-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    <id>https://jarod.vip/2022/09/19/%E4%BD%BF%E7%94%A8-archinstall-%E5%AE%89%E8%A3%85-arch-linux-%E5%92%8C-kde-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</id>
    <published>2022-09-18T17:02:46.000Z</published>
    <updated>2022-09-29T13:27:46.210Z</updated>
    
    <content type="html"><![CDATA[<p>本文将指导使用 archinstall 安装 Arch Linux 和 KDE 桌面环境。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，<a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">安装 Arch Linux</a> 是一件非常复杂并痛苦的事情，您需要一定的 Linux 基础，然后使用命令行进行硬盘分区，安装自己需要的软件，Arch Linux 官方也并未提供 GUI 安装程序，所以很多想尝试 Arch Linux 的用户都会被劝退在安装这一步骤上。</p><p><a href="https://github.com/archlinux/archinstall">archinstall</a> 是一个 Python 写的 Arch Linux <a href="https://wiki.archlinux.org/title/Archinstall">安装向导程序</a>，我们可以很方便地使用 <code>archinstall</code> 安装 Arch Linux。</p><p>Arch Linux 发布 2022.05.01 的 iso 后，已经默认集成了 <code>archinstall</code>，于是您可以参考本教程无痛安装 Arch Linux，为了方便期间，本教程的安装是基于 <code>VMware Workstation</code>，理论上和你本地挂载 ISO 安装并无区别。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，获取安装映像，您可以在<a href="https://archlinux.org/download/">下载页面</a>下载最新的 iso 镜像文件，您可以选择速度最快的 mirror 进行下载，这里推荐两个下载链接</p><p>国外用户，使用官方的镜像：</p><p><a href="https://mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso">https://mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso</a></p><p>国内用户，使用清华大学的镜像：</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/archlinux-x86_64.iso">https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/archlinux-x86_64.iso</a></p><p>下载后您需要准备个 U 盘或移动硬盘，然后使用一些工具，比如 <a href="https://rufus.ie/zh/">Rufus</a>，这里不再阐述，其他方法请参考<a href="https://wiki.archlinux.org/title/USB_flash_installation_medium_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>。</p><p><em>另外，您需要确认主板 BIOS 里没有奇奇怪怪的设置，比如某些针对 Windows 系统的设置，比如快速启动、CSM 安全启动、TPM 模块等都设置需要自己调整，否则默认配置可能会导致安装完 Arch Linux 后无法进入系统引导。</em></p><h2 id="安装-Arch-Linux-系统"><a href="#安装-Arch-Linux-系统" class="headerlink" title="安装 Arch Linux 系统"></a>安装 Arch Linux 系统</h2><p>启动进入引导后，我们会看到熟悉的 Arch Linux 界面：</p><p><img src="/2022/09/1-1.png"></p><p>默认进入后即可看到 Live CD 已经正常工作：</p><p><img src="/2022/09/2-1.png"></p><p>我们可以运行 <code>installation_guide</code> 命令查看安装文档，当然都是英文的，对英语不好的朋友也可以直接参考<a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">中文的文档说明</a>：</p><p><img src="/2022/09/3-1.png"></p><p><img src="/2022/09/4-1.png"></p><p>按 <code>Q</code> 退出，我们可以直接运行 <code>archinstall</code> 进行图形化安装向导：</p><p><img src="/2022/09/5-1.png"></p><p>然后我们会看到 <code>archinstall</code> 的向导界面：</p><p><img src="/2022/09/6-1.png"></p><p>目前我们能看到的选项有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Select Archinstall language</span><br><span class="line">Select keyboard layout</span><br><span class="line">Select mirror region</span><br><span class="line">Select harddrives</span><br><span class="line">Select bootloader</span><br><span class="line">Use swap</span><br><span class="line">Specify hostname</span><br><span class="line">Set root password</span><br><span class="line">Specify superuser account</span><br><span class="line">Specify user account</span><br><span class="line">Specify profile</span><br><span class="line">Select audio</span><br><span class="line">Select kernels</span><br><span class="line">Additional packages to install</span><br><span class="line">Configure network</span><br><span class="line">Select timezone</span><br><span class="line">Set automatic time <span class="built_in">sync</span> (NTP)</span><br><span class="line">Additional repositories to <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>然后我们就一步一步来安装：</p><p><code>Select Archinstall language</code> 这里可以选择 <code>archinstall</code> 的界面语言，很可惜，截止本文发布，并没有中文。</p><p><code>Select keyboard layout</code> 选择键盘布局，默认情况你的键盘布局应该都是 <code>us</code>，除非你是德国等国家的用户，那么请自行选择。</p><p><code>Select mirror region</code> 可以选择最合适的镜像，建议选择和您当前网络一致的国家或地区：</p><p><img src="/2022/09/7-1.png"></p><p>记得按空格选择，然后按回车继续。</p><p><code>Select harddrives</code> 可以选择安装的硬盘，请自行选择需要安装的硬盘，切记看清楚硬盘大小，不要装错了硬盘最后拍大腿：</p><p><img src="/2022/09/8-1.png"></p><p>选择硬盘后会让您选择如何分区，如果没有特殊需求，直接选择 <code>Wipe all selected drives and use a best-effort default partition layout</code>，这样会把你的硬盘全部格式化，切记备份重要数据，不然安装了以后拍大腿：</p><p><img src="/2022/09/9-1.png"></p><p>然后会询问您硬盘分区格式，可选 <code>btrfs</code>，<code>ext4</code>，<code>f2fs</code> 或 <code>xfs</code>，如果没有特殊需求，可以选最常用的 <code>ext4</code>：</p><p><img src="/2022/09/10-1.png"></p><p>然后会询问您是否要对 <code>/home</code> 目录单独分区，这里主要存放用户的数据，默认建议单独分区，实际操作中会分配大概 80% 的硬盘空间给 <code>/home</code> 目录，你也可以一股脑都分给 <code>/</code>，请自行决定：</p><p><img src="/2022/09/11-1.png"></p><p>完成后会多出一个 <code>Set encryption password</code> 选项，如果您需要对硬盘加密，可以选择，如果没需要可以跳过。</p><p><img src="/2022/09/12-1.png"></p><p>然后我们直接跳过 <code>Select bootloader</code> 和 <code>Use swap</code>，因为他已经自动给您设置好了，然后如果您喜欢的话，可以给您的机器设置一个 <code>hostname</code> 和 <code>root</code> 密码，如果没有特殊需求，也可以跳过 <code>Specify hostname</code> 和 <code>Set root password</code>，我们直接来到 <code>Specify superuser account</code>，设置一个拥有 <code>sudo</code> 权限的超级用户，这个用户是日常登录和操作使用，请务牢记用户名和密码：</p><p><img src="/2022/09/13-1.png"></p><p>输入用户名：</p><p><img src="/2022/09/14-1.png"></p><p>输入密码，Linux 终端下输入密码是不显示的，不要以为自己产生幻觉输错了：</p><p><img src="/2022/09/15-1.png"></p><p>可能会提示您的密码太弱，自行斟酌是否需要修改：</p><p><img src="/2022/09/16-1.png"></p><p>然后再输入一次密码进行验证：</p><p><img src="/2022/09/17-1.png"></p><p>成功后选择 <code>Confirm and exit</code> 即可：</p><p><img src="/2022/09/18-1.png"></p><p>然后我们也可以跳过其他选项，直接来到 <code>Configure network</code>：</p><p><img src="/2022/09/19-1.png"></p><p>因为我们希望安装 KDE 桌面环境，所以选择 <code>Use NetworkManager</code>：</p><p><img src="/2022/09/20-1.png"></p><p>如果是服务器环境，可以选择 <code>Manual configuration</code> 手工配置网络。</p><p>然后我们选择时区，进入 <code>Select timezone</code>：</p><p><img src="/2022/09/21-1.png"></p><p>按照您本地的时区来选择，可以使用 <code>/</code> 然后输入前几个字符快速搜索，比如 <code>/shanghai</code>：</p><p><img src="/2022/09/22-1.png"></p><p>一切准备就绪，我们可以选择 <code>Save configuration</code> 来保存配置，也可以直接选 <code>Install</code> 进行安装：</p><p><img src="/2022/09/23-1.png"></p><p><img src="/2022/09/24-1.png"></p><p><img src="/2022/09/25-1.png"></p><p>系统会提示 <code>Would you like to chroot into the newly created installation and perform post-installation configuration?</code>，这里我们直接选择 <code>Yes</code>，然后进入安装：</p><p><img src="/2022/09/26-1.png"></p><p>霹雳哗啦安装完毕后，我们可以安装一些常用的软件，比如 <code>KDE</code> 桌面环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma-meta plasma packagekit-qt5</span><br></pre></td></tr></table></figure><p>没有特殊需求都选择默认一路回车即可：</p><p><img src="/2022/09/27-1.png"></p><p><img src="/2022/09/28-1.png"></p><p>安装 KDE 比较慢，因为软件包较大，请耐心等待安装完成。</p><p>安装完成后开启 <code>sddm</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><p>然后我们使用 <code>exit</code> 命令退出并使用 <code>reboot</code> 命令重启：</p><p><img src="/2022/09/29-1.png"></p><h2 id="安装并配置-Arch-Linux-的软件"><a href="#安装并配置-Arch-Linux-的软件" class="headerlink" title="安装并配置 Arch Linux 的软件"></a>安装并配置 Arch Linux 的软件</h2><p>重启后我们就可以看到熟悉的登录界面啦：</p><p><img src="/2022/09/30-1.png"></p><p>登录后会发现除了个桌面啥东西都没有，此时我们可以按键盘 <code>CTRL</code> + <code>ALT</code> + <code>F2</code> 进入 <code>tty2</code> 终端：</p><p><img src="/2022/09/31-1.png"></p><p>输入用户名和密码登录：</p><p><img src="/2022/09/32-1.png"></p><p>然后开始安装一些常用软件，比如 KDE 的终端软件 Konsole 和文本编辑器 Kate：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S konsole kate</span><br></pre></td></tr></table></figure><p><img src="/2022/09/33-1.png"></p><p>安装完成后，我们可以按键盘 <code>CTRL</code> + <code>ALT</code> + <code>F1</code> 重新进入 KDE 桌面环境，然后按 <code>Win</code> 键搜索 <code>konsole</code> 进入终端：</p><p><img src="/2022/09/34-1.png"></p><p>这里推荐一些常规和必要的软件包：</p><p>如果您是 Intel 的 CPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S intel-ucode</span><br></pre></td></tr></table></figure><p>如果您是 AMD 的 CPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S amd-ucode</span><br></pre></td></tr></table></figure><p>如果您是 AMD 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xf86-video-amdgpu mesa</span><br></pre></td></tr></table></figure><p>如果您是 NVIDIA 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S nvidia mesa</span><br></pre></td></tr></table></figure><p>如果您是 Intel 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xf86-video-intel mesa</span><br></pre></td></tr></table></figure><p>关于 Arch Linux 下 GPU 配置可以参考<a href="https://wiki.archlinux.org/title/Xorg#Driver_installation">这里</a>和<a href="https://wiki.archlinux.org/title/AMDGPU">这里</a>。</p><p>然后安装一些常见的工具包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S inetutils iproute2 iputils procps-ng psmisc sysfsutils <span class="built_in">which</span> wget nano vim sudo unzip mtr traceroute dnsutils lsb-release ca-certificates bash-completion logrotate openssh less rsync</span><br></pre></td></tr></table></figure><p>部分软件是需要自行开启并设置开机自启动的，比如 <code>OpenSSH</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now sshd</span><br></pre></td></tr></table></figure><p>然后安装个浏览器，Linux 下还是推荐用 <code>Firefox</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S firefox</span><br></pre></td></tr></table></figure><p>安装完成后可以然后按 <code>Win</code> 键搜索 <code>firefox</code> 并右键图标使用 <code>Add to Desktop</code> 创建桌面快捷方式：</p><p><img src="/2022/09/35-1.png"></p><p>此时桌面上就有 <code>Firefox</code> 的图标啦：</p><p><img src="/2022/09/36-1.png"></p><h2 id="解决中文显示乱码问题"><a href="#解决中文显示乱码问题" class="headerlink" title="解决中文显示乱码问题"></a>解决中文显示乱码问题</h2><p>我们会遇到一个问题，此时打开中文网页都是乱码：</p><p><img src="/2022/09/37-1.png"></p><p>而且网页里包含的 Emoji 🤣也是一个个方框哦，所以我们参考<a href="https://wiki.archlinux.org/title/Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>和<a href="https://wiki.archlinux.org/title/fonts#Emoji_and_symbols">这里</a>，首先安装字体包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji</span><br></pre></td></tr></table></figure><p>然后使用 <code>Konsole</code> 创建一个 <code>.config/fontconfig/fonts.conf</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .config/fontconfig</span><br><span class="line">vim .config/fontconfig/fonts.conf</span><br></pre></td></tr></table></figure><p>复制以下内容，使用 <code>vim</code> 编辑文件，按 <code>i</code> 开始编辑，按 <code>Ctrl + Shift + V</code> 或 <code>Shift + Insert</code> 或直接在 Konsole 里右键 <code>Paste</code>，然后粘贴以下内容后，完成后按 <code>ESC</code> 键，然后输入 <code>:wq</code> 完成编辑：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">fontconfig</span> <span class="keyword">SYSTEM</span> <span class="string">&#x27;urn:fontconfig:fonts.dtd&#x27;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- $&#123;XDG_CONFIG_HOME&#125;/fontconfig/fonts.conf</span></span><br><span class="line"><span class="comment">        - vim:ft=xml:fenc=utf-8:noet:ts=3:sw=3:</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">match</span> <span class="attr">target</span>=<span class="string">&quot;font&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;antialias&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;autohint&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dpi&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">double</span>&gt;</span>96<span class="tag">&lt;/<span class="name">double</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hinting&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hintstyle&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>hintslight<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lcdfilter&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>lcdlight<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rgba&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>rgb<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;size&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">int</span>&gt;</span>15<span class="tag">&lt;/<span class="name">int</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dir</span>&gt;</span>~/.fonts<span class="tag">&lt;/<span class="name">dir</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fontconfig</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后清理字体缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fc-cache -fv</span><br></pre></td></tr></table></figure><p>清理完事后会提示 <code>fc-cache: succeeded</code>，然后我们使用 <code>fc-match -s grep &#39;Noto Sans CJK&#39;</code> 命令查看中文字体是否生效：</p><p><img src="/2022/09/38-1.png"></p><p>然后重新登录用户，或者直接 <code>sudo reboot</code> 重启电脑，再次打开 <code>Firefox</code> 即可看到中文字体完美显示：</p><p><img src="/2022/09/39-1.png"></p><h2 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h2><p>参考<a href="https://wiki.archlinux.org/title/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>，我们直接安装 <code>fcitx5</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im fcitx5-qt fcitx5-gtk fcitx5-chinese-addons fcitx5-pinyin-zhwiki</span><br></pre></td></tr></table></figure><p>然后修改全局变量环境文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/environment</span><br></pre></td></tr></table></figure><p>加入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">INPUT_METHOD=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><p>重启后即可生效，在 KDE 里按 <code>Win</code> 键搜索 <code>Input Method</code> 后进入 <code>Input Method</code> 即可配置输入法：</p><p><img src="/2022/09/40-1.png"></p><p>选择 <code>Input Method</code>，然后点击 <code>Add Input Method...</code>：</p><p><img src="/2022/09/41-1.png"></p><p>搜索 <code>pinyin</code> 然后添加<code>简体中文</code>下的 <code>Pinyin</code>：</p><p><img src="/2022/09/42-1.png"></p><p>点击 <code>Add</code> 后记得点击 <code>Apply</code> 生效，然后我们可以看到任务栏右下角的键盘图标，右键即可看到 <code>Pinyin</code> 输入法，可以点击 <code>restart</code> 生效任何修改的配置：</p><p><img src="/2022/09/43-1.png"></p><p>第一次打开拼音输入法会提示你是否需要开启云拼音预测，可以按照自己的喜好选择：</p><p><img src="/2022/09/44-1.png"></p><p>然后我们随便打开一个文本编辑器，按 <code>Ctrl</code> + <code>空格</code> 即可开启拼音输入法：</p><p><img src="/2022/09/45-1.png"></p><h2 id="配置第三方源"><a href="#配置第三方源" class="headerlink" title="配置第三方源"></a>配置第三方源</h2><p>Arch Linux 官方提供了一些第三方源，这里我们推荐 <a href="https://aur.archlinux.org/">AUR</a> 和 <a href="https://www.archlinuxcn.org/">Archlinuxcn</a></p><p>安装 AUR 的包管理助手 <a href="https://github.com/Jguer/yay">yay</a> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S base-devel git</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span></span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span>/opt</span><br><span class="line"><span class="built_in">cd</span> .<span class="built_in">local</span>/opt</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p><em>国内网络的用户可能无法流畅安装编译 yay，需要一些魔法操作，请自行解决。</em></p><p>也可以直接安装打包好的二进制包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git base-devel</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span></span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span>/opt</span><br><span class="line"><span class="built_in">cd</span> .<span class="built_in">local</span>/opt</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay-bin.git</span><br><span class="line"><span class="built_in">cd</span> yay-bin</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>然后即可使用 <code>yay -S</code> 来安装 <code>AUR</code> 中的软件，比如安装 <code>Microsoft Edge</code> 浏览器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S microsoft-edge-stable-bin</span><br></pre></td></tr></table></figure><p>没有特殊需求的话一路回车即可安装。</p><p>也可以使用 <code>yay -Syu</code> 直接更新系统和 AUR 仓库里的软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -Syu</span><br></pre></td></tr></table></figure><p>添加 <code>Archlinuxcn</code> 源：</p><p>修改 <code>/etc/pacman.conf</code> 文件，加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://repo.archlinuxcn.org/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>国内网络用户可以使用清华大学的源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>然后更新系统并安装 <code>archlinuxcn-keyring</code> 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu</span><br><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><p>如果遇到类似这样的错误提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">==&gt; Appending keys from archlinuxcn.gpg...</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br></pre></td></tr></table></figure><p>说明你本地的系统时间没有和 NTP 服务器同步，我们可以手工打开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-ntp 1</span><br><span class="line">sudo timedatectl status</span><br></pre></td></tr></table></figure><p>然后删除旧的 GPG Key 缓存文件并重新生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -fr /etc/pacman.d/gnupg</span><br><span class="line">sudo pacman-key --init</span><br><span class="line">sudo pacman-key --populate</span><br></pre></td></tr></table></figure><p>然后重新安装 <code>archlinuxcn-keyring</code> 即可正常工作。</p><p><em>请注意 AUR 里的很多软件分两种发布形式，一种是带 -bin 结尾的二进制包，安装后直接可用，一种是不带的，就是从源码编译安装，本地不一定能装的上，请自行选择。</em></p><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p>本教程仅适合有一定 Linux 基础和动手能力的小伙伴，如果您想从头开始学习安装一个 Arch Linux，那么这两个教程一定很适合您学习</p><ul><li><a href="https://www.viseator.com/2017/05/17/arch_install/">以官方 Wiki 的方式安装 ArchLinux</a></li><li><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/">Arch Linux 安装使用教程 - ArchTutorial - Arch Linux Studio</a></li></ul><h2 id="推荐软件"><a href="#推荐软件" class="headerlink" title="推荐软件"></a>推荐软件</h2><ul><li><a href="https://archlinux.org/packages/extra/x86_64/firefox/">Firefox</a></li><li><a href="https://archlinux.org/packages/extra/x86_64/thunderbird/">Thunderbird</a></li><li><a href="https://aur.archlinux.org/packages/vscodium-bin">VSCodium</a></li><li><a href="https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/typora">Typora</a></li><li><a href="https://aur.archlinux.org/packages/github-desktop-bin">Github Desktop</a></li><li><a href="https://aur.archlinux.org/packages/1password">1Password</a></li><li><a href="https://aur.archlinux.org/packages/microsoft-edge-stable-bin">Microsoft Edge</a></li><li><a href="https://archlinux.org/packages/extra/x86_64/chromium/">Chromium</a></li></ul><p>最后秀一下我的 Arch Linux：</p><p><img src="/2022/09/tqA6ZHukDrvi9cg-1.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文将指导使用 archinstall 安装 Arch Linux 和 KDE 桌面环境。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;众所周知，&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="Arch Linux" scheme="https://jarod.vip/tags/Arch-Linux/"/>
    
    <category term="archinstall" scheme="https://jarod.vip/tags/archinstall/"/>
    
  </entry>
  
  <entry>
    <title>AdGuard Home 自建 DNS 防污染、去广告教程</title>
    <link href="https://jarod.vip/2022/09/02/adguard-home-%E8%87%AA%E5%BB%BA-dns-%E9%98%B2%E6%B1%A1%E6%9F%93%E3%80%81%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%95%99%E7%A8%8B-2-%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E8%AE%BE%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://jarod.vip/2022/09/02/adguard-home-%E8%87%AA%E5%BB%BA-dns-%E9%98%B2%E6%B1%A1%E6%9F%93%E3%80%81%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%95%99%E7%A8%8B-2-%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E8%AE%BE%E7%BD%AE%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-09-02T15:06:02.000Z</published>
    <updated>2022-09-29T13:27:46.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇教程来详细讲解如何正确的设置 Ad­Guard Home ，来更有效的防止 DNS 污染以及去广告。与其它 Ad­Guard Home 教程的只讲方法、不讲逻辑的胡乱设置不同，认真看完这篇教程你会收获大量的知识和启发。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h3><p>文字介绍已经很好理解了，按需设置即可。重点是以下几个，如果你尚处于单身状态，那么就不要开启，否则会影响生理卫生知识的学习。</p><ul><li><strong>使用 AdGuard【家长控制】服务</strong>：如果家中有尚未成年的孩子，建议开启，屏蔽成人内容。</li><li><strong>强制安全搜索</strong>：在 Bing、Google、Yandex、YouTube 等网站上强制使用安全搜索，屏蔽 NSFW 内容。</li></ul><p> </p><p><img src="/2022/09/20201021160826.png"></p><p> </p><h3 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h3><p> </p><p><img src="/2022/09/20201020032250.png"></p><p> </p><h4 id="上游-DNS-服务器"><a href="#上游-DNS-服务器" class="headerlink" title="上游 DNS 服务器"></a>上游 DNS 服务器</h4><p><a href="https://p3terx.com/go/aHR0cHM6Ly9rYi5hZGd1YXJkLmNvbS96aC9nZW5lcmFsL2Rucy1wcm92aWRlcnM">AdGuard 文档</a>中给出了一些知名的 DNS 服务器供选择。</p><p>根据所在网络环境的不同推荐以下两组支持 ECS 功能的 DNS 服务器。如果有科学魔法爱国上网需求，你应该部署两个 Ad­Guard Home ，通过 DNS 分流才能达到较为理想的防污染和去广告效果。</p><ul><li><p>中国大陆网络环境推荐选择<a href="https://p3terx.com/go/aHR0cDovL3BkbnMuZG5zcG9kLmNuLw">腾讯 (DNSPod)</a> 和<a href="https://p3terx.com/go/aHR0cHM6Ly93d3cuYWxpZG5zLmNvbS8">阿里云</a>的公共 DNS 。使用它们你会惊奇的发现偶尔某些不存在的网站都是能正常解析的，只不过解析的结果并不是离你的代理服务器最近的 IP ，所以效果并不理想，而且非常不稳定。</p><blockquote><p><strong>TIPS:</strong> 中国大陆不推荐使用任何海外的 DNS ，因为延迟很高且都受到了不同程度的干扰，可用性不高，强行设置只会得到减速效果或者报错。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tls://dns.pub</span><br><span class="line">https://dns.pub/dns-query</span><br><span class="line">tls://dns.alidns.com</span><br><span class="line">https://dns.alidns.com/dns-query</span><br></pre></td></tr></table></figure></li><li><p>国际网络环境，比如海外的 VPS 或者给科学魔法爱国上网软件做 DNS ，则推荐使用 <a href="https://p3terx.com/go/aHR0cHM6Ly9kbnMuZ29vZ2xlLw">Google</a> 和 <a href="https://p3terx.com/go/aHR0cHM6Ly93d3cucXVhZDkubmV0Lw">Quad9</a> 的公共 DNS。给科学魔法爱国上网软件使用的前提是它们必须在魔法名单中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tls://dns.google</span><br><span class="line">https://dns.google/dns-query</span><br><span class="line">tls://dns11.quad9.net</span><br><span class="line">https://dns11.quad9.net/dns-query</span><br></pre></td></tr></table></figure></li></ul><p>如果你看过《<a href="https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-0.html">AdGuard Home 是什么？为什么无法去广告？</a>》那篇文章，那么你一定还记得 DoT&#x2F;​DoH 技术。所以这里的上游 DNS 自然是要选择 DoT&#x2F;​DoH 加密技术的服务器的，可以防止 DNS 解析记录被劫持、篡改以及跟踪。缺点是可能对解析速度会有些许影响，毕竟 TCP 协议不如 UDP 来得有效率，且加解密需要一点时间，不过在机器性能不错且网络通畅的情况下其实是可以忽略的，都是毫秒级别的差距。</p><p><strong>上游 DNS 服务器</strong>输入框下面有几个单选项，字面理解应该是解析策略、模式之类的选项，官方暂时没有给出详细介绍，所以博主根据字面含义和自身实际体验总结如下：</p><ul><li><strong>负载均衡</strong>：使用加权随机算法来选择最快的服务器。用到了算法，这就很玄学了。实际其实就是随机选择一个上游 DNS 服务器中的一个进行解析请求，哪个延迟低就更偏向于用哪一个。</li><li><strong>并行请求</strong>：同时请求所有上游 DNS 服务器，取最快给出的响应结果，所以解析速度很快。在上游 DNS 服务器设置合理的情况下属于万金油方案，解析速度和访问速度都很快。所以也非常适合上游 DNS 服务器连接延迟大和不稳定的情况，就比如科学魔法爱国上网使用场景。</li><li><strong>最快的 IP 地址</strong>：同时请求所有上游 DNS 服务器，在所有响应结果中选出延迟最低且可用的 IP。因为要等待所有上游 DNS 服务器响应结果，而且还要测试 IP 延迟及可用性，所以解析速度会很慢。只适合上游 DNS 服务器延迟特别低且网络非常稳定的场景，否则实际使用中可能会遇到首次打开网页非常慢，甚至可能打不开，要多刷新几次。再者低延迟 IP 不一定速度就快，还要看实际负载情况，所以这个方案的实际可用性是最差的。</li></ul><h4 id="Bootstrap-DNS-服务器"><a href="#Bootstrap-DNS-服务器" class="headerlink" title="Bootstrap DNS 服务器"></a>Bootstrap DNS 服务器</h4><p>Boot­strap DNS 服务器（引导 DNS 服务器）的作用只是解析上游 DoT&#x2F;​DoH 技术 DNS 服务器的域名，所以这里需要填写使用 UDP 协议的传统 DNS 服务器 IP 地址。</p><p><img src="/2022/09/20201020032251.png"></p><p> </p><p>同样的这里根据网络环境的不同推荐两组：</p><ul><li><p>中国大陆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">119.29.29.29</span><br><span class="line">119.28.28.28</span><br><span class="line">223.5.5.5</span><br><span class="line">223.6.6.6</span><br></pre></td></tr></table></figure></li><li><p>国际</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8.8.8.8</span><br><span class="line">8.8.4.4</span><br><span class="line">9.9.9.11</span><br><span class="line">149.112.112.11</span><br></pre></td></tr></table></figure></li></ul><p>设置完点击<strong>测试上游服务器</strong>，没有问题点<strong>保存</strong>即可。</p><blockquote><p><strong>TIPS:</strong> 这里也可以留空，使用后面将要提到的 <strong>DNS 重写</strong>功能把 DoT&#x2F;​DoH DNS 服务器的域名直接指向它的 IP 是一种更优雅的使用方式。</p></blockquote><h4 id="DNS-服务设定"><a href="#DNS-服务设定" class="headerlink" title="DNS 服务设定"></a>DNS 服务设定</h4><ul><li><strong>速度限制</strong>：<code>0</code></li><li><strong>使用 EDNS</strong> ：前面提及的上游 DNS 服务器都是支持 EDNS (ECS) 的，它有助于获取到更合适的 CDN 节点，建议勾选。</li><li><strong>使用 DNSSEC</strong> : 用于效验 DNS 记录的签名，防止 DNS 缓存被投毒，建议勾选。勾选后会在日志页面请求列显示小绿锁图标。</li><li><strong>禁用 IPv6</strong> ：丢弃 IPv6 的 DNS 查询。在本地网络和网站都支持 IPv6 会优先使用 IPv6 去访问网站，但目前 IPv6 的建设还处于初级阶段，大多数地区的 IPv6 网络体验都一般。还有一些代理软件对 IPv6 支持不佳，开启后可能会影响国际互联网的访问。如果对此没有特殊需求，那么直勾选即可，这样既不影响 BT 软件连接 IPv6 网络，又可以优先使用 IPv4 来上网。如果只有 IPv4 ，那么是否勾选没有区别。</li></ul><p> </p><p><img src="/2022/09/20201020032252.png"></p><p> </p><h4 id="DNS-缓存配置"><a href="#DNS-缓存配置" class="headerlink" title="DNS 缓存配置"></a>DNS 缓存配置</h4><p>先简单科普一下 TTL ，它是英语 Time To Live 的简称，中文翻译为 “存活时间”。放在 DNS 解析中意为一条域名解析记录在 DNS 服务器中的存留时间，单位是秒。</p><p>正常情况下 TTL 默认 <code>0</code> 即可，即从上游 DNS 服务器获取 TTL 值。如果你所部署的网络环境到上游 DNS 服务器的延迟比较高，那么可以适当增加 TTL 值，让缓存更持久，短时间内请求同样域名的解析会直接从缓存中读取，实现秒解析。不过 TTL 值不宜过大，不然会导致记录不能及时更新，结果是网站无法正常打开。据博主观察目前多数域名的 TTL 值普遍在 300 以内，所以给出以下设置参考值：</p><ul><li>覆盖最小 TTL 值：<code>600</code></li><li>覆盖最大 TTL 值：<code>3600</code></li></ul><p> </p><p><img src="/2022/09/20201020032253.png"></p><p> </p><h3 id="加密设置"><a href="#加密设置" class="headerlink" title="加密设置"></a>加密设置</h3><p>设置管理页面使用 HTTPS 加密以及 Ad­Guard Home 自身的 DoH&#x2F;​DoT 功能，如果不对外开放服务，只是在本地局域网使用是用不到的。对外开放 DNS 服务在中国大陆可能会有 “法律” 风险，而部署在国外网络速度缓慢，所以对于普通用户而言加密设置就成了摆设。</p><p><img src="/2022/09/20201021160403.png"></p><p> </p><h3 id="客户端设置"><a href="#客户端设置" class="headerlink" title="客户端设置"></a>客户端设置</h3><p>在这里可以单独设置每个设备单独使用的上游 DNS 及过滤规则，需要将设备 DNS 设置为 Ad­Guard Home 服务器的在 IP ，或者使用下面将要提到的 DHCP 设置。每个人的需求不一样，所以这个部分就不详细说明了。</p><p><img src="/2022/09/20201021160404.png"></p><p> </p><h3 id="DHCP-设置"><a href="#DHCP-设置" class="headerlink" title="DHCP 设置"></a>DHCP 设置</h3><p>使用 Ad­Guard Home 作为 DHCP 服务器去代替路由器上的 DHCP 服务器，这个功能的主要作用是自动分配 Ad­Guard Home 的 DNS 给到设备，然后配合<strong>客户端设置</strong>去做精细化 DNS 和过滤规则设置。除非是你的路由设备的 DHCP 功能缺斤少两，否则一般是用不到的。目前这个功能处于实验阶段，稳定性还有待考证。有兴趣的小伙伴可以自己去深入研究，这里不做过多赘述。</p><p><img src="/2022/09/20201021160405.png"></p><p> </p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h3 id="DNS-封锁清单"><a href="#DNS-封锁清单" class="headerlink" title="DNS 封锁清单"></a>DNS 封锁清单</h3><p>这里是人民群众喜闻乐见的去广告环节。</p><p><img src="/2022/09/20201020033102.png"></p><p> </p><blockquote><p><strong>吐槽：</strong><code>封锁清单</code>这个词严重怀疑是机翻，而下面的绿色按钮是<code>添加阻止列表</code>。博主在查看 Ad­Guard Home 的源码后发现简体中文的翻译有很多不统一的地方，然后花了几个小时帮助他们改进了大量的翻译，可能在后续的版本中就不再叫<code>封锁清单</code>了。</p></blockquote><p>使用官方默认的 <strong>AdGuard DNS filter</strong> 规则的效果对于中国大陆的网络而言属于聊胜于无，所以需要添加一些其它的规则。然而规则并不是越多越好，多了会影解析速度，真正需要的是高质量。博主个人比较推荐 <strong>anti-AD</strong> 和 <strong>halflife</strong> 这两个规则。</p><p>规则列表 点击查看</p><p>名称</p><p>简介</p><p>地址</p><p>AdGuard DNS Filter</p><p>AdGuard 官方维护的广告规则，涵盖多种过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGd1YXJkdGVhbS5naXRodWIuaW8vQWRHdWFyZFNETlNGaWx0ZXIvRmlsdGVycy9maWx0ZXIudHh0">https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGF3YXkub3JnLw">AdAway</a></p><p>AdAway 官方的去广告 Host 规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGF3YXkub3JnL2hvc3RzLnR4dA">https://adaway.org/hosts.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL2JhbmJlbmRhbGFvL0FEZ2s">ADgk</a></p><p>适用于 AdGuard for Android 的去广告规则，去视频 APP 广告、开屏广告</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9iYW5iZW5kYWxhby5jb2RpbmcubmV0L3AvYWRnay9kL0FEZ2svZ2l0L3Jhdy9tYXN0ZXIvQURnay50eHQ">https://banbendalao.coding.net/p/adgk/d/ADgk/git/raw/master/ADgk.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE">anti-AD</a></p><p>命中率高、兼容性强</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hbnRpLWFkLm5ldC9lYXN5bGlzdC50eHQ">https://anti-ad.net/easylist.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGYubWluZ2dvLmV1Lm9yZy8">halflife</a></p><p>涵盖了 EasyList China、EasyList Lite、CJX ‘s Annoyance、乘风视频过滤规则，以及补充的其它规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL28wSGFsZkxpZmUwby9saXN0QG1hc3Rlci9hZC50eHQ">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;o0HalfLife0o&#x2F;list@master&#x2F;ad.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC50by8">EasyList</a></p><p>Adblock Plus 官方维护的广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lsaXN0LnR4dA">https://easylist-downloads.adblockplus.org/easylist.txt</a></p><p>EasyList China</p><p>面向中文用户的 EasyList 去广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lsaXN0Y2hpbmEudHh0">https://easylist-downloads.adblockplus.org/easylistchina.txt</a></p><p>EasyPrivacy</p><p>反隐私跟踪、挖矿规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lwcml2YWN5LnR4dA">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUv">Xinggsf 乘风通用</a></p><p>国内网站广告过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUvcmF3L21hc3Rlci9ydWxlLnR4dA">https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUv">Xinggsf 乘风视频</a></p><p>视频网站广告过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUvcmF3L21hc3Rlci9tdi50eHQ">https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt</a></p><p>MalwareDomainList</p><p>恶意软件过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly93d3cubWFsd2FyZWRvbWFpbmxpc3QuY29tL2hvc3RzbGlzdC9ob3N0cy50eHQ">https://www.malwaredomainlist.com/hostslist/hosts.txt</a></p><p>Adblock Warning Removal List</p><p>去除禁止广告拦截提示规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2FudGlhZGJsb2NrZmlsdGVycy50eHQ">https://easylist-downloads.adblockplus.org/antiadblockfilters.txt</a></p><p>Fanboy’s Annoyances List</p><p>去除页面弹窗广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2ZhbmJveS1hbm5veWFuY2UudHh0">https://easylist-downloads.adblockplus.org/fanboy-annoyance.txt</a></p><p> </p><h3 id="DNS-允许清单"><a href="#DNS-允许清单" class="headerlink" title="DNS 允许清单"></a>DNS 允许清单</h3><p>在这里你可以设置排除封锁清单中的被屏蔽的域名。比如做淘宝客、广告联盟之类的人群可能会用得到，毕竟封锁清单基本涵盖了他们的业务范围。</p><p><img src="/2022/09/20201021161521.png"></p><p> </p><h3 id="DNS-重写"><a href="#DNS-重写" class="headerlink" title="DNS 重写"></a>DNS 重写</h3><p>在这里你可以方便的把一个域名指向一个 IP ，简单来说这个功能相当于 hosts 。</p><p>最典型的一个使用场景是把 DoH&#x2F;​DoT DNS 服务器的域名直接指向它们的 IP ，这样就不再需要进行我查我自己这样浪费时间的迷惑操作了，可进一步加快解析的速度。一般来说 DoT&#x2F;​DoH DNS 服务器的 IP 是固定的，而且 IP 地址和它们自家的传统 DNS 服务器的 IP 是一致的。这里需要注意的是处在公测阶段的 DNS­Pod 是个例外 (难怪腾讯云做不过阿里云，这种细节上的东西很能体现出是否专业)。</p><p><img src="/2022/09/20210423045545.png"></p><p> </p><h3 id="已阻止服务"><a href="#已阻止服务" class="headerlink" title="已阻止服务"></a>已阻止服务</h3><p>在这里你可以一键禁止访问一些热门网站和服务，比如 Face­book 、Twit­ter 。</p><p><img src="/2022/09/20201021161524.png"></p><p> </p><h3 id="自定义过滤规则"><a href="#自定义过滤规则" class="headerlink" title="自定义过滤规则"></a>自定义过滤规则</h3><p>在这里你可以自定义符合 ad­block 语法或 Hosts 语法的规则，以及检查过滤域名是否被过滤。具体如何使用可以参考页面上的示例和官方文档。</p><p><img src="/2022/09/20201021161523.png"></p><p> </p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>到这里 Ad­Guard Home 的设置就算是介绍完了，有简体中文，而且 UI 逻辑很清晰，很容易上手。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这篇教程来详细讲解如何正确的设置 Ad­Guard Home ，来更有效的防止 DNS 污染以及去广告。与其它 Ad­Guard Home </summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AdGuard Home" scheme="https://jarod.vip/tags/AdGuard-Home/"/>
    
  </entry>
  
  <entry>
    <title>wordpress处理cdnjs加载慢的问题</title>
    <link href="https://jarod.vip/2022/09/01/wordpress%E5%A4%84%E7%90%86cdnjs%E5%8A%A0%E8%BD%BD%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://jarod.vip/2022/09/01/wordpress%E5%A4%84%E7%90%86cdnjs%E5%8A%A0%E8%BD%BD%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-08-31T16:54:23.000Z</published>
    <updated>2022-09-29T13:27:46.206Z</updated>
    
    <content type="html"><![CDATA[<p>我这里用的是nginx替代字符串的方法，在appnode下仅供参考</p><p>location ~ ^&#x2F;.+\.php(&#x2F;$) { sub_filter ‘&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs’ ‘&#x2F;&#x2F;cdn.staticfile.org’; sub_filter ‘&#x2F;&#x2F;cdn.datatables.net’ ‘&#x2F;&#x2F;cdn.staticfile.org&#x2F;datatables’; sub_filter_once off;<br>……..</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我这里用的是nginx替代字符串的方法，在appnode下仅供参考&lt;/p&gt;
&lt;p&gt;location ~ ^&amp;#x2F;.+\.php(&amp;#x2F;$) { sub_filter ‘&amp;#x2F;&amp;#x2F;cdnjs.cloudflare.com&amp;#x2F;ajax&amp;#x2F</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Wordpress" scheme="https://jarod.vip/tags/Wordpress/"/>
    
    <category term="appnode" scheme="https://jarod.vip/tags/appnode/"/>
    
    <category term="cdnjs" scheme="https://jarod.vip/tags/cdnjs/"/>
    
  </entry>
  
  <entry>
    <title>用alpine基于smartdns建立本地DNS服务器</title>
    <link href="https://jarod.vip/2022/09/01/%E7%94%A8alpine%E5%9F%BA%E4%BA%8Esmartdns%E5%BB%BA%E7%AB%8B%E6%9C%AC%E5%9C%B0dns%E6%9C%8D%E5%8A%A1%E5%99%A8-2/"/>
    <id>https://jarod.vip/2022/09/01/%E7%94%A8alpine%E5%9F%BA%E4%BA%8Esmartdns%E5%BB%BA%E7%AB%8B%E6%9C%AC%E5%9C%B0dns%E6%9C%8D%E5%8A%A1%E5%99%A8-2/</id>
    <published>2022-08-31T16:53:49.000Z</published>
    <updated>2022-09-29T13:27:46.204Z</updated>
    
    <content type="html"><![CDATA[<p>因为是虚拟机下使用，下载虚拟机专用的镜像</p><p><a href="https://alpinelinux.org/downloads/">https://alpinelinux.org/downloads/</a>    Virtual板块下载86_64镜像</p><p>当前 <a href="http://dl-cdn.alpinelinux.org/alpine/v3.12/releases/x86/_64/alpine-virt-3.12.1-x86/_64.iso">http://dl-cdn.alpinelinux.org/alpine/v3.12/releases/x86\_64/alpine-virt-3.12.1-x86\_64.iso</a></p><p>创建虚拟机 当前alpine内核是5.4，虚拟机创建及初始化过程略过</p><p>apk update &amp;&amp; apk upgrade &amp;&amp; apk add sudo nano</p><p>下载并安装smartdns  from <a href="https://github.com/pymumu/smartdns">https://github.com/pymumu/smartdns</a></p><p>wget <a href="https://github.com/pymumu/smartdns/releases/download/Release33/smartdns.1.2020.09.08/-2235.x86/_64/-linux/-all.tar.gz">https://github.com/pymumu/smartdns/releases/download/Release33/smartdns.1.2020.09.08\-2235.x86\_64\-linux\-all.tar.gz</a><br>tar xvf smartdns.1.2020.09.08-2235.x86_64-linux-all.tar.gz &amp;&amp; cd smartdns &amp;&amp; chmod +x .&#x2F;install &amp;&amp; mkdir mkdir &#x2F;etc&#x2F;default &amp;&amp; .&#x2F;install -i</p><p>rc-service smartdns stop</p><p>mv &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf.bak<br>nano &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf<br>server-name smartdns<br>bind :53 bind-tcp :53 cache-size 1536 prefetch-domain yes<br>serve-expired yes<br>log-level info<br>server-tls 208.67.222.222:853<br>#server-https <a href="https://dns.twnic.tw/dns-query">https://dns.twnic.tw/dns-query</a><br>server-tls 45.32.55.94:853 server-https <a href="https://cloudflare/-dns.com/dns/-query">https://cloudflare\-dns.com/dns\-query</a><br>server-https <a href="https://neatdns.ustclug.org/resolve">https://neatdns.ustclug.org/resolve</a><br>server-https <a href="https://doh.dns.sb/dns/-query">https://doh.dns.sb/dns\-query</a><br>server-https <a href="https://public.dns.iij.jp/dns/-query">https://public.dns.iij.jp/dns\-query</a><br>server-https <a href="https://dns.rubyfish.cn/dns/-query">https://dns.rubyfish.cn/dns\-query</a><br>server-https <a href="https://dns.dns/-over/-https.com/dns/-query">https://dns.dns\-over\-https.com/dns\-query</a><br>server-https <a href="https://jp.tiar.app/dns/-query">https://jp.tiar.app/dns\-query</a><br>server-https <a href="https://i.233py.com/dns/-query">https://i.233py.com/dns\-query</a><br>server 223.5.5.5:53 server 114.114.114.114:53 conf-file &#x2F;tmp&#x2F;whitelist.conf<br>conf-file &#x2F;tmp&#x2F;blacklist.conf<br>ipset &#x2F;tracker.publicbt.com&#x2F;block<br>ipset &#x2F;tracker.publicbt.com&#x2F;b- address &#x2F;tracker.publicbt.com&#x2F;- address &#x2F;publicbt.com&#x2F;- address &#x2F;<a href="http://www.publicbt.com/-">www.publicbt.com/-</a> address &#x2F;*.publicbt.com&#x2F;-</p><p>取消DHCP DNS自动覆盖</p><p>nano &#x2F;usr&#x2F;share&#x2F;udhcpc&#x2F;default.script 用#注释RESOLV_CONF=“&#x2F;etc&#x2F;resolv.conf”</p><p>修改本地DNS为127.0.0.1</p><p>nano &#x2F;etc&#x2F;resolv.conf<br>nameserver 127.0.0.1</p><p>启动smartdns并测试</p><p>&#x2F;usr&#x2F;sbin&#x2F;smartdns 测试 nslookup -querytype=ptr smartdns</p><p>开机启动，默认的服务没法启动，未知</p><p>&#x2F;usr&#x2F;sbin&#x2F;smartdns</p><p>nano &#x2F;etc&#x2F;local.d&#x2F;init_nextcloud.start #!&#x2F;bin&#x2F;sh<br>&#x2F;usr&#x2F;sbin&#x2F;smartdns<br>chmod +x &#x2F;etc&#x2F;local.d&#x2F;init_nextcloud.start</p><p>rc-update add local</p><p>添加守护</p><p>apk add monit<br>mv &#x2F;etc&#x2F;monitrc &#x2F;etc&#x2F;monitrc.bak<br>nano &#x2F;etc&#x2F;monitrc set daemon 10   #10s循环监控<br>set logfile syslog<br>check process smartdns with pidfile &#x2F;var&#x2F;run&#x2F;smartdns.pid<br>start program = “&#x2F;usr&#x2F;sbin&#x2F;smartdns” with timeout 10 seconds<br>stop program = “&#x2F;usr&#x2F;bin&#x2F;killall smartdns” with timeout 10 seconds<br>chmod 0700 &#x2F;etc&#x2F;monitrc 测试守护配置 monit -t 启动 rc-service monit start<br>monit start all #忽略有个报错<br>添加启动 rc-update add monit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为是虚拟机下使用，下载虚拟机专用的镜像&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://alpinelinux.org/downloads/&quot;&gt;https://alpinelinux.org/downloads/&lt;/a&gt;    Virtual板块下载86_64镜像&lt;/p&gt;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="DNS" scheme="https://jarod.vip/tags/DNS/"/>
    
    <category term="smartdns" scheme="https://jarod.vip/tags/smartdns/"/>
    
    <category term="alpine" scheme="https://jarod.vip/tags/alpine/"/>
    
  </entry>
  
  <entry>
    <title>AdGuard Home搭建DOH</title>
    <link href="https://jarod.vip/2022/09/01/adguard-home%E6%90%AD%E5%BB%BAdoh/"/>
    <id>https://jarod.vip/2022/09/01/adguard-home%E6%90%AD%E5%BB%BAdoh/</id>
    <published>2022-08-31T16:52:25.000Z</published>
    <updated>2022-09-29T13:27:46.202Z</updated>
    
    <content type="html"><![CDATA[<p>一键安装docker</p><p>curl -fsSL <a href="https://get.docker.com/">https://get.docker.com</a> -o get-docker.sh &amp;&amp; sh get-docker.sh<br>#创建docker   #<a href="https://hub.docker.com/r/adguard/adguardhome">https://hub.docker.com/r/adguard/adguardhome</a></p><p>docker pull adguard&#x2F;adguardhome</p><p>docker run --name adguardhome\<br>    --restart unless-stopped\<br>    -v &#x2F;root&#x2F;adguardhome&#x2F;workdir:&#x2F;opt&#x2F;adguardhome&#x2F;work\<br>    -v &#x2F;root&#x2F;adguardhome&#x2F;confdir:&#x2F;opt&#x2F;adguardhome&#x2F;conf\<br>    -p 3000:3000&#x2F;tcp\<br>    -p 36886:36886&#x2F;tcp\<br>    -d adguard&#x2F;adguardhome</p><p>#3000为管理端口 第一setup 管理端口80改3000<br>#36886为https端口  默认443 需修改</p><p>设置参考# <a href="https://www.nange.cn/dns-over-https-for-adguard.html">https://www.nange.cn/dns-over-https-for-adguard.html</a></p><p>appnode为例<br>反代后端路径  &#x2F;dns-query<br>如果填&#x2F;会暴露 &#x2F;dns-query<br>请求路径 自己生成一个随机数 如  &#x2F;oOnZY74WyMWFuM34sgCDv2V2LB   这个就是藏起来的</p><p>appnode let’s生成证书  把证书复制到ahm</p><p>验证工具<br>wget <a href="https://github.com/ameshkov/dnslookup/releases/download/v1.4.8/dnslookup-linux-amd64-v1.6.0.tar.gz">https://github.com/ameshkov/dnslookup/releases/download/v1.4.8/dnslookup-linux-amd64-v1.6.0.tar.gz</a><br>tar zxf dnslookup-linux-amd64-v1.4.8.tar.gz &amp;&amp; cd linux-amd64<br>dnslookup <a href="http://www.google.com/">www.google.com</a> <a href="https://dns.123.com/oOnZY74WyMWFuM34sgCDv2V2LB">https://dns.123.com/oOnZY74WyMWFuM34sgCDv2V2LB</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一键安装docker&lt;/p&gt;
&lt;p&gt;curl -fsSL &lt;a href=&quot;https://get.docker.com/&quot;&gt;https://get.docker.com&lt;/a&gt; -o get-docker.sh &amp;amp;&amp;amp; sh get-docker.sh&lt;br</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AdGuard" scheme="https://jarod.vip/tags/AdGuard/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 最给力写代码软件</title>
    <link href="https://jarod.vip/2022/08/14/sublime-text-3-%E6%9C%80%E7%BB%99%E5%8A%9B%E5%86%99%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6/"/>
    <id>https://jarod.vip/2022/08/14/sublime-text-3-%E6%9C%80%E7%BB%99%E5%8A%9B%E5%86%99%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6/</id>
    <published>2022-08-13T16:25:37.000Z</published>
    <updated>2022-09-29T13:27:46.201Z</updated>
    
    <content type="html"><![CDATA[<h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><p>一款用于代码、标记和散文的精致文本编辑器。</p><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p>官方网站：<a href="https://www.vpsmm.com/go/aHR0cHM6Ly93d3cuc3VibGltZXRleHQuY29tLw==">https://www.sublimetext.com/</a></p><h3 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h3><p>-—- BEGIN LICENSE —–<br>Member J2TeaM<br>Single User License<br>EA7E-1011316<br>D7DA350E 1B8B0760 972F8B60 F3E64036<br>B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD<br>FA0A2ABE 25F65BD8 D51458E5 3923CE80<br>87428428 79079A01 AA69F319 A1AF29A4<br>A684C2DC 0B1583D4 19CBD290 217618CD<br>5653E0A0 BACE3948 BB2EE45E 422D2C87<br>DD9AF44B 99C49590 D2DBDEE1 75860FD2<br>8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864<br>—— END LICENSE ——</p><h3 id="HOSTS文件"><a href="#HOSTS文件" class="headerlink" title="HOSTS文件"></a>HOSTS文件</h3><p>注册成功后，请修改一下HOSTS文件，永久授权。</p><p>127.0.0.1    sublimetext.com<br>127.0.0.1    <a href="http://www.sublimetext.com/">www.sublimetext.com</a><br>127.0.0.1    sublimehq.com<br>127.0.0.1    telemetry.sublimehq.com<br>127.0.0.1    license.sublimehq.com</p><h3 id="小编截图"><a href="#小编截图" class="headerlink" title="小编截图"></a>小编截图</h3><p><img src="/2022/08/3641765639.png" alt="sub.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;软件介绍&quot;&gt;&lt;a href=&quot;#软件介绍&quot; class=&quot;headerlink&quot; title=&quot;软件介绍&quot;&gt;&lt;/a&gt;软件介绍&lt;/h3&gt;&lt;p&gt;一款用于代码、标记和散文的精致文本编辑器。&lt;/p&gt;
&lt;h3 id=&quot;软件下载&quot;&gt;&lt;a href=&quot;#软件下载&quot; class=</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Sublime Text 3" scheme="https://jarod.vip/tags/Sublime-Text-3/"/>
    
  </entry>
  
  <entry>
    <title>一键在Linux系统部署可浏览器访问Linux桌面环境（完测）</title>
    <link href="https://jarod.vip/2022/02/08/%E4%B8%80%E9%94%AE%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%8F%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AElinux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E5%AE%8C%E6%B5%8B%EF%BC%89/"/>
    <id>https://jarod.vip/2022/02/08/%E4%B8%80%E9%94%AE%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%8F%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AElinux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E5%AE%8C%E6%B5%8B%EF%BC%89/</id>
    <published>2022-02-08T09:02:30.000Z</published>
    <updated>2022-09-29T13:27:46.199Z</updated>
    
    <content type="html"><![CDATA[<p>我们很多网友朋友选择Linux服务器并不是单单用来建站的，比如有些外贸或者外汇业务需要，会使用到桌面环境的服务器系统。但是我们应该知道海外服务器商家较多是Linux系统，Windows系统很少而且成本较高。这不我们在需要桌面环境的Linux系统我们可以直接安装VNC或者是RDP这样的桌面环境。</p><p><a href="https://www.laozuo.org/">老左笔记</a>在之前的文章中也有过不少安装包，目前也不清楚这些教程是否有效，以后有时间一一重新整理一遍。今天老左要分享的是来自香菇肥牛分享的一键Linux桌面安装脚本环境，支持可以快速安装RDP或者VNC桌面环境，支持我们常用的火狐浏览器，且当然可以选择中文和英文版本。在这篇文章中，老左花费点时间在Linux服务器Debian 10（也支持其他）版本中完测可用的，这里根据习惯记录下来。如果也有同样需要的网友站长可以参考。</p><p><strong>第一、脚本支持系统及脚本安装</strong></p><p>根据官方介绍是支持Ubuntu 18.04&#x2F;20.04 LTS, Debian 10, 以及CentOS 7&#x2F;8 64位操作系统上运行。在这篇文章中老左选择的是Debian 10 64位。</p><p>1、中文</p><blockquote><p>wget <a href="https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop/_zh-CN.sh">https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop\_zh-CN.sh</a> &amp;&amp; sudo bash OneClickDesktop_zh-CN.sh</p></blockquote><p>2、英文</p><blockquote><p>wget <a href="https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop.sh">https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop.sh</a> &amp;&amp; sudo bash OneClickDesktop.sh</p></blockquote><p>这里有中文和英文版本，这个需要根据我们实际项目需要。有些必须在英文环境下，那就不能用中文，这个我们有需要的朋友知道的。这里我选择的是中文版本安装。</p><p><strong>第二、一键Linux桌面安装过程</strong></p><p>这里老左记录下来我完测Linux桌面的安装过程。</p><p><img src="/2022/02/OneClickDesktop-1.jpg"></p><p>根据提示向导，设置登录面板的密码账户，以及分辨率。</p><p><img src="/2022/02/OneClickDesktop-2.jpg"></p><p>因为会采用浏览器登录桌面方式，所以我们需要先解析一个域名（这里我用二级域名），解析到服务器IP，然后会配置SSL，自动的。</p><p><img src="/2022/02/OneClickDesktop-3.jpg"></p><p>在安装过程中可能需要我们确认，我们一般回车即可。有需要安装的我们选择YES回车。</p><p><img src="/2022/02/OneClickDesktop-4.jpg"></p><p>语言默认英文键盘。</p><p><img src="/2022/02/OneClickDesktop-5.jpg"></p><p>这个安装过程实际上还是比较长的，我选择的是RDP，过程就是等待，看到上图才是正常的。我们可以去登录看看，会不会有错误呢？</p><p><strong>第三、桌面环境登录验证</strong></p><p>根据提示，我们需要用自己绑定的域名打开浏览器。</p><p><img src="/2022/02/OneClickDesktop-6.jpg"></p><p>这个用户名和密码是我们自己设置的。</p><p><img src="/2022/02/OneClickDesktop-7.jpg"></p><p>这个用户名和密码是我们服务器的root账户。</p><p><img src="/2022/02/OneClickDesktop-8.jpg"></p><p>还算很顺利的登录进来，是我们熟悉的Linux桌面环境而且我们可以看到是有安装默认的火狐浏览器。</p><p><img src="/2022/02/OneClickDesktop-9.jpg"></p><p>这样我们可以很正常的登录浏览器或者是我们可以有需要在Linux系统调试软件的可以使用。这个比通过远程连接登录服务器方便很多，直接浏览器打开登录，比较便捷，可以随时的登录，无需软件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们很多网友朋友选择Linux服务器并不是单单用来建站的，比如有些外贸或者外汇业务需要，会使用到桌面环境的服务器系统。但是我们应该知道海外服务器商家较多是Linux系统，Windows系统很少而且成本较高。这不我们在需要桌面环境的Linux系统我们可以直接安装VNC或者是R</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="Linux桌面环境" scheme="https://jarod.vip/tags/Linux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>LinuxMirrors一键脚本更换Linux系统源提高软件安装速度（包含10+国内源）</title>
    <link href="https://jarod.vip/2022/02/08/linuxmirrors%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%8D%A2linux%E7%B3%BB%E7%BB%9F%E6%BA%90%E6%8F%90%E9%AB%98%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%EF%BC%88%E5%8C%85%E5%90%AB10/"/>
    <id>https://jarod.vip/2022/02/08/linuxmirrors%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%8D%A2linux%E7%B3%BB%E7%BB%9F%E6%BA%90%E6%8F%90%E9%AB%98%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%EF%BC%88%E5%8C%85%E5%90%AB10/</id>
    <published>2022-02-08T08:57:51.000Z</published>
    <updated>2022-09-29T13:27:46.198Z</updated>
    
    <content type="html"><![CDATA[<p>我们在选择海外服务器的时候是不是在安装软件比较慢？主要是海外服务器的镜像源都引用的海外节点的。这里我们一般会将服务器登录之后就更换国内的镜像源，这样安装软件的时候速度会比较快。老左在网站中也有分享过一些类似的文章，比如更换163、阿里云的源，包含Debian、Centos等。这样更换稍微有点笨拙。</p><p>在这里，老左看到有LinuxMirrors一键脚本可以用来更换Linux系统的源，直接运行脚本即可。包含我们常见的Debian、CentOS、Ubuntu等镜像。</p><p><strong>第一、脚本命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)</span><br></pre></td></tr></table></figure><p>Select Code</p><p>Copy</p><p>这里我们执行命令即可。</p><p><strong>第二、安装进程</strong></p><p>我们看看安装的过程。</p><p><img src="/2022/02/ChangeMirrors-1.jpg"></p><p>这里我们可以根据需要选择源地址。比如选择1，为阿里云。</p><p><img src="/2022/02/ChangeMirrors-2.jpg"></p><p>根据向导替换源后执行更新。最后如果没有报错，那就完全没有问题。</p><p>这样，是不是比较简单的就可以将服务器的Linux镜像源更新到我们的国内源，安装软件的速度和效率提高不少。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们在选择海外服务器的时候是不是在安装软件比较慢？主要是海外服务器的镜像源都引用的海外节点的。这里我们一般会将服务器登录之后就更换国内的镜像源，这样安装软件的时候速度会比较快。老左在网站中也有分享过一些类似的文章，比如更换163、阿里云的源，包含Debian、Centos等</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="LinuxMirrors" scheme="https://jarod.vip/tags/LinuxMirrors/"/>
    
  </entry>
  
  <entry>
    <title>Linux下，一键检测VPS回程国内三网路由</title>
    <link href="https://jarod.vip/2022/01/06/linux%E4%B8%8B%EF%BC%8C%E4%B8%80%E9%94%AE%E6%A3%80%E6%B5%8Bvps%E5%9B%9E%E7%A8%8B%E5%9B%BD%E5%86%85%E4%B8%89%E7%BD%91%E8%B7%AF%E7%94%B1/"/>
    <id>https://jarod.vip/2022/01/06/linux%E4%B8%8B%EF%BC%8C%E4%B8%80%E9%94%AE%E6%A3%80%E6%B5%8Bvps%E5%9B%9E%E7%A8%8B%E5%9B%BD%E5%86%85%E4%B8%89%E7%BD%91%E8%B7%AF%E7%94%B1/</id>
    <published>2022-01-05T17:15:32.000Z</published>
    <updated>2022-09-29T13:27:46.195Z</updated>
    
    <content type="html"><![CDATA[<p>一键检测VPS回程国内三网路由，建议root用户。</p><p>用法：</p><p>curl <a href="https://raw.githubusercontent.com/zhucaidan/mtr/_trace/main/mtr/_trace.shbash">https://raw.githubusercontent.com/zhucaidan/mtr\_trace/main/mtr\_trace.shbash</a></p><p>或者</p><p>curl <a href="https://zhujiwiki.com/wp-content/uploads/2022/01/mtr/_trace.shbash">https://zhujiwiki.com/wp-content/uploads/2022/01/mtr\_trace.shbash</a></p><p>支持的线路为：电信CN2 GT，电信CN2 GIA，联通169，电信163，联通9929，联通4837，移动CMI</p><p><img src="/2022/01/mtr_trace.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一键检测VPS回程国内三网路由，建议root用户。&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;p&gt;curl &lt;a href=&quot;https://raw.githubusercontent.com/zhucaidan/mtr/_trace/main/mtr/_trace.shbash&quot;&gt;</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://jarod.vip/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux终端下截图</title>
    <link href="https://jarod.vip/2022/01/06/linux%E7%BB%88%E7%AB%AF%E4%B8%8B%E6%88%AA%E5%9B%BE/"/>
    <id>https://jarod.vip/2022/01/06/linux%E7%BB%88%E7%AB%AF%E4%B8%8B%E6%88%AA%E5%9B%BE/</id>
    <published>2022-01-05T16:06:22.000Z</published>
    <updated>2022-09-29T13:27:46.194Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网页截图"><a href="#网页截图" class="headerlink" title="网页截图"></a>网页截图</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libqt4-webkit libqt4-dev g++ sudo </span><br><span class="line">apt-get install xvfb sudo </span><br><span class="line">apt-get install cutycapt</span><br></pre></td></tr></table></figure><p>安装中文字体：</p><p>复制windows下的字体文件到&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;目录下</p><p>执行fc-cache刷新字体缓存</p><p>使用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xvfb-run cutycapt --url=http://malu.me --out=malu.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h3><blockquote><p>个人用户字体文件在~&#x2F;.local&#x2F;share&#x2F;fonts</p><p>系统字体文件在&#x2F;usr&#x2F;share&#x2F;fonts</p><p>字体配置文件在&#x2F;etc&#x2F;fonts&#x2F;</p></blockquote><h3 id="更多命令行截图参考："><a href="#更多命令行截图参考：" class="headerlink" title="更多命令行截图参考："></a>更多命令行截图参考：</h3><p>Ghost.py网页截图: <a href="http://git.malu.me/Ghost.py%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/">http://git.malu.me/Ghost.py%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</a></p><h1 id="显示桌面截图"><a href="#显示桌面截图" class="headerlink" title="显示桌面截图"></a>显示桌面截图</h1><p>需要安装fbcat</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install fbcat</span><br></pre></td></tr></table></figure><p>使用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">NAME=`date &quot;+%Y%m%d_%H_%M_%S&quot;`</span><br><span class="line">PNG_PATH=&quot;/tmp/fbcat_&quot;$NAME&quot;.png&quot;</span><br><span class="line">fbgrab $PNG_PATH &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sz $PNG_PATH</span><br></pre></td></tr></table></figure><h1 id="摄像头截图"><a href="#摄像头截图" class="headerlink" title="摄像头截图"></a>摄像头截图</h1><p>借助命令streamer：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install streamer</span><br></pre></td></tr></table></figure><p>使用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">NAME=`date &quot;+%Y%m%d_%H_%M_%S&quot;`</span><br><span class="line">streamer -c /dev/video0 -t 3 -r 0.1 -q -b 16 -o /root/camera/jp_$NAME-00.jpeg &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sz /root/camera/jp_$NAME-02.jpeg</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">killall streamer</span></span><br></pre></td></tr></table></figure><p>其中：</p><p>-t 抓取3张图</p><p>-r 0.1帧率</p><p>以上参数为了给摄像头启动时间（部分摄像头会休眠）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网页截图&quot;&gt;&lt;a href=&quot;#网页截图&quot; class=&quot;headerlink&quot; title=&quot;网页截图&quot;&gt;&lt;/a&gt;网页截图&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="截图" scheme="https://jarod.vip/tags/%E6%88%AA%E5%9B%BE/"/>
    
    <category term="终端" scheme="https://jarod.vip/tags/%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>二级proxy部署</title>
    <link href="https://jarod.vip/2022/01/06/%E4%BA%8C%E7%BA%A7proxy%E9%83%A8%E7%BD%B2/"/>
    <id>https://jarod.vip/2022/01/06/%E4%BA%8C%E7%BA%A7proxy%E9%83%A8%E7%BD%B2/</id>
    <published>2022-01-05T16:05:29.000Z</published>
    <updated>2022-09-29T13:27:46.192Z</updated>
    
    <content type="html"><![CDATA[<p>shadowsocks:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y python-pip python-m2crypto</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>Debian &#x2F; Ubuntu:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>CentOS:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -p 3000 -k password -m aes-128-cfb -d start</span><br></pre></td></tr></table></figure><p>停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -d stop</span><br></pre></td></tr></table></figure><p>二级COW架设源码:<a href="https://github.com/cyfdecyf/cow">https://github.com/cyfdecyf/cow</a></p><p>安装过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L git.io/cow  bash</span><br></pre></td></tr></table></figure><p>配置文件路径:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.cow/rc</span><br></pre></td></tr></table></figure><p>手工安装：</p><p><a href="http://dl.chenyufei.info/cow/0.9.6/cow-linux64-0.9.6.gz">http://dl.chenyufei.info/cow/0.9.6/cow-linux64-0.9.6.gz</a></p><p>配置文件：</p><p><a href="https://raw.github.com/cyfdecyf/cow/0.9.6/doc/sample-config/rc">https://raw.github.com/cyfdecyf/cow/0.9.6/doc/sample-config/rc</a> &#x2F;root&#x2F;.cow&#x2F;rc</p><h1 id="二级proxy部署-第二篇"><a href="#二级proxy部署-第二篇" class="headerlink" title="二级proxy部署 第二篇"></a>二级proxy部署 第二篇</h1><p>上面写的是shadowsocks+cow实现二级proxy，接下来用一种简单的方式来实现二级proxy：</p><p>首先，一级proxy开启ssh服务。</p><p>二级proxy上用SSH端口转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -D 0.0.0.0:8888 username@ssh.malu.me</span><br></pre></td></tr></table></figure><p>输入密码，这段命令意思是连接远程主机ssh.malu.me,然后在本地0.0.0.0地址、端口8888上开启socket5监听。</p><p>这样只要访问二级proxy上的socket5代理就能穿过两层代理了。</p><h1 id="二级proxy部署-自动脚本"><a href="#二级proxy部署-自动脚本" class="headerlink" title="二级proxy部署 自动脚本"></a>二级proxy部署 自动脚本</h1><p>相关参数根据实际修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/expect -f</span></span><br><span class="line">set timeout 30</span><br><span class="line">set host ssh.malu.me</span><br><span class="line">set name root</span><br><span class="line">set passwd userpasswd</span><br><span class="line">set port 22</span><br><span class="line">set lisenport 8888</span><br><span class="line">spawn sudo /etc/init.d/ssh start</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn killall ssh</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn ssh -NfR 1234:localhost:2222 $host -l $name -p $port</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn ssh $host -l $name -p $port</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;]$&quot;</span><br><span class="line">sleep 1</span><br><span class="line">send &quot;ssh -N -f -D 0.0.0.0:$lisenport root@localhost -p1234\r&quot;</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect  &quot;]$&quot;</span><br><span class="line">sleep 1</span><br><span class="line">send &quot;exit\r&quot; </span><br><span class="line">expect eof</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h1 id="二级proxy部署-直连windows"><a href="#二级proxy部署-直连windows" class="headerlink" title="二级proxy部署 - 直连windows"></a>二级proxy部署 - 直连windows</h1><p>windows下安装openssh</p><p>下载地址：<a href="https://github.com/PowerShell/Win32-OpenSSH/releases">https://github.com/PowerShell/Win32-OpenSSH/releases</a></p><p>1.解压OpenSSH-Win64.zip到C:\Program Files\OpenSSH目录下，在DOS窗口进入OpenSSH目录</p><p>2.安装SSH host keys</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ssh-keygen.exe -A</span><br></pre></td></tr></table></figure><p>3.打开防火墙22端口</p><p>4.安装SSHD服务并在服务窗口找到名为“SSHD”的服务，右键将其启动，并设置为随操作系统自动启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\sshd.exe install</span><br></pre></td></tr></table></figure><p>也可以直接启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\sshd.exe</span><br></pre></td></tr></table></figure><p>5.查看启动端口,如果需要监听外网，可以修改当前目录sshd_config文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ant</span><br></pre></td></tr></table></figure><p>sshd_config:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ListenAddress 0.0.0.0</span><br></pre></td></tr></table></figure><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>根据二级proxy的原理，实质上是在两台服务器之间实现端口转发。</p><p>那么对应内网的服务器，只要能访问外网，那么利用SSH隧道端口映射就能实现内网穿透。</p><p>首先需要一台能远程登录的外网服务器。</p><p>然后内网服务器上执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -gCNfR 80:localhost:8080 ssh.malu.me -l root -p 22</span><br></pre></td></tr></table></figure><p>g：在-L&#x2F;-R&#x2F;-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。</p><p>（-g参数如果不生效，其实这是ssh默认的安全策略所致，需要在服务端&#x2F;etc&#x2F;ssh&#x2F;sshd_config 添加 gatewayports yes 重启sshd即可）</p><p>C：压缩数据传输。</p><p>N：不执行脚本或命令，通常与-f连用。</p><p>f：后台认证用户&#x2F;密码，通常和-N连用，不用登录到远程主机。</p><p>-R 本地端口:目标IP:目标端口</p><p>将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p>-L 本地端口:目标IP:目标端口</p><p>将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p>-D IP:port</p><p>指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.</p><h2 id="serveo"><a href="#serveo" class="headerlink" title="serveo"></a>serveo</h2><p>官网：<a href="https://serveo.net/">https://serveo.net</a></p><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R testname:80:localhost:80 serveo.net -o ServerAliveInterval=60</span><br></pre></td></tr></table></figure><p>文档：<a href="https://www.jianshu.com/p/d0b3991a9ce1">https://www.jianshu.com/p/d0b3991a9ce1</a></p><h2 id="zerotier"><a href="#zerotier" class="headerlink" title="zerotier"></a>zerotier</h2><p>官网：<a href="https://www.zerotier.com/">https://www.zerotier.com</a></p><p>文档：<a href="https://www.zerotier.com/manual">https://www.zerotier.com/manual</a></p><p>国内服务：<a href="https://www.kancloud.cn/baoji/_enku/tx/_ip/_01/936021">https://www.kancloud.cn/baoji\_enku/tx\_ip\_01/936021</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">zerotier-one -d</span><br><span class="line"></span><br><span class="line"># 获取地址和服务状态</span><br><span class="line">zerotier-cli status</span><br><span class="line"></span><br><span class="line"># 加入、离开、列出网络</span><br><span class="line">zerotier-cli join &lt;Network ID&gt;</span><br><span class="line">zerotier-cli leave &lt;Network ID&gt;</span><br><span class="line">zerotier-cli listnetworks</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">systemctl restart zerotier-one</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="报错：Cannot-connect-to-Zerotier-service"><a href="#报错：Cannot-connect-to-Zerotier-service" class="headerlink" title="报错：Cannot connect to Zerotier service"></a>报错：Cannot connect to Zerotier service</h3><p>查看9993端口是否被占用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ab</span><br></pre></td></tr></table></figure><h1 id="二级proxy部署-轻量级SSH安装"><a href="#二级proxy部署-轻量级SSH安装" class="headerlink" title="二级proxy部署 - 轻量级SSH安装"></a>二级proxy部署 - 轻量级SSH安装</h1><p>下载地址：<a href="https://matt.ucc.asn.au/dropbear/">https://matt.ucc.asn.au/dropbear/</a></p><p>dropbear的编译安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ./configure --prefix=/usr/local/dropbear --sysconfdir=/etc/dropbear --disable-pam </span><br><span class="line"># make PROGRAMS=&quot;dropbear dbclient dropbearkey dropbearconvert scp&quot;</span><br><span class="line"># make PROGRAMS=&quot;dropbear dbclient dropbearkey dropbearconvert scp&quot; install</span><br></pre></td></tr></table></figure><p>加入环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/dropbear/bin:/usr/local/dropbear/sbin:$PATH</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;shadowsocks:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="二级proxy" scheme="https://jarod.vip/tags/%E4%BA%8C%E7%BA%A7proxy/"/>
    
  </entry>
  
  <entry>
    <title>Linux下查看网速脚本</title>
    <link href="https://jarod.vip/2022/01/06/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E7%BD%91%E9%80%9F%E8%84%9A%E6%9C%AC/"/>
    <id>https://jarod.vip/2022/01/06/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E7%BD%91%E9%80%9F%E8%84%9A%E6%9C%AC/</id>
    <published>2022-01-05T16:04:07.000Z</published>
    <updated>2022-09-29T13:27:46.190Z</updated>
    
    <content type="html"><![CDATA[<p>使用方法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./n1.sh eth0</span><br></pre></td></tr></table></figure><p>cat n1.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">eth=<span class="variable">$1</span></span><br><span class="line">RXpre=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">TXpre=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line">RXnext=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">TXnext=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">#clear</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t RX `date +%k:%M:%S` TX&quot;</span></span><br><span class="line">RX=$((<span class="variable">$&#123;RXnext&#125;</span>-<span class="variable">$&#123;RXpre&#125;</span>))</span><br><span class="line">TX=$((<span class="variable">$&#123;TXnext&#125;</span>-<span class="variable">$&#123;TXpre&#125;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$RX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">RX=<span class="string">&quot;<span class="variable">$&#123;RX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$RX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span>  awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span>  awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$TX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">TX=<span class="string">&quot;<span class="variable">$&#123;TX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$TX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span>  awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span>  awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="iftop"><a href="#iftop" class="headerlink" title="iftop"></a>iftop</h1><p>1、iftop界面相关说明</p><p>界面上面显示的是类似刻度尺的刻度范围，为显示流量图形的长条作标尺用的。 中间的&lt;&#x3D; &#x3D;&gt;这两个左右箭头，表示的是流量的方向。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TX：发送流量 </span><br><span class="line">RX：接收流量 </span><br><span class="line">TOTAL：总流量 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、iftop相关参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-i设定监测的网卡，如：# iftop -i eth1 </span><br><span class="line">-B 以bytes为单位显示流量(默认是bits)，如：# iftop -B </span><br><span class="line">-n使host信息默认直接都显示IP，如：# iftop -n </span><br><span class="line">-N使端口信息默认直接都显示端口号，如: # iftop -N </span><br><span class="line">-F显示特定网段的进出流量，如# iftop -F 10.10.1.0/24或# iftop -F 10.10.1.0/255.255.255.0 </span><br><span class="line">-h（display this message），帮助，显示参数信息 </span><br><span class="line">-p使用这个参数后，中间的列表显示的本地主机信息，出现了本机以外的IP信息; </span><br><span class="line">-b使流量图形条默认就显示; </span><br><span class="line">-f这个暂时还不太会用，过滤计算包用的; </span><br><span class="line">-P使host信息及端口信息默认就都显示; </span><br><span class="line">-m设置界面最上边的刻度的最大值，刻度分五个大段显示，例：# iftop -m 100M </span><br></pre></td></tr></table></figure><p>3、进入iftop画面后的一些操作命令(注意大小写)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">按h切换是否显示帮助; </span><br><span class="line">按n切换显示本机的IP或主机名; </span><br><span class="line">按s切换是否显示本机的host信息; </span><br><span class="line">按d切换是否显示远端目标主机的host信息; </span><br><span class="line">按t切换显示格式为2行/1行/只显示发送流量/只显示接收流量; </span><br><span class="line">按N切换显示端口号或端口服务名称; </span><br><span class="line">按S切换是否显示本机的端口信息; </span><br><span class="line">按D切换是否显示远端目标主机的端口信息; </span><br><span class="line">按p切换是否显示端口信息; </span><br><span class="line">按P切换暂停/继续显示; </span><br><span class="line">按b切换是否显示平均流量图形条; </span><br><span class="line">按B切换计算2秒或10秒或40秒内的平均流量; </span><br><span class="line">按T切换是否显示每个连接的总流量; </span><br><span class="line">按l打开屏幕过滤功能，输入要过滤的字符，比如ip,按回车后，屏幕就只显示这个IP相关的流量信息; </span><br><span class="line">按L切换显示画面上边的刻度;刻度不同，流量图形条会有变化; </span><br><span class="line">按j或按k可以向上或向下滚动屏幕显示的连接记录; </span><br><span class="line">按1或2或3可以根据右侧显示的三列流量数据进行排序; </span><br><span class="line">按&lt;根据左边的本机名或IP排序; </span><br><span class="line">按&gt;根据远端目标主机的主机名或IP排序; </span><br><span class="line">按o切换是否固定只显示当前的连接; </span><br><span class="line">按f可以编辑过滤代码</span><br><span class="line">按!可以使用Shell命令</span><br><span class="line">按q退出监控。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用方法:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="网速" scheme="https://jarod.vip/tags/%E7%BD%91%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>SSH反向连接</title>
    <link href="https://jarod.vip/2022/01/06/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/"/>
    <id>https://jarod.vip/2022/01/06/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-01-05T16:03:41.000Z</published>
    <updated>2022-09-29T13:27:46.189Z</updated>
    
    <content type="html"><![CDATA[<p>首先2台主机都要安装ssh服务端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>如果有需要开启root远程登录，可以修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>找到PermitRootLogin no一行，改为PermitRootLogin yes</p><h3 id="A要控制B"><a href="#A要控制B" class="headerlink" title="A要控制B"></a>A要控制B</h3><p>A主机：外网，ip：123.123.123.123，sshd端口：2221</p><p>B主机：内网，sshd端口：2223</p><p>无论是外网主机A，还是内网主机B都需要跑ssh daemon</p><h3 id="1-首先在B上执行"><a href="#1-首先在B上执行" class="headerlink" title="1.首先在B上执行"></a>1.首先在B上执行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><p>这句话的意思是将A主机的1234端口和B主机的2223端口绑定，相当于远程端口映射（Remote Port Forwarding）。</p><h3 id="2-这时在A主机上sshd会listen本地1234端口"><a href="#2-这时在A主机上sshd会listen本地1234端口" class="headerlink" title="2.这时在A主机上sshd会listen本地1234端口"></a>2.这时在A主机上sshd会listen本地1234端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost -p1234</span><br></pre></td></tr></table></figure><h3 id="自动登录"><a href="#自动登录" class="headerlink" title="自动登录"></a>自动登录</h3><p>方法1.在内网B主机上生产公钥和私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen</span><br></pre></td></tr></table></figure><p>…(一直按Enter，最后在~&#x2F;.ssh&#x2F;下生成密钥)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls ~/.ssh/</span><br><span class="line">id_rsa id_rsa.pub known_hosts</span><br></pre></td></tr></table></figure><p>复制B主机上生成的id_rsa.pub公钥到外网A主机上，并将内容加入到~&#x2F;.ssh&#x2F;authorized_keys中</p><p>方法2.直接在B主机上执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id user1@123.123.123.123</span><br></pre></td></tr></table></figure><h3 id="SSH-keygen-根据私钥生成公钥"><a href="#SSH-keygen-根据私钥生成公钥" class="headerlink" title="SSH-keygen 根据私钥生成公钥"></a>SSH-keygen 根据私钥生成公钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -y -f id_rsa</span><br></pre></td></tr></table></figure><h3 id="用Autossh保持ssh反向隧道一直连接"><a href="#用Autossh保持ssh反向隧道一直连接" class="headerlink" title="用Autossh保持ssh反向隧道一直连接"></a>用Autossh保持ssh反向隧道一直连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><p>注：默认autossh没有配置环境变量，需要自己设定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export AUTOSSH_PIDFILE=/var/run/autossh.pid</span><br><span class="line">export AUTOSSH_POLL=60</span><br><span class="line">export AUTOSSH_FIRST_POLL=30</span><br><span class="line">export AUTOSSH_GATETIME=0</span><br><span class="line">export AUTOSSH_DEBUG=1</span><br></pre></td></tr></table></figure><p>为了保证开机时就启动，需要把以上环境变量写入&#x2F;etc&#x2F;profile中</p><p>然后在&#x2F;etc&#x2F;init&#x2F;rc.local中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><h3 id="使用curl让反向隧道保持连接"><a href="#使用curl让反向隧道保持连接" class="headerlink" title="使用curl让反向隧道保持连接"></a>使用curl让反向隧道保持连接</h3><p>在A主机上配置计划任务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * netstat -lnt4pgrep &quot;sshd: root&quot;awk &#x27;&#123;print $4&#125;&#x27;awk -F &#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;xargs -i curl localhost:&#123;&#125;</span><br></pre></td></tr></table></figure><p>定时向本地的隧道端口请求数据</p><h1 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h1><p>默认只能通过ssh localhost -p来连接，如果要实现远程登录内网B主机，可以在A主机上再开一个本地端口转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -g -L 80:localhost:1234 localhost</span><br></pre></td></tr></table></figure><p>远程就可以通过A主机的80端口去连接B主机了。</p><p>我们甚至可以启动socket5隧道：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -D 0.0.0.0:8888 root@localhost -p1234</span><br></pre></td></tr></table></figure><h3 id="ssh-指定私钥文件"><a href="#ssh-指定私钥文件" class="headerlink" title="ssh 指定私钥文件:"></a>ssh 指定私钥文件:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i /root/.ssh/idrsa root@malu.me -p 2111</span><br></pre></td></tr></table></figure><h3 id="ssh取消主机密钥检查"><a href="#ssh取消主机密钥检查" class="headerlink" title="ssh取消主机密钥检查"></a>ssh取消主机密钥检查</h3><p>1.使用ssh连接远程主机时加上“-o StrictHostKeyChecking&#x3D;no”的选项，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  -o StrictHostKeyChecking=no  192.168.xxx.xxx</span><br></pre></td></tr></table></figure><p>2.一个彻底去掉这个提示的方法是，修改&#x2F;etc&#x2F;ssh&#x2F;ssh_config文件（或$HOME&#x2F;.ssh&#x2F;config）中的配置，添加如下两行配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">StrictHostKeyChecking no</span><br><span class="line">UserKnownHostsFile /dev/null</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先2台主机都要安装ssh服务端：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="SSH" scheme="https://jarod.vip/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Vim日常笔记</title>
    <link href="https://jarod.vip/2022/01/06/vim%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/"/>
    <id>https://jarod.vip/2022/01/06/vim%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-05T16:03:06.000Z</published>
    <updated>2022-09-29T13:27:46.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim乱码处理"><a href="#Vim乱码处理" class="headerlink" title="Vim乱码处理"></a>Vim乱码处理</h1><p>在<code>/etc/vim/vimrc</code>文件末尾添加</p><p><code>set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</code></p><h1 id="vim-去掉自动注释和自动回车"><a href="#vim-去掉自动注释和自动回车" class="headerlink" title="vim 去掉自动注释和自动回车"></a>vim 去掉自动注释和自动回车</h1><p>取消</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set paste</span><br></pre></td></tr></table></figure><p>恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set paste!</span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>vim删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x        删除当前光标下的字符</span><br><span class="line">dw       删除光标之后的单词剩余部分。</span><br><span class="line">d$       删除光标之后的该行剩余部分。</span><br><span class="line">dd       删除当前行。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>vim撤销、恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u   撤销上一步的操作</span><br><span class="line">Ctrl+r 恢复上一步被撤销的操作</span><br></pre></td></tr></table></figure><p>快速移动光标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w    移动到下一个单词</span><br></pre></td></tr></table></figure><p>行编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v,hjkl,Shift+i</span><br></pre></td></tr></table></figure><p>vim折叠</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set foldmethod=syntax 或者是其它方法。设置好了之后可以用 zM 和 zR 来打开或关闭所有的折叠。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置行号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set number</span><br></pre></td></tr></table></figure><p>设置相对行号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set relativenumber</span><br></pre></td></tr></table></figure><p>查找时忽略大小写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set ic</span><br></pre></td></tr></table></figure><p>取消设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set no*****</span><br></pre></td></tr></table></figure><p>每行最后添加字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/$/需要追加的字符</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>编辑~&#x2F;.vimrc文件</p><h3 id="vim中文乱码"><a href="#vim中文乱码" class="headerlink" title="vim中文乱码"></a>vim中文乱码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set encoding=utf-8</span><br></pre></td></tr></table></figure><h3 id="vim记录上次编辑的位置（编辑-x2F-vimrc文件）"><a href="#vim记录上次编辑的位置（编辑-x2F-vimrc文件）" class="headerlink" title="vim记录上次编辑的位置（编辑~&#x2F;.vimrc文件）"></a>vim记录上次编辑的位置（编辑~&#x2F;.vimrc文件）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autocmd BufReadPost *</span><br><span class="line">      \  if line(&quot;&#x27;\&quot;&quot;) &gt; 0 &amp;&amp; line (&quot;&#x27;\&quot;&quot;) &lt;= line(&quot;$&quot;) </span><br><span class="line">      \      exe &quot;normal g&#x27;\&quot;&quot; </span><br><span class="line">      \  endif</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vim乱码处理&quot;&gt;&lt;a href=&quot;#Vim乱码处理&quot; class=&quot;headerlink&quot; title=&quot;Vim乱码处理&quot;&gt;&lt;/a&gt;Vim乱码处理&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;/etc/vim/vimrc&lt;/code&gt;文件末尾添加&lt;/p&gt;
&lt;p&gt;&lt;code&gt;se</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="vim" scheme="https://jarod.vip/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>WAMP本地环境搭建笔记</title>
    <link href="https://jarod.vip/2022/01/06/wamp%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://jarod.vip/2022/01/06/wamp%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-05T16:02:36.000Z</published>
    <updated>2022-09-29T13:27:46.185Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开启虚拟主机"><a href="#开启虚拟主机" class="headerlink" title="开启虚拟主机"></a>开启虚拟主机</h3><p>1.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\httpd.conf</p><p>去掉httpd-vhosts.conf的注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line">Include conf/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>把Directory修改成如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>2.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\extra\httpd-vhosts.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot D:/00_cloud/server-php</span><br><span class="line">    ServerName server-php.com</span><br><span class="line">    &lt;Directory &quot;D:/00_cloud/server-php&quot;&gt;</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.修改 C:\Windows\System32\drivers\etc\hosts</p><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 server-php.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;开启虚拟主机&quot;&gt;&lt;a href=&quot;#开启虚拟主机&quot; class=&quot;headerlink&quot; title=&quot;开启虚拟主机&quot;&gt;&lt;/a&gt;开启虚拟主机&lt;/h3&gt;&lt;p&gt;1.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\httpd.conf&lt;</summary>
      
    
    
    
    <category term="Win" scheme="https://jarod.vip/categories/Win/"/>
    
    
    <category term="Apache" scheme="https://jarod.vip/tags/Apache/"/>
    
    <category term="PHP" scheme="https://jarod.vip/tags/PHP/"/>
    
    <category term="WAMP" scheme="https://jarod.vip/tags/WAMP/"/>
    
  </entry>
  
</feed>
