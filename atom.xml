<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jarod&#39;s Blog</title>
  
  
  <link href="https://jarod.vip/atom.xml" rel="self"/>
  
  <link href="https://jarod.vip/"/>
  <updated>2022-09-26T16:42:10.342Z</updated>
  <id>https://jarod.vip/</id>
  
  <author>
    <name>Jarod</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jarod.vip/2022/09/27/hello-world/"/>
    <id>https://jarod.vip/2022/09/27/hello-world/</id>
    <published>2022-09-26T16:42:10.342Z</published>
    <updated>2022-09-26T16:42:10.342Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用 archinstall 安装 Arch Linux 和 KDE 桌面环境</title>
    <link href="https://jarod.vip/2022/09/19/%E4%BD%BF%E7%94%A8-archinstall-%E5%AE%89%E8%A3%85-arch-linux-%E5%92%8C-kde-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    <id>https://jarod.vip/2022/09/19/%E4%BD%BF%E7%94%A8-archinstall-%E5%AE%89%E8%A3%85-arch-linux-%E5%92%8C-kde-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</id>
    <published>2022-09-18T17:02:46.000Z</published>
    <updated>2022-09-29T13:27:46.210Z</updated>
    
    <content type="html"><![CDATA[<p>本文将指导使用 archinstall 安装 Arch Linux 和 KDE 桌面环境。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知，<a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">安装 Arch Linux</a> 是一件非常复杂并痛苦的事情，您需要一定的 Linux 基础，然后使用命令行进行硬盘分区，安装自己需要的软件，Arch Linux 官方也并未提供 GUI 安装程序，所以很多想尝试 Arch Linux 的用户都会被劝退在安装这一步骤上。</p><p><a href="https://github.com/archlinux/archinstall">archinstall</a> 是一个 Python 写的 Arch Linux <a href="https://wiki.archlinux.org/title/Archinstall">安装向导程序</a>，我们可以很方便地使用 <code>archinstall</code> 安装 Arch Linux。</p><p>Arch Linux 发布 2022.05.01 的 iso 后，已经默认集成了 <code>archinstall</code>，于是您可以参考本教程无痛安装 Arch Linux，为了方便期间，本教程的安装是基于 <code>VMware Workstation</code>，理论上和你本地挂载 ISO 安装并无区别。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，获取安装映像，您可以在<a href="https://archlinux.org/download/">下载页面</a>下载最新的 iso 镜像文件，您可以选择速度最快的 mirror 进行下载，这里推荐两个下载链接</p><p>国外用户，使用官方的镜像：</p><p><a href="https://mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso">https://mirror.pkgbuild.com/iso/latest/archlinux-x86_64.iso</a></p><p>国内用户，使用清华大学的镜像：</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/archlinux-x86_64.iso">https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/archlinux-x86_64.iso</a></p><p>下载后您需要准备个 U 盘或移动硬盘，然后使用一些工具，比如 <a href="https://rufus.ie/zh/">Rufus</a>，这里不再阐述，其他方法请参考<a href="https://wiki.archlinux.org/title/USB_flash_installation_medium_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>。</p><p><em>另外，您需要确认主板 BIOS 里没有奇奇怪怪的设置，比如某些针对 Windows 系统的设置，比如快速启动、CSM 安全启动、TPM 模块等都设置需要自己调整，否则默认配置可能会导致安装完 Arch Linux 后无法进入系统引导。</em></p><h2 id="安装-Arch-Linux-系统"><a href="#安装-Arch-Linux-系统" class="headerlink" title="安装 Arch Linux 系统"></a>安装 Arch Linux 系统</h2><p>启动进入引导后，我们会看到熟悉的 Arch Linux 界面：</p><p><img src="/2022/09/1-1.png"></p><p>默认进入后即可看到 Live CD 已经正常工作：</p><p><img src="/2022/09/2-1.png"></p><p>我们可以运行 <code>installation_guide</code> 命令查看安装文档，当然都是英文的，对英语不好的朋友也可以直接参考<a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">中文的文档说明</a>：</p><p><img src="/2022/09/3-1.png"></p><p><img src="/2022/09/4-1.png"></p><p>按 <code>Q</code> 退出，我们可以直接运行 <code>archinstall</code> 进行图形化安装向导：</p><p><img src="/2022/09/5-1.png"></p><p>然后我们会看到 <code>archinstall</code> 的向导界面：</p><p><img src="/2022/09/6-1.png"></p><p>目前我们能看到的选项有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Select Archinstall language</span><br><span class="line">Select keyboard layout</span><br><span class="line">Select mirror region</span><br><span class="line">Select harddrives</span><br><span class="line">Select bootloader</span><br><span class="line">Use swap</span><br><span class="line">Specify hostname</span><br><span class="line">Set root password</span><br><span class="line">Specify superuser account</span><br><span class="line">Specify user account</span><br><span class="line">Specify profile</span><br><span class="line">Select audio</span><br><span class="line">Select kernels</span><br><span class="line">Additional packages to install</span><br><span class="line">Configure network</span><br><span class="line">Select timezone</span><br><span class="line">Set automatic time <span class="built_in">sync</span> (NTP)</span><br><span class="line">Additional repositories to <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>然后我们就一步一步来安装：</p><p><code>Select Archinstall language</code> 这里可以选择 <code>archinstall</code> 的界面语言，很可惜，截止本文发布，并没有中文。</p><p><code>Select keyboard layout</code> 选择键盘布局，默认情况你的键盘布局应该都是 <code>us</code>，除非你是德国等国家的用户，那么请自行选择。</p><p><code>Select mirror region</code> 可以选择最合适的镜像，建议选择和您当前网络一致的国家或地区：</p><p><img src="/2022/09/7-1.png"></p><p>记得按空格选择，然后按回车继续。</p><p><code>Select harddrives</code> 可以选择安装的硬盘，请自行选择需要安装的硬盘，切记看清楚硬盘大小，不要装错了硬盘最后拍大腿：</p><p><img src="/2022/09/8-1.png"></p><p>选择硬盘后会让您选择如何分区，如果没有特殊需求，直接选择 <code>Wipe all selected drives and use a best-effort default partition layout</code>，这样会把你的硬盘全部格式化，切记备份重要数据，不然安装了以后拍大腿：</p><p><img src="/2022/09/9-1.png"></p><p>然后会询问您硬盘分区格式，可选 <code>btrfs</code>，<code>ext4</code>，<code>f2fs</code> 或 <code>xfs</code>，如果没有特殊需求，可以选最常用的 <code>ext4</code>：</p><p><img src="/2022/09/10-1.png"></p><p>然后会询问您是否要对 <code>/home</code> 目录单独分区，这里主要存放用户的数据，默认建议单独分区，实际操作中会分配大概 80% 的硬盘空间给 <code>/home</code> 目录，你也可以一股脑都分给 <code>/</code>，请自行决定：</p><p><img src="/2022/09/11-1.png"></p><p>完成后会多出一个 <code>Set encryption password</code> 选项，如果您需要对硬盘加密，可以选择，如果没需要可以跳过。</p><p><img src="/2022/09/12-1.png"></p><p>然后我们直接跳过 <code>Select bootloader</code> 和 <code>Use swap</code>，因为他已经自动给您设置好了，然后如果您喜欢的话，可以给您的机器设置一个 <code>hostname</code> 和 <code>root</code> 密码，如果没有特殊需求，也可以跳过 <code>Specify hostname</code> 和 <code>Set root password</code>，我们直接来到 <code>Specify superuser account</code>，设置一个拥有 <code>sudo</code> 权限的超级用户，这个用户是日常登录和操作使用，请务牢记用户名和密码：</p><p><img src="/2022/09/13-1.png"></p><p>输入用户名：</p><p><img src="/2022/09/14-1.png"></p><p>输入密码，Linux 终端下输入密码是不显示的，不要以为自己产生幻觉输错了：</p><p><img src="/2022/09/15-1.png"></p><p>可能会提示您的密码太弱，自行斟酌是否需要修改：</p><p><img src="/2022/09/16-1.png"></p><p>然后再输入一次密码进行验证：</p><p><img src="/2022/09/17-1.png"></p><p>成功后选择 <code>Confirm and exit</code> 即可：</p><p><img src="/2022/09/18-1.png"></p><p>然后我们也可以跳过其他选项，直接来到 <code>Configure network</code>：</p><p><img src="/2022/09/19-1.png"></p><p>因为我们希望安装 KDE 桌面环境，所以选择 <code>Use NetworkManager</code>：</p><p><img src="/2022/09/20-1.png"></p><p>如果是服务器环境，可以选择 <code>Manual configuration</code> 手工配置网络。</p><p>然后我们选择时区，进入 <code>Select timezone</code>：</p><p><img src="/2022/09/21-1.png"></p><p>按照您本地的时区来选择，可以使用 <code>/</code> 然后输入前几个字符快速搜索，比如 <code>/shanghai</code>：</p><p><img src="/2022/09/22-1.png"></p><p>一切准备就绪，我们可以选择 <code>Save configuration</code> 来保存配置，也可以直接选 <code>Install</code> 进行安装：</p><p><img src="/2022/09/23-1.png"></p><p><img src="/2022/09/24-1.png"></p><p><img src="/2022/09/25-1.png"></p><p>系统会提示 <code>Would you like to chroot into the newly created installation and perform post-installation configuration?</code>，这里我们直接选择 <code>Yes</code>，然后进入安装：</p><p><img src="/2022/09/26-1.png"></p><p>霹雳哗啦安装完毕后，我们可以安装一些常用的软件，比如 <code>KDE</code> 桌面环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma-meta plasma packagekit-qt5</span><br></pre></td></tr></table></figure><p>没有特殊需求都选择默认一路回车即可：</p><p><img src="/2022/09/27-1.png"></p><p><img src="/2022/09/28-1.png"></p><p>安装 KDE 比较慢，因为软件包较大，请耐心等待安装完成。</p><p>安装完成后开启 <code>sddm</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><p>然后我们使用 <code>exit</code> 命令退出并使用 <code>reboot</code> 命令重启：</p><p><img src="/2022/09/29-1.png"></p><h2 id="安装并配置-Arch-Linux-的软件"><a href="#安装并配置-Arch-Linux-的软件" class="headerlink" title="安装并配置 Arch Linux 的软件"></a>安装并配置 Arch Linux 的软件</h2><p>重启后我们就可以看到熟悉的登录界面啦：</p><p><img src="/2022/09/30-1.png"></p><p>登录后会发现除了个桌面啥东西都没有，此时我们可以按键盘 <code>CTRL</code> + <code>ALT</code> + <code>F2</code> 进入 <code>tty2</code> 终端：</p><p><img src="/2022/09/31-1.png"></p><p>输入用户名和密码登录：</p><p><img src="/2022/09/32-1.png"></p><p>然后开始安装一些常用软件，比如 KDE 的终端软件 Konsole 和文本编辑器 Kate：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S konsole kate</span><br></pre></td></tr></table></figure><p><img src="/2022/09/33-1.png"></p><p>安装完成后，我们可以按键盘 <code>CTRL</code> + <code>ALT</code> + <code>F1</code> 重新进入 KDE 桌面环境，然后按 <code>Win</code> 键搜索 <code>konsole</code> 进入终端：</p><p><img src="/2022/09/34-1.png"></p><p>这里推荐一些常规和必要的软件包：</p><p>如果您是 Intel 的 CPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S intel-ucode</span><br></pre></td></tr></table></figure><p>如果您是 AMD 的 CPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S amd-ucode</span><br></pre></td></tr></table></figure><p>如果您是 AMD 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xf86-video-amdgpu mesa</span><br></pre></td></tr></table></figure><p>如果您是 NVIDIA 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S nvidia mesa</span><br></pre></td></tr></table></figure><p>如果您是 Intel 的 GPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S xf86-video-intel mesa</span><br></pre></td></tr></table></figure><p>关于 Arch Linux 下 GPU 配置可以参考<a href="https://wiki.archlinux.org/title/Xorg#Driver_installation">这里</a>和<a href="https://wiki.archlinux.org/title/AMDGPU">这里</a>。</p><p>然后安装一些常见的工具包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S inetutils iproute2 iputils procps-ng psmisc sysfsutils <span class="built_in">which</span> wget nano vim sudo unzip mtr traceroute dnsutils lsb-release ca-certificates bash-completion logrotate openssh less rsync</span><br></pre></td></tr></table></figure><p>部分软件是需要自行开启并设置开机自启动的，比如 <code>OpenSSH</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now sshd</span><br></pre></td></tr></table></figure><p>然后安装个浏览器，Linux 下还是推荐用 <code>Firefox</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S firefox</span><br></pre></td></tr></table></figure><p>安装完成后可以然后按 <code>Win</code> 键搜索 <code>firefox</code> 并右键图标使用 <code>Add to Desktop</code> 创建桌面快捷方式：</p><p><img src="/2022/09/35-1.png"></p><p>此时桌面上就有 <code>Firefox</code> 的图标啦：</p><p><img src="/2022/09/36-1.png"></p><h2 id="解决中文显示乱码问题"><a href="#解决中文显示乱码问题" class="headerlink" title="解决中文显示乱码问题"></a>解决中文显示乱码问题</h2><p>我们会遇到一个问题，此时打开中文网页都是乱码：</p><p><img src="/2022/09/37-1.png"></p><p>而且网页里包含的 Emoji 🤣也是一个个方框哦，所以我们参考<a href="https://wiki.archlinux.org/title/Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>和<a href="https://wiki.archlinux.org/title/fonts#Emoji_and_symbols">这里</a>，首先安装字体包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji</span><br></pre></td></tr></table></figure><p>然后使用 <code>Konsole</code> 创建一个 <code>.config/fontconfig/fonts.conf</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .config/fontconfig</span><br><span class="line">vim .config/fontconfig/fonts.conf</span><br></pre></td></tr></table></figure><p>复制以下内容，使用 <code>vim</code> 编辑文件，按 <code>i</code> 开始编辑，按 <code>Ctrl + Shift + V</code> 或 <code>Shift + Insert</code> 或直接在 Konsole 里右键 <code>Paste</code>，然后粘贴以下内容后，完成后按 <code>ESC</code> 键，然后输入 <code>:wq</code> 完成编辑：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">fontconfig</span> <span class="keyword">SYSTEM</span> <span class="string">&#x27;urn:fontconfig:fonts.dtd&#x27;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- $&#123;XDG_CONFIG_HOME&#125;/fontconfig/fonts.conf</span></span><br><span class="line"><span class="comment">        - vim:ft=xml:fenc=utf-8:noet:ts=3:sw=3:</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">match</span> <span class="attr">target</span>=<span class="string">&quot;font&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;antialias&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;autohint&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dpi&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">double</span>&gt;</span>96<span class="tag">&lt;/<span class="name">double</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hinting&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bool</span>&gt;</span>true<span class="tag">&lt;/<span class="name">bool</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hintstyle&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>hintslight<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lcdfilter&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>lcdlight<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rgba&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">const</span>&gt;</span>rgb<span class="tag">&lt;/<span class="name">const</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">edit</span> <span class="attr">mode</span>=<span class="string">&quot;assign&quot;</span> <span class="attr">name</span>=<span class="string">&quot;size&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">int</span>&gt;</span>15<span class="tag">&lt;/<span class="name">int</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">edit</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">match</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dir</span>&gt;</span>~/.fonts<span class="tag">&lt;/<span class="name">dir</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fontconfig</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后清理字体缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fc-cache -fv</span><br></pre></td></tr></table></figure><p>清理完事后会提示 <code>fc-cache: succeeded</code>，然后我们使用 <code>fc-match -s grep &#39;Noto Sans CJK&#39;</code> 命令查看中文字体是否生效：</p><p><img src="/2022/09/38-1.png"></p><p>然后重新登录用户，或者直接 <code>sudo reboot</code> 重启电脑，再次打开 <code>Firefox</code> 即可看到中文字体完美显示：</p><p><img src="/2022/09/39-1.png"></p><h2 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h2><p>参考<a href="https://wiki.archlinux.org/title/Fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">这里</a>，我们直接安装 <code>fcitx5</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im fcitx5-qt fcitx5-gtk fcitx5-chinese-addons fcitx5-pinyin-zhwiki</span><br></pre></td></tr></table></figure><p>然后修改全局变量环境文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/environment</span><br></pre></td></tr></table></figure><p>加入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">INPUT_METHOD=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><p>重启后即可生效，在 KDE 里按 <code>Win</code> 键搜索 <code>Input Method</code> 后进入 <code>Input Method</code> 即可配置输入法：</p><p><img src="/2022/09/40-1.png"></p><p>选择 <code>Input Method</code>，然后点击 <code>Add Input Method...</code>：</p><p><img src="/2022/09/41-1.png"></p><p>搜索 <code>pinyin</code> 然后添加<code>简体中文</code>下的 <code>Pinyin</code>：</p><p><img src="/2022/09/42-1.png"></p><p>点击 <code>Add</code> 后记得点击 <code>Apply</code> 生效，然后我们可以看到任务栏右下角的键盘图标，右键即可看到 <code>Pinyin</code> 输入法，可以点击 <code>restart</code> 生效任何修改的配置：</p><p><img src="/2022/09/43-1.png"></p><p>第一次打开拼音输入法会提示你是否需要开启云拼音预测，可以按照自己的喜好选择：</p><p><img src="/2022/09/44-1.png"></p><p>然后我们随便打开一个文本编辑器，按 <code>Ctrl</code> + <code>空格</code> 即可开启拼音输入法：</p><p><img src="/2022/09/45-1.png"></p><h2 id="配置第三方源"><a href="#配置第三方源" class="headerlink" title="配置第三方源"></a>配置第三方源</h2><p>Arch Linux 官方提供了一些第三方源，这里我们推荐 <a href="https://aur.archlinux.org/">AUR</a> 和 <a href="https://www.archlinuxcn.org/">Archlinuxcn</a></p><p>安装 AUR 的包管理助手 <a href="https://github.com/Jguer/yay">yay</a> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S base-devel git</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span></span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span>/opt</span><br><span class="line"><span class="built_in">cd</span> .<span class="built_in">local</span>/opt</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p><em>国内网络的用户可能无法流畅安装编译 yay，需要一些魔法操作，请自行解决。</em></p><p>也可以直接安装打包好的二进制包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git base-devel</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span></span><br><span class="line"><span class="built_in">mkdir</span> -p .<span class="built_in">local</span>/opt</span><br><span class="line"><span class="built_in">cd</span> .<span class="built_in">local</span>/opt</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yay-bin.git</span><br><span class="line"><span class="built_in">cd</span> yay-bin</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>然后即可使用 <code>yay -S</code> 来安装 <code>AUR</code> 中的软件，比如安装 <code>Microsoft Edge</code> 浏览器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S microsoft-edge-stable-bin</span><br></pre></td></tr></table></figure><p>没有特殊需求的话一路回车即可安装。</p><p>也可以使用 <code>yay -Syu</code> 直接更新系统和 AUR 仓库里的软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -Syu</span><br></pre></td></tr></table></figure><p>添加 <code>Archlinuxcn</code> 源：</p><p>修改 <code>/etc/pacman.conf</code> 文件，加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://repo.archlinuxcn.org/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>国内网络用户可以使用清华大学的源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>然后更新系统并安装 <code>archlinuxcn-keyring</code> 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu</span><br><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><p>如果遇到类似这样的错误提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">==&gt; Appending keys from archlinuxcn.gpg...</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10631 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br><span class="line">gpg: key B3D53065DB03D61E was created 10630 seconds in the future (time warp or clock problem)</span><br></pre></td></tr></table></figure><p>说明你本地的系统时间没有和 NTP 服务器同步，我们可以手工打开：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-ntp 1</span><br><span class="line">sudo timedatectl status</span><br></pre></td></tr></table></figure><p>然后删除旧的 GPG Key 缓存文件并重新生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -fr /etc/pacman.d/gnupg</span><br><span class="line">sudo pacman-key --init</span><br><span class="line">sudo pacman-key --populate</span><br></pre></td></tr></table></figure><p>然后重新安装 <code>archlinuxcn-keyring</code> 即可正常工作。</p><p><em>请注意 AUR 里的很多软件分两种发布形式，一种是带 -bin 结尾的二进制包，安装后直接可用，一种是不带的，就是从源码编译安装，本地不一定能装的上，请自行选择。</em></p><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p>本教程仅适合有一定 Linux 基础和动手能力的小伙伴，如果您想从头开始学习安装一个 Arch Linux，那么这两个教程一定很适合您学习</p><ul><li><a href="https://www.viseator.com/2017/05/17/arch_install/">以官方 Wiki 的方式安装 ArchLinux</a></li><li><a href="https://archlinuxstudio.github.io/ArchLinuxTutorial/">Arch Linux 安装使用教程 - ArchTutorial - Arch Linux Studio</a></li></ul><h2 id="推荐软件"><a href="#推荐软件" class="headerlink" title="推荐软件"></a>推荐软件</h2><ul><li><a href="https://archlinux.org/packages/extra/x86_64/firefox/">Firefox</a></li><li><a href="https://archlinux.org/packages/extra/x86_64/thunderbird/">Thunderbird</a></li><li><a href="https://aur.archlinux.org/packages/vscodium-bin">VSCodium</a></li><li><a href="https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/typora">Typora</a></li><li><a href="https://aur.archlinux.org/packages/github-desktop-bin">Github Desktop</a></li><li><a href="https://aur.archlinux.org/packages/1password">1Password</a></li><li><a href="https://aur.archlinux.org/packages/microsoft-edge-stable-bin">Microsoft Edge</a></li><li><a href="https://archlinux.org/packages/extra/x86_64/chromium/">Chromium</a></li></ul><p>最后秀一下我的 Arch Linux：</p><p><img src="/2022/09/tqA6ZHukDrvi9cg-1.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文将指导使用 archinstall 安装 Arch Linux 和 KDE 桌面环境。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;众所周知，&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="Arch Linux" scheme="https://jarod.vip/tags/Arch-Linux/"/>
    
    <category term="archinstall" scheme="https://jarod.vip/tags/archinstall/"/>
    
  </entry>
  
  <entry>
    <title>AdGuard Home 自建 DNS 防污染、去广告教程</title>
    <link href="https://jarod.vip/2022/09/02/adguard-home-%E8%87%AA%E5%BB%BA-dns-%E9%98%B2%E6%B1%A1%E6%9F%93%E3%80%81%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%95%99%E7%A8%8B-2-%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E8%AE%BE%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://jarod.vip/2022/09/02/adguard-home-%E8%87%AA%E5%BB%BA-dns-%E9%98%B2%E6%B1%A1%E6%9F%93%E3%80%81%E5%8E%BB%E5%B9%BF%E5%91%8A%E6%95%99%E7%A8%8B-2-%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E8%AE%BE%E7%BD%AE%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-09-02T15:06:02.000Z</published>
    <updated>2022-09-29T13:27:46.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇教程来详细讲解如何正确的设置 Ad­Guard Home ，来更有效的防止 DNS 污染以及去广告。与其它 Ad­Guard Home 教程的只讲方法、不讲逻辑的胡乱设置不同，认真看完这篇教程你会收获大量的知识和启发。</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="常规设置"><a href="#常规设置" class="headerlink" title="常规设置"></a>常规设置</h3><p>文字介绍已经很好理解了，按需设置即可。重点是以下几个，如果你尚处于单身状态，那么就不要开启，否则会影响生理卫生知识的学习。</p><ul><li><strong>使用 AdGuard【家长控制】服务</strong>：如果家中有尚未成年的孩子，建议开启，屏蔽成人内容。</li><li><strong>强制安全搜索</strong>：在 Bing、Google、Yandex、YouTube 等网站上强制使用安全搜索，屏蔽 NSFW 内容。</li></ul><p> </p><p><img src="/2022/09/20201021160826.png"></p><p> </p><h3 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h3><p> </p><p><img src="/2022/09/20201020032250.png"></p><p> </p><h4 id="上游-DNS-服务器"><a href="#上游-DNS-服务器" class="headerlink" title="上游 DNS 服务器"></a>上游 DNS 服务器</h4><p><a href="https://p3terx.com/go/aHR0cHM6Ly9rYi5hZGd1YXJkLmNvbS96aC9nZW5lcmFsL2Rucy1wcm92aWRlcnM">AdGuard 文档</a>中给出了一些知名的 DNS 服务器供选择。</p><p>根据所在网络环境的不同推荐以下两组支持 ECS 功能的 DNS 服务器。如果有科学魔法爱国上网需求，你应该部署两个 Ad­Guard Home ，通过 DNS 分流才能达到较为理想的防污染和去广告效果。</p><ul><li><p>中国大陆网络环境推荐选择<a href="https://p3terx.com/go/aHR0cDovL3BkbnMuZG5zcG9kLmNuLw">腾讯 (DNSPod)</a> 和<a href="https://p3terx.com/go/aHR0cHM6Ly93d3cuYWxpZG5zLmNvbS8">阿里云</a>的公共 DNS 。使用它们你会惊奇的发现偶尔某些不存在的网站都是能正常解析的，只不过解析的结果并不是离你的代理服务器最近的 IP ，所以效果并不理想，而且非常不稳定。</p><blockquote><p><strong>TIPS:</strong> 中国大陆不推荐使用任何海外的 DNS ，因为延迟很高且都受到了不同程度的干扰，可用性不高，强行设置只会得到减速效果或者报错。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tls://dns.pub</span><br><span class="line">https://dns.pub/dns-query</span><br><span class="line">tls://dns.alidns.com</span><br><span class="line">https://dns.alidns.com/dns-query</span><br></pre></td></tr></table></figure></li><li><p>国际网络环境，比如海外的 VPS 或者给科学魔法爱国上网软件做 DNS ，则推荐使用 <a href="https://p3terx.com/go/aHR0cHM6Ly9kbnMuZ29vZ2xlLw">Google</a> 和 <a href="https://p3terx.com/go/aHR0cHM6Ly93d3cucXVhZDkubmV0Lw">Quad9</a> 的公共 DNS。给科学魔法爱国上网软件使用的前提是它们必须在魔法名单中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tls://dns.google</span><br><span class="line">https://dns.google/dns-query</span><br><span class="line">tls://dns11.quad9.net</span><br><span class="line">https://dns11.quad9.net/dns-query</span><br></pre></td></tr></table></figure></li></ul><p>如果你看过《<a href="https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-0.html">AdGuard Home 是什么？为什么无法去广告？</a>》那篇文章，那么你一定还记得 DoT&#x2F;​DoH 技术。所以这里的上游 DNS 自然是要选择 DoT&#x2F;​DoH 加密技术的服务器的，可以防止 DNS 解析记录被劫持、篡改以及跟踪。缺点是可能对解析速度会有些许影响，毕竟 TCP 协议不如 UDP 来得有效率，且加解密需要一点时间，不过在机器性能不错且网络通畅的情况下其实是可以忽略的，都是毫秒级别的差距。</p><p><strong>上游 DNS 服务器</strong>输入框下面有几个单选项，字面理解应该是解析策略、模式之类的选项，官方暂时没有给出详细介绍，所以博主根据字面含义和自身实际体验总结如下：</p><ul><li><strong>负载均衡</strong>：使用加权随机算法来选择最快的服务器。用到了算法，这就很玄学了。实际其实就是随机选择一个上游 DNS 服务器中的一个进行解析请求，哪个延迟低就更偏向于用哪一个。</li><li><strong>并行请求</strong>：同时请求所有上游 DNS 服务器，取最快给出的响应结果，所以解析速度很快。在上游 DNS 服务器设置合理的情况下属于万金油方案，解析速度和访问速度都很快。所以也非常适合上游 DNS 服务器连接延迟大和不稳定的情况，就比如科学魔法爱国上网使用场景。</li><li><strong>最快的 IP 地址</strong>：同时请求所有上游 DNS 服务器，在所有响应结果中选出延迟最低且可用的 IP。因为要等待所有上游 DNS 服务器响应结果，而且还要测试 IP 延迟及可用性，所以解析速度会很慢。只适合上游 DNS 服务器延迟特别低且网络非常稳定的场景，否则实际使用中可能会遇到首次打开网页非常慢，甚至可能打不开，要多刷新几次。再者低延迟 IP 不一定速度就快，还要看实际负载情况，所以这个方案的实际可用性是最差的。</li></ul><h4 id="Bootstrap-DNS-服务器"><a href="#Bootstrap-DNS-服务器" class="headerlink" title="Bootstrap DNS 服务器"></a>Bootstrap DNS 服务器</h4><p>Boot­strap DNS 服务器（引导 DNS 服务器）的作用只是解析上游 DoT&#x2F;​DoH 技术 DNS 服务器的域名，所以这里需要填写使用 UDP 协议的传统 DNS 服务器 IP 地址。</p><p><img src="/2022/09/20201020032251.png"></p><p> </p><p>同样的这里根据网络环境的不同推荐两组：</p><ul><li><p>中国大陆</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">119.29.29.29</span><br><span class="line">119.28.28.28</span><br><span class="line">223.5.5.5</span><br><span class="line">223.6.6.6</span><br></pre></td></tr></table></figure></li><li><p>国际</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8.8.8.8</span><br><span class="line">8.8.4.4</span><br><span class="line">9.9.9.11</span><br><span class="line">149.112.112.11</span><br></pre></td></tr></table></figure></li></ul><p>设置完点击<strong>测试上游服务器</strong>，没有问题点<strong>保存</strong>即可。</p><blockquote><p><strong>TIPS:</strong> 这里也可以留空，使用后面将要提到的 <strong>DNS 重写</strong>功能把 DoT&#x2F;​DoH DNS 服务器的域名直接指向它的 IP 是一种更优雅的使用方式。</p></blockquote><h4 id="DNS-服务设定"><a href="#DNS-服务设定" class="headerlink" title="DNS 服务设定"></a>DNS 服务设定</h4><ul><li><strong>速度限制</strong>：<code>0</code></li><li><strong>使用 EDNS</strong> ：前面提及的上游 DNS 服务器都是支持 EDNS (ECS) 的，它有助于获取到更合适的 CDN 节点，建议勾选。</li><li><strong>使用 DNSSEC</strong> : 用于效验 DNS 记录的签名，防止 DNS 缓存被投毒，建议勾选。勾选后会在日志页面请求列显示小绿锁图标。</li><li><strong>禁用 IPv6</strong> ：丢弃 IPv6 的 DNS 查询。在本地网络和网站都支持 IPv6 会优先使用 IPv6 去访问网站，但目前 IPv6 的建设还处于初级阶段，大多数地区的 IPv6 网络体验都一般。还有一些代理软件对 IPv6 支持不佳，开启后可能会影响国际互联网的访问。如果对此没有特殊需求，那么直勾选即可，这样既不影响 BT 软件连接 IPv6 网络，又可以优先使用 IPv4 来上网。如果只有 IPv4 ，那么是否勾选没有区别。</li></ul><p> </p><p><img src="/2022/09/20201020032252.png"></p><p> </p><h4 id="DNS-缓存配置"><a href="#DNS-缓存配置" class="headerlink" title="DNS 缓存配置"></a>DNS 缓存配置</h4><p>先简单科普一下 TTL ，它是英语 Time To Live 的简称，中文翻译为 “存活时间”。放在 DNS 解析中意为一条域名解析记录在 DNS 服务器中的存留时间，单位是秒。</p><p>正常情况下 TTL 默认 <code>0</code> 即可，即从上游 DNS 服务器获取 TTL 值。如果你所部署的网络环境到上游 DNS 服务器的延迟比较高，那么可以适当增加 TTL 值，让缓存更持久，短时间内请求同样域名的解析会直接从缓存中读取，实现秒解析。不过 TTL 值不宜过大，不然会导致记录不能及时更新，结果是网站无法正常打开。据博主观察目前多数域名的 TTL 值普遍在 300 以内，所以给出以下设置参考值：</p><ul><li>覆盖最小 TTL 值：<code>600</code></li><li>覆盖最大 TTL 值：<code>3600</code></li></ul><p> </p><p><img src="/2022/09/20201020032253.png"></p><p> </p><h3 id="加密设置"><a href="#加密设置" class="headerlink" title="加密设置"></a>加密设置</h3><p>设置管理页面使用 HTTPS 加密以及 Ad­Guard Home 自身的 DoH&#x2F;​DoT 功能，如果不对外开放服务，只是在本地局域网使用是用不到的。对外开放 DNS 服务在中国大陆可能会有 “法律” 风险，而部署在国外网络速度缓慢，所以对于普通用户而言加密设置就成了摆设。</p><p><img src="/2022/09/20201021160403.png"></p><p> </p><h3 id="客户端设置"><a href="#客户端设置" class="headerlink" title="客户端设置"></a>客户端设置</h3><p>在这里可以单独设置每个设备单独使用的上游 DNS 及过滤规则，需要将设备 DNS 设置为 Ad­Guard Home 服务器的在 IP ，或者使用下面将要提到的 DHCP 设置。每个人的需求不一样，所以这个部分就不详细说明了。</p><p><img src="/2022/09/20201021160404.png"></p><p> </p><h3 id="DHCP-设置"><a href="#DHCP-设置" class="headerlink" title="DHCP 设置"></a>DHCP 设置</h3><p>使用 Ad­Guard Home 作为 DHCP 服务器去代替路由器上的 DHCP 服务器，这个功能的主要作用是自动分配 Ad­Guard Home 的 DNS 给到设备，然后配合<strong>客户端设置</strong>去做精细化 DNS 和过滤规则设置。除非是你的路由设备的 DHCP 功能缺斤少两，否则一般是用不到的。目前这个功能处于实验阶段，稳定性还有待考证。有兴趣的小伙伴可以自己去深入研究，这里不做过多赘述。</p><p><img src="/2022/09/20201021160405.png"></p><p> </p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h3 id="DNS-封锁清单"><a href="#DNS-封锁清单" class="headerlink" title="DNS 封锁清单"></a>DNS 封锁清单</h3><p>这里是人民群众喜闻乐见的去广告环节。</p><p><img src="/2022/09/20201020033102.png"></p><p> </p><blockquote><p><strong>吐槽：</strong><code>封锁清单</code>这个词严重怀疑是机翻，而下面的绿色按钮是<code>添加阻止列表</code>。博主在查看 Ad­Guard Home 的源码后发现简体中文的翻译有很多不统一的地方，然后花了几个小时帮助他们改进了大量的翻译，可能在后续的版本中就不再叫<code>封锁清单</code>了。</p></blockquote><p>使用官方默认的 <strong>AdGuard DNS filter</strong> 规则的效果对于中国大陆的网络而言属于聊胜于无，所以需要添加一些其它的规则。然而规则并不是越多越好，多了会影解析速度，真正需要的是高质量。博主个人比较推荐 <strong>anti-AD</strong> 和 <strong>halflife</strong> 这两个规则。</p><p>规则列表 点击查看</p><p>名称</p><p>简介</p><p>地址</p><p>AdGuard DNS Filter</p><p>AdGuard 官方维护的广告规则，涵盖多种过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGd1YXJkdGVhbS5naXRodWIuaW8vQWRHdWFyZFNETlNGaWx0ZXIvRmlsdGVycy9maWx0ZXIudHh0">https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGF3YXkub3JnLw">AdAway</a></p><p>AdAway 官方的去广告 Host 规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGF3YXkub3JnL2hvc3RzLnR4dA">https://adaway.org/hosts.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL2JhbmJlbmRhbGFvL0FEZ2s">ADgk</a></p><p>适用于 AdGuard for Android 的去广告规则，去视频 APP 广告、开屏广告</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9iYW5iZW5kYWxhby5jb2RpbmcubmV0L3AvYWRnay9kL0FEZ2svZ2l0L3Jhdy9tYXN0ZXIvQURnay50eHQ">https://banbendalao.coding.net/p/adgk/d/ADgk/git/raw/master/ADgk.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL3ByaXZhY3ktcHJvdGVjdGlvbi10b29scy9hbnRpLUFE">anti-AD</a></p><p>命中率高、兼容性强</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hbnRpLWFkLm5ldC9lYXN5bGlzdC50eHQ">https://anti-ad.net/easylist.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9hZGYubWluZ2dvLmV1Lm9yZy8">halflife</a></p><p>涵盖了 EasyList China、EasyList Lite、CJX ‘s Annoyance、乘风视频过滤规则，以及补充的其它规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL28wSGFsZkxpZmUwby9saXN0QG1hc3Rlci9hZC50eHQ">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;o0HalfLife0o&#x2F;list@master&#x2F;ad.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC50by8">EasyList</a></p><p>Adblock Plus 官方维护的广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lsaXN0LnR4dA">https://easylist-downloads.adblockplus.org/easylist.txt</a></p><p>EasyList China</p><p>面向中文用户的 EasyList 去广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lsaXN0Y2hpbmEudHh0">https://easylist-downloads.adblockplus.org/easylistchina.txt</a></p><p>EasyPrivacy</p><p>反隐私跟踪、挖矿规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2Vhc3lwcml2YWN5LnR4dA">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUv">Xinggsf 乘风通用</a></p><p>国内网站广告过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUvcmF3L21hc3Rlci9ydWxlLnR4dA">https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt</a></p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUv">Xinggsf 乘风视频</a></p><p>视频网站广告过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRlZS5jb20veGluZ2dzZi9BZGJsb2NrLVJ1bGUvcmF3L21hc3Rlci9tdi50eHQ">https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt</a></p><p>MalwareDomainList</p><p>恶意软件过滤规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly93d3cubWFsd2FyZWRvbWFpbmxpc3QuY29tL2hvc3RzbGlzdC9ob3N0cy50eHQ">https://www.malwaredomainlist.com/hostslist/hosts.txt</a></p><p>Adblock Warning Removal List</p><p>去除禁止广告拦截提示规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2FudGlhZGJsb2NrZmlsdGVycy50eHQ">https://easylist-downloads.adblockplus.org/antiadblockfilters.txt</a></p><p>Fanboy’s Annoyances List</p><p>去除页面弹窗广告规则</p><p><a href="https://p3terx.com/go/aHR0cHM6Ly9lYXN5bGlzdC1kb3dubG9hZHMuYWRibG9ja3BsdXMub3JnL2ZhbmJveS1hbm5veWFuY2UudHh0">https://easylist-downloads.adblockplus.org/fanboy-annoyance.txt</a></p><p> </p><h3 id="DNS-允许清单"><a href="#DNS-允许清单" class="headerlink" title="DNS 允许清单"></a>DNS 允许清单</h3><p>在这里你可以设置排除封锁清单中的被屏蔽的域名。比如做淘宝客、广告联盟之类的人群可能会用得到，毕竟封锁清单基本涵盖了他们的业务范围。</p><p><img src="/2022/09/20201021161521.png"></p><p> </p><h3 id="DNS-重写"><a href="#DNS-重写" class="headerlink" title="DNS 重写"></a>DNS 重写</h3><p>在这里你可以方便的把一个域名指向一个 IP ，简单来说这个功能相当于 hosts 。</p><p>最典型的一个使用场景是把 DoH&#x2F;​DoT DNS 服务器的域名直接指向它们的 IP ，这样就不再需要进行我查我自己这样浪费时间的迷惑操作了，可进一步加快解析的速度。一般来说 DoT&#x2F;​DoH DNS 服务器的 IP 是固定的，而且 IP 地址和它们自家的传统 DNS 服务器的 IP 是一致的。这里需要注意的是处在公测阶段的 DNS­Pod 是个例外 (难怪腾讯云做不过阿里云，这种细节上的东西很能体现出是否专业)。</p><p><img src="/2022/09/20210423045545.png"></p><p> </p><h3 id="已阻止服务"><a href="#已阻止服务" class="headerlink" title="已阻止服务"></a>已阻止服务</h3><p>在这里你可以一键禁止访问一些热门网站和服务，比如 Face­book 、Twit­ter 。</p><p><img src="/2022/09/20201021161524.png"></p><p> </p><h3 id="自定义过滤规则"><a href="#自定义过滤规则" class="headerlink" title="自定义过滤规则"></a>自定义过滤规则</h3><p>在这里你可以自定义符合 ad­block 语法或 Hosts 语法的规则，以及检查过滤域名是否被过滤。具体如何使用可以参考页面上的示例和官方文档。</p><p><img src="/2022/09/20201021161523.png"></p><p> </p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>到这里 Ad­Guard Home 的设置就算是介绍完了，有简体中文，而且 UI 逻辑很清晰，很容易上手。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这篇教程来详细讲解如何正确的设置 Ad­Guard Home ，来更有效的防止 DNS 污染以及去广告。与其它 Ad­Guard Home </summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AdGuard Home" scheme="https://jarod.vip/tags/AdGuard-Home/"/>
    
  </entry>
  
  <entry>
    <title>wordpress处理cdnjs加载慢的问题</title>
    <link href="https://jarod.vip/2022/09/01/wordpress%E5%A4%84%E7%90%86cdnjs%E5%8A%A0%E8%BD%BD%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://jarod.vip/2022/09/01/wordpress%E5%A4%84%E7%90%86cdnjs%E5%8A%A0%E8%BD%BD%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-08-31T16:54:23.000Z</published>
    <updated>2022-09-29T13:27:46.206Z</updated>
    
    <content type="html"><![CDATA[<p>我这里用的是nginx替代字符串的方法，在appnode下仅供参考</p><p>location ~ ^&#x2F;.+\.php(&#x2F;$) { sub_filter ‘&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs’ ‘&#x2F;&#x2F;cdn.staticfile.org’; sub_filter ‘&#x2F;&#x2F;cdn.datatables.net’ ‘&#x2F;&#x2F;cdn.staticfile.org&#x2F;datatables’; sub_filter_once off;<br>……..</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我这里用的是nginx替代字符串的方法，在appnode下仅供参考&lt;/p&gt;
&lt;p&gt;location ~ ^&amp;#x2F;.+\.php(&amp;#x2F;$) { sub_filter ‘&amp;#x2F;&amp;#x2F;cdnjs.cloudflare.com&amp;#x2F;ajax&amp;#x2F</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Wordpress" scheme="https://jarod.vip/tags/Wordpress/"/>
    
    <category term="appnode" scheme="https://jarod.vip/tags/appnode/"/>
    
    <category term="cdnjs" scheme="https://jarod.vip/tags/cdnjs/"/>
    
  </entry>
  
  <entry>
    <title>用alpine基于smartdns建立本地DNS服务器</title>
    <link href="https://jarod.vip/2022/09/01/%E7%94%A8alpine%E5%9F%BA%E4%BA%8Esmartdns%E5%BB%BA%E7%AB%8B%E6%9C%AC%E5%9C%B0dns%E6%9C%8D%E5%8A%A1%E5%99%A8-2/"/>
    <id>https://jarod.vip/2022/09/01/%E7%94%A8alpine%E5%9F%BA%E4%BA%8Esmartdns%E5%BB%BA%E7%AB%8B%E6%9C%AC%E5%9C%B0dns%E6%9C%8D%E5%8A%A1%E5%99%A8-2/</id>
    <published>2022-08-31T16:53:49.000Z</published>
    <updated>2022-09-29T13:27:46.204Z</updated>
    
    <content type="html"><![CDATA[<p>因为是虚拟机下使用，下载虚拟机专用的镜像</p><p><a href="https://alpinelinux.org/downloads/">https://alpinelinux.org/downloads/</a>    Virtual板块下载86_64镜像</p><p>当前 <a href="http://dl-cdn.alpinelinux.org/alpine/v3.12/releases/x86/_64/alpine-virt-3.12.1-x86/_64.iso">http://dl-cdn.alpinelinux.org/alpine/v3.12/releases/x86\_64/alpine-virt-3.12.1-x86\_64.iso</a></p><p>创建虚拟机 当前alpine内核是5.4，虚拟机创建及初始化过程略过</p><p>apk update &amp;&amp; apk upgrade &amp;&amp; apk add sudo nano</p><p>下载并安装smartdns  from <a href="https://github.com/pymumu/smartdns">https://github.com/pymumu/smartdns</a></p><p>wget <a href="https://github.com/pymumu/smartdns/releases/download/Release33/smartdns.1.2020.09.08/-2235.x86/_64/-linux/-all.tar.gz">https://github.com/pymumu/smartdns/releases/download/Release33/smartdns.1.2020.09.08\-2235.x86\_64\-linux\-all.tar.gz</a><br>tar xvf smartdns.1.2020.09.08-2235.x86_64-linux-all.tar.gz &amp;&amp; cd smartdns &amp;&amp; chmod +x .&#x2F;install &amp;&amp; mkdir mkdir &#x2F;etc&#x2F;default &amp;&amp; .&#x2F;install -i</p><p>rc-service smartdns stop</p><p>mv &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf.bak<br>nano &#x2F;etc&#x2F;smartdns&#x2F;smartdns.conf<br>server-name smartdns<br>bind :53 bind-tcp :53 cache-size 1536 prefetch-domain yes<br>serve-expired yes<br>log-level info<br>server-tls 208.67.222.222:853<br>#server-https <a href="https://dns.twnic.tw/dns-query">https://dns.twnic.tw/dns-query</a><br>server-tls 45.32.55.94:853 server-https <a href="https://cloudflare/-dns.com/dns/-query">https://cloudflare\-dns.com/dns\-query</a><br>server-https <a href="https://neatdns.ustclug.org/resolve">https://neatdns.ustclug.org/resolve</a><br>server-https <a href="https://doh.dns.sb/dns/-query">https://doh.dns.sb/dns\-query</a><br>server-https <a href="https://public.dns.iij.jp/dns/-query">https://public.dns.iij.jp/dns\-query</a><br>server-https <a href="https://dns.rubyfish.cn/dns/-query">https://dns.rubyfish.cn/dns\-query</a><br>server-https <a href="https://dns.dns/-over/-https.com/dns/-query">https://dns.dns\-over\-https.com/dns\-query</a><br>server-https <a href="https://jp.tiar.app/dns/-query">https://jp.tiar.app/dns\-query</a><br>server-https <a href="https://i.233py.com/dns/-query">https://i.233py.com/dns\-query</a><br>server 223.5.5.5:53 server 114.114.114.114:53 conf-file &#x2F;tmp&#x2F;whitelist.conf<br>conf-file &#x2F;tmp&#x2F;blacklist.conf<br>ipset &#x2F;tracker.publicbt.com&#x2F;block<br>ipset &#x2F;tracker.publicbt.com&#x2F;b- address &#x2F;tracker.publicbt.com&#x2F;- address &#x2F;publicbt.com&#x2F;- address &#x2F;<a href="http://www.publicbt.com/-">www.publicbt.com/-</a> address &#x2F;*.publicbt.com&#x2F;-</p><p>取消DHCP DNS自动覆盖</p><p>nano &#x2F;usr&#x2F;share&#x2F;udhcpc&#x2F;default.script 用#注释RESOLV_CONF=“&#x2F;etc&#x2F;resolv.conf”</p><p>修改本地DNS为127.0.0.1</p><p>nano &#x2F;etc&#x2F;resolv.conf<br>nameserver 127.0.0.1</p><p>启动smartdns并测试</p><p>&#x2F;usr&#x2F;sbin&#x2F;smartdns 测试 nslookup -querytype=ptr smartdns</p><p>开机启动，默认的服务没法启动，未知</p><p>&#x2F;usr&#x2F;sbin&#x2F;smartdns</p><p>nano &#x2F;etc&#x2F;local.d&#x2F;init_nextcloud.start #!&#x2F;bin&#x2F;sh<br>&#x2F;usr&#x2F;sbin&#x2F;smartdns<br>chmod +x &#x2F;etc&#x2F;local.d&#x2F;init_nextcloud.start</p><p>rc-update add local</p><p>添加守护</p><p>apk add monit<br>mv &#x2F;etc&#x2F;monitrc &#x2F;etc&#x2F;monitrc.bak<br>nano &#x2F;etc&#x2F;monitrc set daemon 10   #10s循环监控<br>set logfile syslog<br>check process smartdns with pidfile &#x2F;var&#x2F;run&#x2F;smartdns.pid<br>start program = “&#x2F;usr&#x2F;sbin&#x2F;smartdns” with timeout 10 seconds<br>stop program = “&#x2F;usr&#x2F;bin&#x2F;killall smartdns” with timeout 10 seconds<br>chmod 0700 &#x2F;etc&#x2F;monitrc 测试守护配置 monit -t 启动 rc-service monit start<br>monit start all #忽略有个报错<br>添加启动 rc-update add monit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为是虚拟机下使用，下载虚拟机专用的镜像&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://alpinelinux.org/downloads/&quot;&gt;https://alpinelinux.org/downloads/&lt;/a&gt;    Virtual板块下载86_64镜像&lt;/p&gt;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="DNS" scheme="https://jarod.vip/tags/DNS/"/>
    
    <category term="alpine" scheme="https://jarod.vip/tags/alpine/"/>
    
    <category term="smartdns" scheme="https://jarod.vip/tags/smartdns/"/>
    
  </entry>
  
  <entry>
    <title>AdGuard Home搭建DOH</title>
    <link href="https://jarod.vip/2022/09/01/adguard-home%E6%90%AD%E5%BB%BAdoh/"/>
    <id>https://jarod.vip/2022/09/01/adguard-home%E6%90%AD%E5%BB%BAdoh/</id>
    <published>2022-08-31T16:52:25.000Z</published>
    <updated>2022-09-29T13:27:46.202Z</updated>
    
    <content type="html"><![CDATA[<p>一键安装docker</p><p>curl -fsSL <a href="https://get.docker.com/">https://get.docker.com</a> -o get-docker.sh &amp;&amp; sh get-docker.sh<br>#创建docker   #<a href="https://hub.docker.com/r/adguard/adguardhome">https://hub.docker.com/r/adguard/adguardhome</a></p><p>docker pull adguard&#x2F;adguardhome</p><p>docker run --name adguardhome\<br>    --restart unless-stopped\<br>    -v &#x2F;root&#x2F;adguardhome&#x2F;workdir:&#x2F;opt&#x2F;adguardhome&#x2F;work\<br>    -v &#x2F;root&#x2F;adguardhome&#x2F;confdir:&#x2F;opt&#x2F;adguardhome&#x2F;conf\<br>    -p 3000:3000&#x2F;tcp\<br>    -p 36886:36886&#x2F;tcp\<br>    -d adguard&#x2F;adguardhome</p><p>#3000为管理端口 第一setup 管理端口80改3000<br>#36886为https端口  默认443 需修改</p><p>设置参考# <a href="https://www.nange.cn/dns-over-https-for-adguard.html">https://www.nange.cn/dns-over-https-for-adguard.html</a></p><p>appnode为例<br>反代后端路径  &#x2F;dns-query<br>如果填&#x2F;会暴露 &#x2F;dns-query<br>请求路径 自己生成一个随机数 如  &#x2F;oOnZY74WyMWFuM34sgCDv2V2LB   这个就是藏起来的</p><p>appnode let’s生成证书  把证书复制到ahm</p><p>验证工具<br>wget <a href="https://github.com/ameshkov/dnslookup/releases/download/v1.4.8/dnslookup-linux-amd64-v1.6.0.tar.gz">https://github.com/ameshkov/dnslookup/releases/download/v1.4.8/dnslookup-linux-amd64-v1.6.0.tar.gz</a><br>tar zxf dnslookup-linux-amd64-v1.4.8.tar.gz &amp;&amp; cd linux-amd64<br>dnslookup <a href="http://www.google.com/">www.google.com</a> <a href="https://dns.123.com/oOnZY74WyMWFuM34sgCDv2V2LB">https://dns.123.com/oOnZY74WyMWFuM34sgCDv2V2LB</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一键安装docker&lt;/p&gt;
&lt;p&gt;curl -fsSL &lt;a href=&quot;https://get.docker.com/&quot;&gt;https://get.docker.com&lt;/a&gt; -o get-docker.sh &amp;amp;&amp;amp; sh get-docker.sh&lt;br</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="AdGuard" scheme="https://jarod.vip/tags/AdGuard/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 最给力写代码软件</title>
    <link href="https://jarod.vip/2022/08/14/sublime-text-3-%E6%9C%80%E7%BB%99%E5%8A%9B%E5%86%99%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6/"/>
    <id>https://jarod.vip/2022/08/14/sublime-text-3-%E6%9C%80%E7%BB%99%E5%8A%9B%E5%86%99%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6/</id>
    <published>2022-08-13T16:25:37.000Z</published>
    <updated>2022-09-29T13:27:46.201Z</updated>
    
    <content type="html"><![CDATA[<h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><p>一款用于代码、标记和散文的精致文本编辑器。</p><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><p>官方网站：<a href="https://www.vpsmm.com/go/aHR0cHM6Ly93d3cuc3VibGltZXRleHQuY29tLw==">https://www.sublimetext.com/</a></p><h3 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h3><p>-—- BEGIN LICENSE —–<br>Member J2TeaM<br>Single User License<br>EA7E-1011316<br>D7DA350E 1B8B0760 972F8B60 F3E64036<br>B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD<br>FA0A2ABE 25F65BD8 D51458E5 3923CE80<br>87428428 79079A01 AA69F319 A1AF29A4<br>A684C2DC 0B1583D4 19CBD290 217618CD<br>5653E0A0 BACE3948 BB2EE45E 422D2C87<br>DD9AF44B 99C49590 D2DBDEE1 75860FD2<br>8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864<br>—— END LICENSE ——</p><h3 id="HOSTS文件"><a href="#HOSTS文件" class="headerlink" title="HOSTS文件"></a>HOSTS文件</h3><p>注册成功后，请修改一下HOSTS文件，永久授权。</p><p>127.0.0.1    sublimetext.com<br>127.0.0.1    <a href="http://www.sublimetext.com/">www.sublimetext.com</a><br>127.0.0.1    sublimehq.com<br>127.0.0.1    telemetry.sublimehq.com<br>127.0.0.1    license.sublimehq.com</p><h3 id="小编截图"><a href="#小编截图" class="headerlink" title="小编截图"></a>小编截图</h3><p><img src="/2022/08/3641765639.png" alt="sub.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;软件介绍&quot;&gt;&lt;a href=&quot;#软件介绍&quot; class=&quot;headerlink&quot; title=&quot;软件介绍&quot;&gt;&lt;/a&gt;软件介绍&lt;/h3&gt;&lt;p&gt;一款用于代码、标记和散文的精致文本编辑器。&lt;/p&gt;
&lt;h3 id=&quot;软件下载&quot;&gt;&lt;a href=&quot;#软件下载&quot; class=</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Sublime Text 3" scheme="https://jarod.vip/tags/Sublime-Text-3/"/>
    
  </entry>
  
  <entry>
    <title>一键在Linux系统部署可浏览器访问Linux桌面环境（完测）</title>
    <link href="https://jarod.vip/2022/02/08/%E4%B8%80%E9%94%AE%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%8F%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AElinux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E5%AE%8C%E6%B5%8B%EF%BC%89/"/>
    <id>https://jarod.vip/2022/02/08/%E4%B8%80%E9%94%AE%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E5%8F%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AElinux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E5%AE%8C%E6%B5%8B%EF%BC%89/</id>
    <published>2022-02-08T09:02:30.000Z</published>
    <updated>2022-09-29T13:27:46.199Z</updated>
    
    <content type="html"><![CDATA[<p>我们很多网友朋友选择Linux服务器并不是单单用来建站的，比如有些外贸或者外汇业务需要，会使用到桌面环境的服务器系统。但是我们应该知道海外服务器商家较多是Linux系统，Windows系统很少而且成本较高。这不我们在需要桌面环境的Linux系统我们可以直接安装VNC或者是RDP这样的桌面环境。</p><p><a href="https://www.laozuo.org/">老左笔记</a>在之前的文章中也有过不少安装包，目前也不清楚这些教程是否有效，以后有时间一一重新整理一遍。今天老左要分享的是来自香菇肥牛分享的一键Linux桌面安装脚本环境，支持可以快速安装RDP或者VNC桌面环境，支持我们常用的火狐浏览器，且当然可以选择中文和英文版本。在这篇文章中，老左花费点时间在Linux服务器Debian 10（也支持其他）版本中完测可用的，这里根据习惯记录下来。如果也有同样需要的网友站长可以参考。</p><p><strong>第一、脚本支持系统及脚本安装</strong></p><p>根据官方介绍是支持Ubuntu 18.04&#x2F;20.04 LTS, Debian 10, 以及CentOS 7&#x2F;8 64位操作系统上运行。在这篇文章中老左选择的是Debian 10 64位。</p><p>1、中文</p><blockquote><p>wget <a href="https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop/_zh-CN.sh">https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop\_zh-CN.sh</a> &amp;&amp; sudo bash OneClickDesktop_zh-CN.sh</p></blockquote><p>2、英文</p><blockquote><p>wget <a href="https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop.sh">https://raw.githubusercontent.com/Har-Kuun/OneClickDesktop/master/OneClickDesktop.sh</a> &amp;&amp; sudo bash OneClickDesktop.sh</p></blockquote><p>这里有中文和英文版本，这个需要根据我们实际项目需要。有些必须在英文环境下，那就不能用中文，这个我们有需要的朋友知道的。这里我选择的是中文版本安装。</p><p><strong>第二、一键Linux桌面安装过程</strong></p><p>这里老左记录下来我完测Linux桌面的安装过程。</p><p><img src="/2022/02/OneClickDesktop-1.jpg"></p><p>根据提示向导，设置登录面板的密码账户，以及分辨率。</p><p><img src="/2022/02/OneClickDesktop-2.jpg"></p><p>因为会采用浏览器登录桌面方式，所以我们需要先解析一个域名（这里我用二级域名），解析到服务器IP，然后会配置SSL，自动的。</p><p><img src="/2022/02/OneClickDesktop-3.jpg"></p><p>在安装过程中可能需要我们确认，我们一般回车即可。有需要安装的我们选择YES回车。</p><p><img src="/2022/02/OneClickDesktop-4.jpg"></p><p>语言默认英文键盘。</p><p><img src="/2022/02/OneClickDesktop-5.jpg"></p><p>这个安装过程实际上还是比较长的，我选择的是RDP，过程就是等待，看到上图才是正常的。我们可以去登录看看，会不会有错误呢？</p><p><strong>第三、桌面环境登录验证</strong></p><p>根据提示，我们需要用自己绑定的域名打开浏览器。</p><p><img src="/2022/02/OneClickDesktop-6.jpg"></p><p>这个用户名和密码是我们自己设置的。</p><p><img src="/2022/02/OneClickDesktop-7.jpg"></p><p>这个用户名和密码是我们服务器的root账户。</p><p><img src="/2022/02/OneClickDesktop-8.jpg"></p><p>还算很顺利的登录进来，是我们熟悉的Linux桌面环境而且我们可以看到是有安装默认的火狐浏览器。</p><p><img src="/2022/02/OneClickDesktop-9.jpg"></p><p>这样我们可以很正常的登录浏览器或者是我们可以有需要在Linux系统调试软件的可以使用。这个比通过远程连接登录服务器方便很多，直接浏览器打开登录，比较便捷，可以随时的登录，无需软件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们很多网友朋友选择Linux服务器并不是单单用来建站的，比如有些外贸或者外汇业务需要，会使用到桌面环境的服务器系统。但是我们应该知道海外服务器商家较多是Linux系统，Windows系统很少而且成本较高。这不我们在需要桌面环境的Linux系统我们可以直接安装VNC或者是R</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="Linux桌面环境" scheme="https://jarod.vip/tags/Linux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>LinuxMirrors一键脚本更换Linux系统源提高软件安装速度（包含10+国内源）</title>
    <link href="https://jarod.vip/2022/02/08/linuxmirrors%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%8D%A2linux%E7%B3%BB%E7%BB%9F%E6%BA%90%E6%8F%90%E9%AB%98%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%EF%BC%88%E5%8C%85%E5%90%AB10/"/>
    <id>https://jarod.vip/2022/02/08/linuxmirrors%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%8D%A2linux%E7%B3%BB%E7%BB%9F%E6%BA%90%E6%8F%90%E9%AB%98%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E9%80%9F%E5%BA%A6%EF%BC%88%E5%8C%85%E5%90%AB10/</id>
    <published>2022-02-08T08:57:51.000Z</published>
    <updated>2022-09-29T13:27:46.198Z</updated>
    
    <content type="html"><![CDATA[<p>我们在选择海外服务器的时候是不是在安装软件比较慢？主要是海外服务器的镜像源都引用的海外节点的。这里我们一般会将服务器登录之后就更换国内的镜像源，这样安装软件的时候速度会比较快。老左在网站中也有分享过一些类似的文章，比如更换163、阿里云的源，包含Debian、Centos等。这样更换稍微有点笨拙。</p><p>在这里，老左看到有LinuxMirrors一键脚本可以用来更换Linux系统的源，直接运行脚本即可。包含我们常见的Debian、CentOS、Ubuntu等镜像。</p><p><strong>第一、脚本命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)</span><br></pre></td></tr></table></figure><p>Select Code</p><p>Copy</p><p>这里我们执行命令即可。</p><p><strong>第二、安装进程</strong></p><p>我们看看安装的过程。</p><p><img src="/2022/02/ChangeMirrors-1.jpg"></p><p>这里我们可以根据需要选择源地址。比如选择1，为阿里云。</p><p><img src="/2022/02/ChangeMirrors-2.jpg"></p><p>根据向导替换源后执行更新。最后如果没有报错，那就完全没有问题。</p><p>这样，是不是比较简单的就可以将服务器的Linux镜像源更新到我们的国内源，安装软件的速度和效率提高不少。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们在选择海外服务器的时候是不是在安装软件比较慢？主要是海外服务器的镜像源都引用的海外节点的。这里我们一般会将服务器登录之后就更换国内的镜像源，这样安装软件的时候速度会比较快。老左在网站中也有分享过一些类似的文章，比如更换163、阿里云的源，包含Debian、Centos等</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="LinuxMirrors" scheme="https://jarod.vip/tags/LinuxMirrors/"/>
    
  </entry>
  
  <entry>
    <title>Linux下，一键检测VPS回程国内三网路由</title>
    <link href="https://jarod.vip/2022/01/06/linux%E4%B8%8B%EF%BC%8C%E4%B8%80%E9%94%AE%E6%A3%80%E6%B5%8Bvps%E5%9B%9E%E7%A8%8B%E5%9B%BD%E5%86%85%E4%B8%89%E7%BD%91%E8%B7%AF%E7%94%B1/"/>
    <id>https://jarod.vip/2022/01/06/linux%E4%B8%8B%EF%BC%8C%E4%B8%80%E9%94%AE%E6%A3%80%E6%B5%8Bvps%E5%9B%9E%E7%A8%8B%E5%9B%BD%E5%86%85%E4%B8%89%E7%BD%91%E8%B7%AF%E7%94%B1/</id>
    <published>2022-01-05T17:15:32.000Z</published>
    <updated>2022-09-29T13:27:46.195Z</updated>
    
    <content type="html"><![CDATA[<p>一键检测VPS回程国内三网路由，建议root用户。</p><p>用法：</p><p>curl <a href="https://raw.githubusercontent.com/zhucaidan/mtr/_trace/main/mtr/_trace.shbash">https://raw.githubusercontent.com/zhucaidan/mtr\_trace/main/mtr\_trace.shbash</a></p><p>或者</p><p>curl <a href="https://zhujiwiki.com/wp-content/uploads/2022/01/mtr/_trace.shbash">https://zhujiwiki.com/wp-content/uploads/2022/01/mtr\_trace.shbash</a></p><p>支持的线路为：电信CN2 GT，电信CN2 GIA，联通169，电信163，联通9929，联通4837，移动CMI</p><p><img src="/2022/01/mtr_trace.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一键检测VPS回程国内三网路由，建议root用户。&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;p&gt;curl &lt;a href=&quot;https://raw.githubusercontent.com/zhucaidan/mtr/_trace/main/mtr/_trace.shbash&quot;&gt;</summary>
      
    
    
    
    <category term="uncategorized" scheme="https://jarod.vip/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux终端下截图</title>
    <link href="https://jarod.vip/2022/01/06/linux%E7%BB%88%E7%AB%AF%E4%B8%8B%E6%88%AA%E5%9B%BE/"/>
    <id>https://jarod.vip/2022/01/06/linux%E7%BB%88%E7%AB%AF%E4%B8%8B%E6%88%AA%E5%9B%BE/</id>
    <published>2022-01-05T16:06:22.000Z</published>
    <updated>2022-09-29T13:27:46.194Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网页截图"><a href="#网页截图" class="headerlink" title="网页截图"></a>网页截图</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libqt4-webkit libqt4-dev g++ sudo </span><br><span class="line">apt-get install xvfb sudo </span><br><span class="line">apt-get install cutycapt</span><br></pre></td></tr></table></figure><p>安装中文字体：</p><p>复制windows下的字体文件到&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;目录下</p><p>执行fc-cache刷新字体缓存</p><p>使用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xvfb-run cutycapt --url=http://malu.me --out=malu.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h3><blockquote><p>个人用户字体文件在~&#x2F;.local&#x2F;share&#x2F;fonts</p><p>系统字体文件在&#x2F;usr&#x2F;share&#x2F;fonts</p><p>字体配置文件在&#x2F;etc&#x2F;fonts&#x2F;</p></blockquote><h3 id="更多命令行截图参考："><a href="#更多命令行截图参考：" class="headerlink" title="更多命令行截图参考："></a>更多命令行截图参考：</h3><p>Ghost.py网页截图: <a href="http://git.malu.me/Ghost.py%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/">http://git.malu.me/Ghost.py%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</a></p><h1 id="显示桌面截图"><a href="#显示桌面截图" class="headerlink" title="显示桌面截图"></a>显示桌面截图</h1><p>需要安装fbcat</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install fbcat</span><br></pre></td></tr></table></figure><p>使用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">NAME=`date &quot;+%Y%m%d_%H_%M_%S&quot;`</span><br><span class="line">PNG_PATH=&quot;/tmp/fbcat_&quot;$NAME&quot;.png&quot;</span><br><span class="line">fbgrab $PNG_PATH &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sz $PNG_PATH</span><br></pre></td></tr></table></figure><h1 id="摄像头截图"><a href="#摄像头截图" class="headerlink" title="摄像头截图"></a>摄像头截图</h1><p>借助命令streamer：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install streamer</span><br></pre></td></tr></table></figure><p>使用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">NAME=`date &quot;+%Y%m%d_%H_%M_%S&quot;`</span><br><span class="line">streamer -c /dev/video0 -t 3 -r 0.1 -q -b 16 -o /root/camera/jp_$NAME-00.jpeg &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sz /root/camera/jp_$NAME-02.jpeg</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">killall streamer</span></span><br></pre></td></tr></table></figure><p>其中：</p><p>-t 抓取3张图</p><p>-r 0.1帧率</p><p>以上参数为了给摄像头启动时间（部分摄像头会休眠）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网页截图&quot;&gt;&lt;a href=&quot;#网页截图&quot; class=&quot;headerlink&quot; title=&quot;网页截图&quot;&gt;&lt;/a&gt;网页截图&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="截图" scheme="https://jarod.vip/tags/%E6%88%AA%E5%9B%BE/"/>
    
    <category term="终端" scheme="https://jarod.vip/tags/%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>二级proxy部署</title>
    <link href="https://jarod.vip/2022/01/06/%E4%BA%8C%E7%BA%A7proxy%E9%83%A8%E7%BD%B2/"/>
    <id>https://jarod.vip/2022/01/06/%E4%BA%8C%E7%BA%A7proxy%E9%83%A8%E7%BD%B2/</id>
    <published>2022-01-05T16:05:29.000Z</published>
    <updated>2022-09-29T13:27:46.192Z</updated>
    
    <content type="html"><![CDATA[<p>shadowsocks:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y python-pip python-m2crypto</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>Debian &#x2F; Ubuntu:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>CentOS:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -p 3000 -k password -m aes-128-cfb -d start</span><br></pre></td></tr></table></figure><p>停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -d stop</span><br></pre></td></tr></table></figure><p>二级COW架设源码:<a href="https://github.com/cyfdecyf/cow">https://github.com/cyfdecyf/cow</a></p><p>安装过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L git.io/cow  bash</span><br></pre></td></tr></table></figure><p>配置文件路径:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.cow/rc</span><br></pre></td></tr></table></figure><p>手工安装：</p><p><a href="http://dl.chenyufei.info/cow/0.9.6/cow-linux64-0.9.6.gz">http://dl.chenyufei.info/cow/0.9.6/cow-linux64-0.9.6.gz</a></p><p>配置文件：</p><p><a href="https://raw.github.com/cyfdecyf/cow/0.9.6/doc/sample-config/rc">https://raw.github.com/cyfdecyf/cow/0.9.6/doc/sample-config/rc</a> &#x2F;root&#x2F;.cow&#x2F;rc</p><h1 id="二级proxy部署-第二篇"><a href="#二级proxy部署-第二篇" class="headerlink" title="二级proxy部署 第二篇"></a>二级proxy部署 第二篇</h1><p>上面写的是shadowsocks+cow实现二级proxy，接下来用一种简单的方式来实现二级proxy：</p><p>首先，一级proxy开启ssh服务。</p><p>二级proxy上用SSH端口转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -D 0.0.0.0:8888 username@ssh.malu.me</span><br></pre></td></tr></table></figure><p>输入密码，这段命令意思是连接远程主机ssh.malu.me,然后在本地0.0.0.0地址、端口8888上开启socket5监听。</p><p>这样只要访问二级proxy上的socket5代理就能穿过两层代理了。</p><h1 id="二级proxy部署-自动脚本"><a href="#二级proxy部署-自动脚本" class="headerlink" title="二级proxy部署 自动脚本"></a>二级proxy部署 自动脚本</h1><p>相关参数根据实际修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/expect -f</span></span><br><span class="line">set timeout 30</span><br><span class="line">set host ssh.malu.me</span><br><span class="line">set name root</span><br><span class="line">set passwd userpasswd</span><br><span class="line">set port 22</span><br><span class="line">set lisenport 8888</span><br><span class="line">spawn sudo /etc/init.d/ssh start</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn killall ssh</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn ssh -NfR 1234:localhost:2222 $host -l $name -p $port</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;*#&quot;</span><br><span class="line">spawn ssh $host -l $name -p $port</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;]$&quot;</span><br><span class="line">sleep 1</span><br><span class="line">send &quot;ssh -N -f -D 0.0.0.0:$lisenport root@localhost -p1234\r&quot;</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;</span><br><span class="line">&quot;password:&quot; &#123; sleep 1;send &quot;$passwd\r&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect  &quot;]$&quot;</span><br><span class="line">sleep 1</span><br><span class="line">send &quot;exit\r&quot; </span><br><span class="line">expect eof</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h1 id="二级proxy部署-直连windows"><a href="#二级proxy部署-直连windows" class="headerlink" title="二级proxy部署 - 直连windows"></a>二级proxy部署 - 直连windows</h1><p>windows下安装openssh</p><p>下载地址：<a href="https://github.com/PowerShell/Win32-OpenSSH/releases">https://github.com/PowerShell/Win32-OpenSSH/releases</a></p><p>1.解压OpenSSH-Win64.zip到C:\Program Files\OpenSSH目录下，在DOS窗口进入OpenSSH目录</p><p>2.安装SSH host keys</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ssh-keygen.exe -A</span><br></pre></td></tr></table></figure><p>3.打开防火墙22端口</p><p>4.安装SSHD服务并在服务窗口找到名为“SSHD”的服务，右键将其启动，并设置为随操作系统自动启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\sshd.exe install</span><br></pre></td></tr></table></figure><p>也可以直接启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\sshd.exe</span><br></pre></td></tr></table></figure><p>5.查看启动端口,如果需要监听外网，可以修改当前目录sshd_config文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ant</span><br></pre></td></tr></table></figure><p>sshd_config:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ListenAddress 0.0.0.0</span><br></pre></td></tr></table></figure><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>根据二级proxy的原理，实质上是在两台服务器之间实现端口转发。</p><p>那么对应内网的服务器，只要能访问外网，那么利用SSH隧道端口映射就能实现内网穿透。</p><p>首先需要一台能远程登录的外网服务器。</p><p>然后内网服务器上执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -gCNfR 80:localhost:8080 ssh.malu.me -l root -p 22</span><br></pre></td></tr></table></figure><p>g：在-L&#x2F;-R&#x2F;-D参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。</p><p>（-g参数如果不生效，其实这是ssh默认的安全策略所致，需要在服务端&#x2F;etc&#x2F;ssh&#x2F;sshd_config 添加 gatewayports yes 重启sshd即可）</p><p>C：压缩数据传输。</p><p>N：不执行脚本或命令，通常与-f连用。</p><p>f：后台认证用户&#x2F;密码，通常和-N连用，不用登录到远程主机。</p><p>-R 本地端口:目标IP:目标端口</p><p>将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p>-L 本地端口:目标IP:目标端口</p><p>将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p>-D IP:port</p><p>指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.</p><h2 id="serveo"><a href="#serveo" class="headerlink" title="serveo"></a>serveo</h2><p>官网：<a href="https://serveo.net/">https://serveo.net</a></p><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R testname:80:localhost:80 serveo.net -o ServerAliveInterval=60</span><br></pre></td></tr></table></figure><p>文档：<a href="https://www.jianshu.com/p/d0b3991a9ce1">https://www.jianshu.com/p/d0b3991a9ce1</a></p><h2 id="zerotier"><a href="#zerotier" class="headerlink" title="zerotier"></a>zerotier</h2><p>官网：<a href="https://www.zerotier.com/">https://www.zerotier.com</a></p><p>文档：<a href="https://www.zerotier.com/manual">https://www.zerotier.com/manual</a></p><p>国内服务：<a href="https://www.kancloud.cn/baoji/_enku/tx/_ip/_01/936021">https://www.kancloud.cn/baoji\_enku/tx\_ip\_01/936021</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">zerotier-one -d</span><br><span class="line"></span><br><span class="line"># 获取地址和服务状态</span><br><span class="line">zerotier-cli status</span><br><span class="line"></span><br><span class="line"># 加入、离开、列出网络</span><br><span class="line">zerotier-cli join &lt;Network ID&gt;</span><br><span class="line">zerotier-cli leave &lt;Network ID&gt;</span><br><span class="line">zerotier-cli listnetworks</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">systemctl restart zerotier-one</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="报错：Cannot-connect-to-Zerotier-service"><a href="#报错：Cannot-connect-to-Zerotier-service" class="headerlink" title="报错：Cannot connect to Zerotier service"></a>报错：Cannot connect to Zerotier service</h3><p>查看9993端口是否被占用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ab</span><br></pre></td></tr></table></figure><h1 id="二级proxy部署-轻量级SSH安装"><a href="#二级proxy部署-轻量级SSH安装" class="headerlink" title="二级proxy部署 - 轻量级SSH安装"></a>二级proxy部署 - 轻量级SSH安装</h1><p>下载地址：<a href="https://matt.ucc.asn.au/dropbear/">https://matt.ucc.asn.au/dropbear/</a></p><p>dropbear的编译安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ./configure --prefix=/usr/local/dropbear --sysconfdir=/etc/dropbear --disable-pam </span><br><span class="line"># make PROGRAMS=&quot;dropbear dbclient dropbearkey dropbearconvert scp&quot;</span><br><span class="line"># make PROGRAMS=&quot;dropbear dbclient dropbearkey dropbearconvert scp&quot; install</span><br></pre></td></tr></table></figure><p>加入环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/dropbear/bin:/usr/local/dropbear/sbin:$PATH</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;shadowsocks:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="二级proxy" scheme="https://jarod.vip/tags/%E4%BA%8C%E7%BA%A7proxy/"/>
    
  </entry>
  
  <entry>
    <title>Linux下查看网速脚本</title>
    <link href="https://jarod.vip/2022/01/06/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E7%BD%91%E9%80%9F%E8%84%9A%E6%9C%AC/"/>
    <id>https://jarod.vip/2022/01/06/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E7%BD%91%E9%80%9F%E8%84%9A%E6%9C%AC/</id>
    <published>2022-01-05T16:04:07.000Z</published>
    <updated>2022-09-29T13:27:46.190Z</updated>
    
    <content type="html"><![CDATA[<p>使用方法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./n1.sh eth0</span><br></pre></td></tr></table></figure><p>cat n1.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">eth=<span class="variable">$1</span></span><br><span class="line">RXpre=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">TXpre=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line">RXnext=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">TXnext=$(<span class="built_in">cat</span> /proc/net/dev  grep <span class="variable">$eth</span>  <span class="built_in">tr</span> : <span class="string">&quot; &quot;</span>  awk <span class="string">&#x27;&#123;print $10&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">#clear</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t RX `date +%k:%M:%S` TX&quot;</span></span><br><span class="line">RX=$((<span class="variable">$&#123;RXnext&#125;</span>-<span class="variable">$&#123;RXpre&#125;</span>))</span><br><span class="line">TX=$((<span class="variable">$&#123;TXnext&#125;</span>-<span class="variable">$&#123;TXpre&#125;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$RX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">RX=<span class="string">&quot;<span class="variable">$&#123;RX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$RX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span>  awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span>  awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$TX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">TX=<span class="string">&quot;<span class="variable">$&#123;TX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$TX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span>  awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span>  awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="iftop"><a href="#iftop" class="headerlink" title="iftop"></a>iftop</h1><p>1、iftop界面相关说明</p><p>界面上面显示的是类似刻度尺的刻度范围，为显示流量图形的长条作标尺用的。 中间的&lt;&#x3D; &#x3D;&gt;这两个左右箭头，表示的是流量的方向。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TX：发送流量 </span><br><span class="line">RX：接收流量 </span><br><span class="line">TOTAL：总流量 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、iftop相关参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-i设定监测的网卡，如：# iftop -i eth1 </span><br><span class="line">-B 以bytes为单位显示流量(默认是bits)，如：# iftop -B </span><br><span class="line">-n使host信息默认直接都显示IP，如：# iftop -n </span><br><span class="line">-N使端口信息默认直接都显示端口号，如: # iftop -N </span><br><span class="line">-F显示特定网段的进出流量，如# iftop -F 10.10.1.0/24或# iftop -F 10.10.1.0/255.255.255.0 </span><br><span class="line">-h（display this message），帮助，显示参数信息 </span><br><span class="line">-p使用这个参数后，中间的列表显示的本地主机信息，出现了本机以外的IP信息; </span><br><span class="line">-b使流量图形条默认就显示; </span><br><span class="line">-f这个暂时还不太会用，过滤计算包用的; </span><br><span class="line">-P使host信息及端口信息默认就都显示; </span><br><span class="line">-m设置界面最上边的刻度的最大值，刻度分五个大段显示，例：# iftop -m 100M </span><br></pre></td></tr></table></figure><p>3、进入iftop画面后的一些操作命令(注意大小写)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">按h切换是否显示帮助; </span><br><span class="line">按n切换显示本机的IP或主机名; </span><br><span class="line">按s切换是否显示本机的host信息; </span><br><span class="line">按d切换是否显示远端目标主机的host信息; </span><br><span class="line">按t切换显示格式为2行/1行/只显示发送流量/只显示接收流量; </span><br><span class="line">按N切换显示端口号或端口服务名称; </span><br><span class="line">按S切换是否显示本机的端口信息; </span><br><span class="line">按D切换是否显示远端目标主机的端口信息; </span><br><span class="line">按p切换是否显示端口信息; </span><br><span class="line">按P切换暂停/继续显示; </span><br><span class="line">按b切换是否显示平均流量图形条; </span><br><span class="line">按B切换计算2秒或10秒或40秒内的平均流量; </span><br><span class="line">按T切换是否显示每个连接的总流量; </span><br><span class="line">按l打开屏幕过滤功能，输入要过滤的字符，比如ip,按回车后，屏幕就只显示这个IP相关的流量信息; </span><br><span class="line">按L切换显示画面上边的刻度;刻度不同，流量图形条会有变化; </span><br><span class="line">按j或按k可以向上或向下滚动屏幕显示的连接记录; </span><br><span class="line">按1或2或3可以根据右侧显示的三列流量数据进行排序; </span><br><span class="line">按&lt;根据左边的本机名或IP排序; </span><br><span class="line">按&gt;根据远端目标主机的主机名或IP排序; </span><br><span class="line">按o切换是否固定只显示当前的连接; </span><br><span class="line">按f可以编辑过滤代码</span><br><span class="line">按!可以使用Shell命令</span><br><span class="line">按q退出监控。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用方法:&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="网速" scheme="https://jarod.vip/tags/%E7%BD%91%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>SSH反向连接</title>
    <link href="https://jarod.vip/2022/01/06/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/"/>
    <id>https://jarod.vip/2022/01/06/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-01-05T16:03:41.000Z</published>
    <updated>2022-09-29T13:27:46.189Z</updated>
    
    <content type="html"><![CDATA[<p>首先2台主机都要安装ssh服务端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>如果有需要开启root远程登录，可以修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>找到PermitRootLogin no一行，改为PermitRootLogin yes</p><h3 id="A要控制B"><a href="#A要控制B" class="headerlink" title="A要控制B"></a>A要控制B</h3><p>A主机：外网，ip：123.123.123.123，sshd端口：2221</p><p>B主机：内网，sshd端口：2223</p><p>无论是外网主机A，还是内网主机B都需要跑ssh daemon</p><h3 id="1-首先在B上执行"><a href="#1-首先在B上执行" class="headerlink" title="1.首先在B上执行"></a>1.首先在B上执行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><p>这句话的意思是将A主机的1234端口和B主机的2223端口绑定，相当于远程端口映射（Remote Port Forwarding）。</p><h3 id="2-这时在A主机上sshd会listen本地1234端口"><a href="#2-这时在A主机上sshd会listen本地1234端口" class="headerlink" title="2.这时在A主机上sshd会listen本地1234端口"></a>2.这时在A主机上sshd会listen本地1234端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost -p1234</span><br></pre></td></tr></table></figure><h3 id="自动登录"><a href="#自动登录" class="headerlink" title="自动登录"></a>自动登录</h3><p>方法1.在内网B主机上生产公钥和私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen</span><br></pre></td></tr></table></figure><p>…(一直按Enter，最后在~&#x2F;.ssh&#x2F;下生成密钥)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls ~/.ssh/</span><br><span class="line">id_rsa id_rsa.pub known_hosts</span><br></pre></td></tr></table></figure><p>复制B主机上生成的id_rsa.pub公钥到外网A主机上，并将内容加入到~&#x2F;.ssh&#x2F;authorized_keys中</p><p>方法2.直接在B主机上执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id user1@123.123.123.123</span><br></pre></td></tr></table></figure><h3 id="SSH-keygen-根据私钥生成公钥"><a href="#SSH-keygen-根据私钥生成公钥" class="headerlink" title="SSH-keygen 根据私钥生成公钥"></a>SSH-keygen 根据私钥生成公钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -y -f id_rsa</span><br></pre></td></tr></table></figure><h3 id="用Autossh保持ssh反向隧道一直连接"><a href="#用Autossh保持ssh反向隧道一直连接" class="headerlink" title="用Autossh保持ssh反向隧道一直连接"></a>用Autossh保持ssh反向隧道一直连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><p>注：默认autossh没有配置环境变量，需要自己设定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export AUTOSSH_PIDFILE=/var/run/autossh.pid</span><br><span class="line">export AUTOSSH_POLL=60</span><br><span class="line">export AUTOSSH_FIRST_POLL=30</span><br><span class="line">export AUTOSSH_GATETIME=0</span><br><span class="line">export AUTOSSH_DEBUG=1</span><br></pre></td></tr></table></figure><p>为了保证开机时就启动，需要把以上环境变量写入&#x2F;etc&#x2F;profile中</p><p>然后在&#x2F;etc&#x2F;init&#x2F;rc.local中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -NfR 1234:localhost:2223 user1@123.123.123.123 -p2221</span><br></pre></td></tr></table></figure><h3 id="使用curl让反向隧道保持连接"><a href="#使用curl让反向隧道保持连接" class="headerlink" title="使用curl让反向隧道保持连接"></a>使用curl让反向隧道保持连接</h3><p>在A主机上配置计划任务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * netstat -lnt4pgrep &quot;sshd: root&quot;awk &#x27;&#123;print $4&#125;&#x27;awk -F &#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;xargs -i curl localhost:&#123;&#125;</span><br></pre></td></tr></table></figure><p>定时向本地的隧道端口请求数据</p><h1 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h1><p>默认只能通过ssh localhost -p来连接，如果要实现远程登录内网B主机，可以在A主机上再开一个本地端口转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -g -L 80:localhost:1234 localhost</span><br></pre></td></tr></table></figure><p>远程就可以通过A主机的80端口去连接B主机了。</p><p>我们甚至可以启动socket5隧道：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -D 0.0.0.0:8888 root@localhost -p1234</span><br></pre></td></tr></table></figure><h3 id="ssh-指定私钥文件"><a href="#ssh-指定私钥文件" class="headerlink" title="ssh 指定私钥文件:"></a>ssh 指定私钥文件:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i /root/.ssh/idrsa root@malu.me -p 2111</span><br></pre></td></tr></table></figure><h3 id="ssh取消主机密钥检查"><a href="#ssh取消主机密钥检查" class="headerlink" title="ssh取消主机密钥检查"></a>ssh取消主机密钥检查</h3><p>1.使用ssh连接远程主机时加上“-o StrictHostKeyChecking&#x3D;no”的选项，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  -o StrictHostKeyChecking=no  192.168.xxx.xxx</span><br></pre></td></tr></table></figure><p>2.一个彻底去掉这个提示的方法是，修改&#x2F;etc&#x2F;ssh&#x2F;ssh_config文件（或$HOME&#x2F;.ssh&#x2F;config）中的配置，添加如下两行配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">StrictHostKeyChecking no</span><br><span class="line">UserKnownHostsFile /dev/null</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先2台主机都要安装ssh服务端：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="SSH" scheme="https://jarod.vip/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Vim日常笔记</title>
    <link href="https://jarod.vip/2022/01/06/vim%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/"/>
    <id>https://jarod.vip/2022/01/06/vim%E6%97%A5%E5%B8%B8%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-05T16:03:06.000Z</published>
    <updated>2022-09-29T13:27:46.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim乱码处理"><a href="#Vim乱码处理" class="headerlink" title="Vim乱码处理"></a>Vim乱码处理</h1><p>在<code>/etc/vim/vimrc</code>文件末尾添加</p><p><code>set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</code></p><h1 id="vim-去掉自动注释和自动回车"><a href="#vim-去掉自动注释和自动回车" class="headerlink" title="vim 去掉自动注释和自动回车"></a>vim 去掉自动注释和自动回车</h1><p>取消</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set paste</span><br></pre></td></tr></table></figure><p>恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set paste!</span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>vim删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x        删除当前光标下的字符</span><br><span class="line">dw       删除光标之后的单词剩余部分。</span><br><span class="line">d$       删除光标之后的该行剩余部分。</span><br><span class="line">dd       删除当前行。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>vim撤销、恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u   撤销上一步的操作</span><br><span class="line">Ctrl+r 恢复上一步被撤销的操作</span><br></pre></td></tr></table></figure><p>快速移动光标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w    移动到下一个单词</span><br></pre></td></tr></table></figure><p>行编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v,hjkl,Shift+i</span><br></pre></td></tr></table></figure><p>vim折叠</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set foldmethod=syntax 或者是其它方法。设置好了之后可以用 zM 和 zR 来打开或关闭所有的折叠。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置行号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set number</span><br></pre></td></tr></table></figure><p>设置相对行号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set relativenumber</span><br></pre></td></tr></table></figure><p>查找时忽略大小写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set ic</span><br></pre></td></tr></table></figure><p>取消设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set no*****</span><br></pre></td></tr></table></figure><p>每行最后添加字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/$/需要追加的字符</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>编辑~&#x2F;.vimrc文件</p><h3 id="vim中文乱码"><a href="#vim中文乱码" class="headerlink" title="vim中文乱码"></a>vim中文乱码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set encoding=utf-8</span><br></pre></td></tr></table></figure><h3 id="vim记录上次编辑的位置（编辑-x2F-vimrc文件）"><a href="#vim记录上次编辑的位置（编辑-x2F-vimrc文件）" class="headerlink" title="vim记录上次编辑的位置（编辑~&#x2F;.vimrc文件）"></a>vim记录上次编辑的位置（编辑~&#x2F;.vimrc文件）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autocmd BufReadPost *</span><br><span class="line">      \  if line(&quot;&#x27;\&quot;&quot;) &gt; 0 &amp;&amp; line (&quot;&#x27;\&quot;&quot;) &lt;= line(&quot;$&quot;) </span><br><span class="line">      \      exe &quot;normal g&#x27;\&quot;&quot; </span><br><span class="line">      \  endif</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vim乱码处理&quot;&gt;&lt;a href=&quot;#Vim乱码处理&quot; class=&quot;headerlink&quot; title=&quot;Vim乱码处理&quot;&gt;&lt;/a&gt;Vim乱码处理&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;/etc/vim/vimrc&lt;/code&gt;文件末尾添加&lt;/p&gt;
&lt;p&gt;&lt;code&gt;se</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="https://jarod.vip/tags/Linux/"/>
    
    <category term="vim" scheme="https://jarod.vip/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>WAMP本地环境搭建笔记</title>
    <link href="https://jarod.vip/2022/01/06/wamp%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://jarod.vip/2022/01/06/wamp%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2022-01-05T16:02:36.000Z</published>
    <updated>2022-09-29T13:27:46.185Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开启虚拟主机"><a href="#开启虚拟主机" class="headerlink" title="开启虚拟主机"></a>开启虚拟主机</h3><p>1.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\httpd.conf</p><p>去掉httpd-vhosts.conf的注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Virtual hosts</span><br><span class="line">Include conf/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><p>把Directory修改成如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /&gt;</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>2.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\extra\httpd-vhosts.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot D:/00_cloud/server-php</span><br><span class="line">    ServerName server-php.com</span><br><span class="line">    &lt;Directory &quot;D:/00_cloud/server-php&quot;&gt;</span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.修改 C:\Windows\System32\drivers\etc\hosts</p><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 server-php.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;开启虚拟主机&quot;&gt;&lt;a href=&quot;#开启虚拟主机&quot; class=&quot;headerlink&quot; title=&quot;开启虚拟主机&quot;&gt;&lt;/a&gt;开启虚拟主机&lt;/h3&gt;&lt;p&gt;1.编辑文件 F:\wamp\bin\apache\apache2.4.9\conf\httpd.conf&lt;</summary>
      
    
    
    
    <category term="Win" scheme="https://jarod.vip/categories/Win/"/>
    
    
    <category term="Apache" scheme="https://jarod.vip/tags/Apache/"/>
    
    <category term="PHP" scheme="https://jarod.vip/tags/PHP/"/>
    
    <category term="WAMP" scheme="https://jarod.vip/tags/WAMP/"/>
    
  </entry>
  
  <entry>
    <title>Windows日常操作</title>
    <link href="https://jarod.vip/2022/01/06/windows%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/"/>
    <id>https://jarod.vip/2022/01/06/windows%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/</id>
    <published>2022-01-05T16:01:26.000Z</published>
    <updated>2022-09-29T13:27:46.183Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动时加载bat"><a href="#启动时加载bat" class="headerlink" title="启动时加载bat"></a>启动时加载bat</h2><p>运行： shell:startup -&gt; startup.vbs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.Run &quot;C:\auto_run\startup\start.bat /start&quot;,0</span><br></pre></td></tr></table></figure><h1 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h1><h2 id="windows-curl"><a href="#windows-curl" class="headerlink" title="windows curl"></a>windows curl</h2><p>下载地址：<a href="https://curl.haxx.se/windows/">https://curl.haxx.se/windows/</a></p><h2 id="计算文件Hash值："><a href="#计算文件Hash值：" class="headerlink" title="计算文件Hash值："></a>计算文件Hash值：</h2><p>在Windows中可以通过以下方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile yourfilename MD5</span><br><span class="line">certutil -hashfile yourfilename SHA1</span><br><span class="line">certutil -hashfile yourfilename SHA256</span><br></pre></td></tr></table></figure><p>而在Linux下，命令为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">md5sum yourfilename</span><br><span class="line">sha1sum yourfilename</span><br><span class="line">sha256sum yourfilename</span><br></pre></td></tr></table></figure><h2 id="windows命令行工具-nircmd"><a href="#windows命令行工具-nircmd" class="headerlink" title="windows命令行工具 nircmd"></a>windows命令行工具 nircmd</h2><p>下载地址：<a href="http://www.nirsoft.net/utils/nircmd.html">http://www.nirsoft.net/utils/nircmd.html</a></p><p>关闭监视器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nircmd.exe monitor off</span><br></pre></td></tr></table></figure><p>锁屏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nircmd.exe lockws</span><br></pre></td></tr></table></figure><p>截屏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nircmd.exe savescreenshotfull &quot;f:\tmp\shot.png&quot;</span><br></pre></td></tr></table></figure><p>设置鼠标在屏幕位置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nircmd.exe setcursor 100 50</span><br></pre></td></tr></table></figure><p>按鼠标键:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">① sendmouse right click 右键鼠标</span><br><span class="line">② sendmouse left click  左键鼠标</span><br><span class="line">③ sendmouse left dblclick 双击鼠标左键</span><br><span class="line">④ sendmouse left down  按下鼠标左键</span><br><span class="line">⑤ sendmouse left up  松开鼠标左键</span><br><span class="line">⑥ sendmouse middle click</span><br></pre></td></tr></table></figure><h2 id="工具集"><a href="#工具集" class="headerlink" title="工具集"></a>工具集</h2><p>视频下载工具 annie</p><p><a href="https://github.com/iawia002/annie">https://github.com/iawia002/annie</a></p><p>视频转码工具 FFmpeg</p><p><a href="https://www.ffmpeg.org/">https://www.ffmpeg.org/</a></p><p>比如mp4转mp3: <code>ffmpeg -i xx.mp4 xx.mp3</code></p><p>tcping</p><p><a href="https://elifulkerson.com/projects/index.php">https://elifulkerson.com/projects/index.php</a></p><p>nircmd,wake_on_lan,GUIPropView</p><p><a href="http://www.nirsoft.net/utils/index.html">http://www.nirsoft.net/utils/index.html</a></p><p>网络唤醒wol</p><p><a href="https://www.depicus.com/wake-on-lan/wake-on-lan-cmd">https://www.depicus.com/wake-on-lan/wake-on-lan-cmd</a></p><p>设置分辨率 QRes</p><p><a href="http://www.softpedia.com/progDownload/QRes-Download-618.html">http://www.softpedia.com/progDownload/QRes-Download-618.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QRes.exe /x:1920 /y:1080</span><br></pre></td></tr></table></figure><h2 id="windows开启关闭防火墙"><a href="#windows开启关闭防火墙" class="headerlink" title="windows开启关闭防火墙"></a>windows开启关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NetSh Advfirewall set allprofiles state off   #关闭防火墙</span><br><span class="line">NetSh Advfirewall set allprofiles state on    #开启防火墙</span><br><span class="line">Netsh Advfirewall show allprofiles            #查看防火墙状态</span><br></pre></td></tr></table></figure><h2 id="在-Windows-10-中启用可匿名访问的共享"><a href="#在-Windows-10-中启用可匿名访问的共享" class="headerlink" title="在 Windows 10 中启用可匿名访问的共享"></a>在 Windows 10 中启用可匿名访问的共享</h2><p>就是不用输入用户名和密码，直接通过网上邻居可以访问的共享。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、打开本地组策略编辑器（快捷键Win+R，打开运行，输入gpedit.msc，确定）；</span><br><span class="line">2、打开：“本地计算机策略-&gt;计算机配置-&gt;Windows设置-&gt;安全设置-&gt;本地策略-&gt;用户权限分配”；</span><br><span class="line">3、找到：“拒绝从网络访问这台计算机”，将列表中的“Guest”删除；</span><br><span class="line">4、打开：“本地计算机策略-&gt;计算机配置-&gt;Windows设置-&gt;安全设置-&gt;本地策略-&gt;安全选项”；</span><br><span class="line">5、找到：“网络访问：本地帐户的共享和安全模型”，改为：“仅来宾 - 对本地用户进行身份验证，其身份为来宾”；</span><br><span class="line">6、找到：“网络访问：将 Everyone 权限应用于匿名用户”，改为：“已启用”；</span><br><span class="line">7、找到：“账户：来宾账户状态”，改为：“已启用”；</span><br></pre></td></tr></table></figure><p>注意：如果访问共享文件夹时出现“你不能访问此共享文件夹，因为你组织的安全策略阻止未经身份验证的来宾访问，这些策略可帮助保护你的电脑免受网络上不安全设备或者恶意设备的威胁” 需要如下操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、打开本地组策略编辑器（快捷键Win+R，打开运行，输入gpedit.msc，确定）；</span><br><span class="line">2、在“计算机配置”中找到“管理模板”-&gt;“网络”-&gt;“Lanman工作站”；</span><br><span class="line">3、在本地策略编辑器的右侧双击“启用不安全的来宾登录”。选择“已启用”，并点击确定，解决问题。</span><br></pre></td></tr></table></figure><h2 id="Win10-开机自动登录"><a href="#Win10-开机自动登录" class="headerlink" title="Win10 开机自动登录"></a>Win10 开机自动登录</h2><p>方法一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">control userpasswords2</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netplwiz</span><br></pre></td></tr></table></figure><p>方法三：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 netplwiz.dll,UsersRunDll</span><br></pre></td></tr></table></figure><p>方法四：</p><p>创建autologin.reg文件，双击导入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Win10-右键菜单Intel图形属性删除"><a href="#Win10-右键菜单Intel图形属性删除" class="headerlink" title="Win10 右键菜单Intel图形属性删除"></a>Win10 右键菜单Intel图形属性删除</h2><p>以<strong>管理员权限</strong>打开cmd，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsvr32 /u igfxDTCM.dll</span><br></pre></td></tr></table></figure><p>恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsvr32 igfxDTCM.dll</span><br></pre></td></tr></table></figure><h2 id="windows-删除进程"><a href="#windows-删除进程" class="headerlink" title="windows 删除进程"></a>windows 删除进程</h2><p>查看指定端口的连接信息:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano  findstr &quot;8080&quot;</span><br></pre></td></tr></table></figure><p>查看进程列表:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist  findstr &quot;java&quot;</span><br></pre></td></tr></table></figure><p>通过上面的方式可以查看占用端口号的进程ID:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill -PID 进程号 -F</span><br></pre></td></tr></table></figure><h1 id="win10"><a href="#win10" class="headerlink" title="win10"></a>win10</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>微软官方下载地址：<a href="https://www.microsoft.com/zh-cn/software-download/windows10">https://www.microsoft.com/zh-cn/software-download/windows10</a></p><h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>序列号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Home: TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</span><br><span class="line">Home N: 3KHY7-WNT83-DGQKR-F7HPR-844BM</span><br><span class="line">Home Single Language: 7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH</span><br><span class="line">Home Country Specific: PVMJN-6DFY6-9CCP6-7BKTT-D3WVR</span><br><span class="line">Professional: W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">Professional N: MH37W-N47XK-V7XM9-C7227-GCQG9</span><br><span class="line">Education: NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</span><br><span class="line">Education N: 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</span><br><span class="line">Enterprise: NPPR9-FWDCX-D2C8J-H872K-2YT43</span><br><span class="line">Enterprise N: DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4</span><br></pre></td></tr></table></figure><p>激活步骤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">slmgr /skms kms8.msguides.com</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure><h1 id="win11"><a href="#win11" class="headerlink" title="win11"></a>win11</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>微软官方下载地址：<a href="https://www.microsoft.com/zh-cn/software-download/windows11">https://www.microsoft.com/zh-cn/software-download/windows11</a></p><h2 id="绕过-TPM-2-0-检测"><a href="#绕过-TPM-2-0-检测" class="headerlink" title="绕过 TPM 2.0 检测"></a>绕过 TPM 2.0 检测</h2><p>Win11 会提示“该电脑无法运行 Win11”解决办法：</p><h3 id="1、注册表大法"><a href="#1、注册表大法" class="headerlink" title="1、注册表大法"></a>1、注册表大法</h3><p>在安装界面按 Shift+F10，打开命令行界面，输入 regedit 打开注册表，然后定位到：</p><blockquote><p><em>HKEY_LOCAL_MACHINE\SYSTEM\Setup</em></p></blockquote><p>创建一个名为“LabConfig”的项，接着在“LabConfig”下创建两个 DWORD 值：</p><ul><li>键为“BypassTPMCheck”，值为“00000001”</li><li>键为“BypassSecureBootCheck”，值为“00000001”</li><li>键为“BypassRAMCheck”，值为“00000001”</li></ul><p>保存退出后，上图的提示就消失了，就可以正常安装 Win11。</p><h3 id="2、修改-ISO-镜像"><a href="#2、修改-ISO-镜像" class="headerlink" title="2、修改 ISO 镜像"></a>2、修改 ISO 镜像</h3><p>如果想通过直接从 Win11 ISO 镜像运行 setup.exe 程序来升级系统，而非全新安装，还有另一种简单的解决方法。</p><p>需要找到 Win10 ISO 的 appraiserres.dll 文件，替换 Win11 ISO 的同名文件。完成后，需要使用第三方工具（如 Rufus 或 AnyBurn）重新创建 ISO 镜像，然后再次运行安装文件。</p><h2 id="激活-1"><a href="#激活-1" class="headerlink" title="激活"></a>激活</h2><p>win11激活工具</p><p><a href="https://github.com/zbezj/HEU_KMS_Activator">https://github.com/zbezj/HEU_KMS_Activator</a></p><h1 id="脚本重连蓝牙耳机"><a href="#脚本重连蓝牙耳机" class="headerlink" title="脚本重连蓝牙耳机"></a>脚本重连蓝牙耳机</h1><p>首先去该网站下载：<a href="http://bluetoothinstaller.com/bluetooth-command-line-tools/">蓝牙命令行管理工具</a></p><p>然后打开命令行，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btdiscovery -s  # 扫描蓝牙设备，需要等待一会</span><br></pre></td></tr></table></figure><p>获取到设备的 DEVICE_ADDRESS 和 SERVICE_UUID</p><p>DEVICE_ADDRESS 是蓝牙设备的mac地址</p><p>SERVICE_UUID 是设备的服务ID，比如耳麦是1108，免提网关111E</p><h2 id="自动重新连接bat脚本"><a href="#自动重新连接bat脚本" class="headerlink" title="自动重新连接bat脚本"></a>自动重新连接bat脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">rem   The following line is needed only if you haven&#x27;t added Bluetooth Command Line Tools to system PATH</span><br><span class="line">REM set PATH=C:\Program Files (x86)\Bluetooth Command Line Tools\bin;%PATH%</span><br><span class="line"></span><br><span class="line">rem   Change the following 2 lines to match your device</span><br><span class="line">set DEVICE_ADDRESS=1C:52:16:58:8F:95</span><br><span class="line">set SERVICE_UUID=1108</span><br><span class="line"></span><br><span class="line">rem   If your device requires PIN code other than &#x27;0000&#x27;, uncomment and change the following line</span><br><span class="line">set PIN=0000</span><br><span class="line"></span><br><span class="line">rem   Remove the device. Ignoring possible error here </span><br><span class="line">btpair -u -b&quot;%DEVICE_ADDRESS%&quot;</span><br><span class="line"></span><br><span class="line">rem   Pair the device</span><br><span class="line">btpair -p%PIN% -b&quot;%DEVICE_ADDRESS%&quot;</span><br><span class="line">if errorlevel 1 goto error</span><br><span class="line"></span><br><span class="line">rem   Enable the service</span><br><span class="line">REM btcom -c -b&quot;%DEVICE_ADDRESS%&quot; -s%SERVICE_UUID%</span><br><span class="line">REM if errorlevel 1 goto error</span><br><span class="line"></span><br><span class="line">goto success</span><br><span class="line"></span><br><span class="line">rem   Allow user to read error message before window is closed</span><br><span class="line">:error</span><br><span class="line">pause</span><br><span class="line">exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="查看AC电源状态"><a href="#查看AC电源状态" class="headerlink" title="查看AC电源状态"></a>查看AC电源状态</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WMIC Path Win32_Battery Get BatteryStatus</span><br></pre></td></tr></table></figure><h1 id="操作系统中查看硬件制造商和BIOS版本"><a href="#操作系统中查看硬件制造商和BIOS版本" class="headerlink" title="操作系统中查看硬件制造商和BIOS版本"></a>操作系统中查看硬件制造商和BIOS版本</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dxdiag</span><br></pre></td></tr></table></figure><p>或者cmd里输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic bios get biosversion</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic bios get SMBIOSBIOSVersion</span><br></pre></td></tr></table></figure><h1 id="查看磁盘硬件名称"><a href="#查看磁盘硬件名称" class="headerlink" title="查看磁盘硬件名称"></a>查看磁盘硬件名称</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic diskdrive get caption</span><br></pre></td></tr></table></figure><h1 id="查看内存"><a href="#查看内存" class="headerlink" title="查看内存"></a>查看内存</h1><h3 id="查看内存信息"><a href="#查看内存信息" class="headerlink" title="查看内存信息"></a>查看内存信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic memorychip</span><br></pre></td></tr></table></figure><h3 id="查看内存硬件厂商"><a href="#查看内存硬件厂商" class="headerlink" title="查看内存硬件厂商"></a>查看内存硬件厂商</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic memorychip get Manufacturer</span><br></pre></td></tr></table></figure><h1 id="利用Windows内置工具测试硬盘速度"><a href="#利用Windows内置工具测试硬盘速度" class="headerlink" title="利用Windows内置工具测试硬盘速度"></a>利用Windows内置工具测试硬盘速度</h1><p>测试默认磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winsat disk</span><br></pre></td></tr></table></figure><p>指定磁盘进行测速</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winsat disk -drive d </span><br></pre></td></tr></table></figure><p>注：请使用管理员权限打开cmd，否则在win10下面最终测试结果会一闪而过</p><h1 id="windows下查看wifi信息"><a href="#windows下查看wifi信息" class="headerlink" title="windows下查看wifi信息"></a>windows下查看wifi信息</h1><p>进入cmd输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh wlan show interface</span><br></pre></td></tr></table></figure><h1 id="Win7下格式化成-FAT32"><a href="#Win7下格式化成-FAT32" class="headerlink" title="Win7下格式化成 FAT32"></a>Win7下格式化成 FAT32</h1><p>右键管理员身份打开cmd</p><p>如果你格式化的是E盘</p><p>输入format E: &#x2F;fs:fat32</p><p>回车后会提示输入卷标，就是指该分区名称</p><h1 id="win8远程连接win10"><a href="#win8远程连接win10" class="headerlink" title="win8远程连接win10"></a>win8远程连接win10</h1><p>1.账户前面需跟计算机名,如:计算机名\用户名.</p><p>2.win10上，运行gpedit.msc-计算机配置-Windows设置-安全设置-本地策略-安全选项-网络访问：本地账户的共享安全模型</p><p>设置成：经典-对本地用户进行身份验证,不改变其本来身份</p><h1 id="指定用户访问共享samba"><a href="#指定用户访问共享samba" class="headerlink" title="指定用户访问共享samba"></a>指定用户访问共享samba</h1><p>清除用户记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.1.1 /del</span><br></pre></td></tr></table></figure><p>指定用户登录（需要输入密码）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.1.1 /user:malu</span><br></pre></td></tr></table></figure><p>携带密码登录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.1.1 &quot;password&quot; /user:malu /persistent:yes</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net use</span><br></pre></td></tr></table></figure><p>自动登录脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">net use \\192.168.0.1 /delete</span><br><span class="line">net use \\192.168.0.1 &quot;password&quot; /user:malu /persistent:yes</span><br><span class="line">explorer \\192.168.0.1\</span><br></pre></td></tr></table></figure><h1 id="指定DNS"><a href="#指定DNS" class="headerlink" title="指定DNS"></a>指定DNS</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">netsh interface ip set dns name=&quot;本地连接&quot; source=dhcp</span><br><span class="line">netsh interface ip set dns name=&quot;以太网&quot; source=dhcp</span><br><span class="line">netsh interface ip add dns &quot;以太网&quot; 192.168.11.200</span><br><span class="line">netsh interface ip add dns &quot;本地连接&quot; 192.168.11.200</span><br><span class="line">netsh interface ip add dns &quot;以太网&quot; 61.177.7.1 index=2</span><br><span class="line">netsh interface ip add dns &quot;本地连接&quot; 61.177.7.1 index=2</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;启动时加载bat&quot;&gt;&lt;a href=&quot;#启动时加载bat&quot; class=&quot;headerlink&quot; title=&quot;启动时加载bat&quot;&gt;&lt;/a&gt;启动时加载bat&lt;/h2&gt;&lt;p&gt;运行： shell:startup -&amp;gt; startup.vbs&lt;/p&gt;
&lt;figur</summary>
      
    
    
    
    <category term="Win" scheme="https://jarod.vip/categories/Win/"/>
    
    
    <category term="Windows日常操作" scheme="https://jarod.vip/tags/Windows%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs</title>
    <link href="https://jarod.vip/2022/01/05/nodejs/"/>
    <id>https://jarod.vip/2022/01/05/nodejs/</id>
    <published>2022-01-05T15:53:33.000Z</published>
    <updated>2022-09-29T13:27:46.182Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录nvm、node、npm、yarn安装过程</p><h1 id="Windows下安装"><a href="#Windows下安装" class="headerlink" title="Windows下安装"></a>Windows下安装</h1><p>nvm-windowns下载 <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><h2 id="切换nvm安装源："><a href="#切换nvm安装源：" class="headerlink" title="切换nvm安装源："></a>切换nvm安装源：</h2><p>在 nvm 的安装路径下，找到 settings.txt，在后面加上这两行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><p>切换npm安装源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="Linux下安装"><a href="#Linux下安装" class="headerlink" title="Linux下安装"></a>Linux下安装</h1><p>官方地址：<a href="https://github.com/creationix/nvm">https://github.com/creationix/nvm</a></p><p>Linux下推荐使用nvm来安装nodejs</p><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh  bash</span><br></pre></td></tr></table></figure><p>脚本会自动把以下执行环境写入.bashrc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class="line">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 10.8.0</span><br></pre></td></tr></table></figure><h3 id="国内使用淘宝node镜像，加速nodejs安装过程："><a href="#国内使用淘宝node镜像，加速nodejs安装过程：" class="headerlink" title="国内使用淘宝node镜像，加速nodejs安装过程："></a>国内使用淘宝node镜像，加速nodejs安装过程：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/</span><br><span class="line">nvm install 10.11.0</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ nvm install 10.11.0</span><br></pre></td></tr></table></figure><h3 id="Linux使用淘宝NPM镜像："><a href="#Linux使用淘宝NPM镜像：" class="headerlink" title="Linux使用淘宝NPM镜像："></a>Linux使用淘宝NPM镜像：</h3><p>编辑 ~&#x2F;.npmrc，添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registry=https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><p>若不想将本源设置为默认源，只想使用本源安装某个软件包，可在安装包时采用以下用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://npm.taobao.org/mirrors/npm/ install &lt;packagename&gt;</span><br></pre></td></tr></table></figure><h1 id="windows下安装"><a href="#windows下安装" class="headerlink" title="windows下安装"></a>windows下安装</h1><p>直接去github下载msi安装包： <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><p>windows使用淘宝node镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm node_mirror https://npm.taobao.org/mirrors/node/</span><br></pre></td></tr></table></figure><p>windows使用淘宝npm镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm npm_mirror https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><h1 id="CNPM"><a href="#CNPM" class="headerlink" title="CNPM"></a>CNPM</h1><p>安装方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="YARN"><a href="#YARN" class="headerlink" title="YARN"></a>YARN</h1><p>下载地址：<a href="https://github.com/yarnpkg/yarn/releases">https://github.com/yarnpkg/yarn/releases</a></p><p>使用文档：<a href="https://yarnpkg.com/zh-Hans/docs">https://yarnpkg.com/zh-Hans/docs</a></p><h3 id="升级自身yarn"><a href="#升级自身yarn" class="headerlink" title="升级自身yarn"></a>升级自身yarn</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install yarn -g</span><br></pre></td></tr></table></figure><p>查看yarn版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn -v</span><br></pre></td></tr></table></figure><p>Yarn 设置淘宝镜像</p><p>1.查询当前配置的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn config get registry</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.设置成淘宝镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn config set registry http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><p>3.显示当前安装的全局yarn依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global list</span><br></pre></td></tr></table></figure><h3 id="npm与yarn-CLI-命令比较"><a href="#npm与yarn-CLI-命令比较" class="headerlink" title="npm与yarn CLI 命令比较"></a>npm与yarn CLI 命令比较</h3><p>npm (v5)</p><p>Yarn</p><p>npm install</p><p>yarn install</p><p>(不适用)</p><p>yarn install –flat</p><p>(不适用)</p><p>yarn install –har</p><p>npm install –no-package-lock</p><p>yarn install –no-lockfile</p><p>(不适用)</p><p>yarn install –pure-lockfile</p><p>npm install [package]</p><p>yarn add [package]</p><p>npm install [package] –save-dev</p><p>yarn add [package] –dev</p><p>(不适用)</p><p>yarn add [package] –peer</p><p>npm install [package] –save-optional</p><p>yarn add [package] –optional</p><p>npm install [package] –save-exact</p><p>yarn add [package] –exact</p><p>(不适用)</p><p>yarn add [package] –tilde</p><p>npm install [package] –global</p><p>yarn global add [package]</p><p>npm update –global</p><p>yarn global upgrade</p><p>npm rebuild</p><p>yarn install –force</p><p>npm uninstall [package]</p><p>yarn remove [package]</p><p>npm cache clean</p><p>yarn cache clean [package]</p><p>rm -rf node_modules &amp;&amp; npm install</p><p>yarn upgrade</p><h3 id="异常处理-使用yarn升级vue-cli后显示-‘vue’-不是内部或外部命令，也不是可运行的程序"><a href="#异常处理-使用yarn升级vue-cli后显示-‘vue’-不是内部或外部命令，也不是可运行的程序" class="headerlink" title="异常处理: 使用yarn升级vue cli后显示 ‘vue’ 不是内部或外部命令，也不是可运行的程序"></a>异常处理: 使用yarn升级vue cli后显示 ‘vue’ 不是内部或外部命令，也不是可运行的程序</h3><p>解决办法：把yarn的包执行目录添加到系统环境变量里。</p><p>处理方式：</p><p>1.执行yarn global dir 显示出yarn安装路径</p><p>2.定位到Yarn\bin目录，把该路径复制到系统环境变量Path里</p><h1 id="nvm使用方法"><a href="#nvm使用方法" class="headerlink" title="nvm使用方法"></a>nvm使用方法</h1><p>列出全部可以安装的版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><p>（windows下为）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure><p>安装指定版本nodejs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 9.3.0</span><br></pre></td></tr></table></figure><p>切换指定版本，切换效果是全局的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v8.0.0</span><br></pre></td></tr></table></figure><p>查看当前使用的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm current</span><br></pre></td></tr></table></figure><p>查看本地安装版本，这个命令也能看到当前使用的是哪个版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls --depth 0</span><br></pre></td></tr></table></figure><p>清空模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules/ &amp;&amp; npm cache clean &amp;&amp; npm prune</span><br></pre></td></tr></table></figure><h1 id="npm的常用命令"><a href="#npm的常用命令" class="headerlink" title="npm的常用命令:"></a>npm的常用命令:</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">npm ci                #使用安装package.lock.json安装，锁定依赖版本</span><br><span class="line"></span><br><span class="line">npm -v                #显示版本，检查npm 是否正确安装。</span><br><span class="line"> </span><br><span class="line">npm install express   #安装express模块</span><br><span class="line"> </span><br><span class="line">npm install -g express  #全局安装express模块</span><br><span class="line"> </span><br><span class="line">npm list              #列出已安装模块</span><br><span class="line"> </span><br><span class="line">npm show express      #显示模块详情</span><br><span class="line"> </span><br><span class="line">npm update            #升级当前目录下的项目的所有模块</span><br><span class="line"> </span><br><span class="line">npm update express    #升级当前目录下的项目的指定模块</span><br><span class="line"> </span><br><span class="line">npm update -g express  #升级全局安装的express模块</span><br><span class="line"> </span><br><span class="line">npm uninstall express  #删除指定的模块</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="生成package-json文件"><a href="#生成package-json文件" class="headerlink" title="生成package.json文件"></a>生成package.json文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node init</span><br></pre></td></tr></table></figure><h1 id="其他安装方式-old"><a href="#其他安装方式-old" class="headerlink" title="其他安装方式 old"></a>其他安装方式 old</h1><p>快速安装过程:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y nodejs npm</span><br><span class="line">npm config set registry http://registry.npm.taobao.org  #使用淘宝源</span><br><span class="line">npm install -g n     #安装n模块</span><br><span class="line">n stable#升级到nodejs最新稳定版</span><br></pre></td></tr></table></figure><p>n后面也可以跟随版本号比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n v0.10.26</span><br><span class="line">n 0.10.26</span><br></pre></td></tr></table></figure><p>编译安装：</p><p>nodejs下载地址：<a href="https://nodejs.org/dist/">https://nodejs.org/dist/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/download/rc/v4.0.0-rc.1/node-v4.0.0-rc.1.tar.gz</span><br><span class="line">tar -zxvf node-v4.0.0-rc.1.tar.gz</span><br><span class="line">cd node-v4.0.0-rc.1</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><p>源码安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp &amp;&amp; \</span><br><span class="line">wget http://nodejs.org/dist/node-latest.tar.gz &amp;&amp; \</span><br><span class="line">tar xvzf node-latest.tar.gz &amp;&amp; \</span><br><span class="line">rm -f node-latest.tar.gz &amp;&amp; \</span><br><span class="line">cd node-v* &amp;&amp; \</span><br><span class="line">./configure &amp;&amp; \</span><br><span class="line">CXX=&quot;g++ -Wno-unused-local-typedefs&quot; make &amp;&amp; \</span><br><span class="line">CXX=&quot;g++ -Wno-unused-local-typedefs&quot; make install &amp;&amp; \</span><br><span class="line">cd /tmp &amp;&amp; \</span><br><span class="line">rm -rf /tmp/node-v* &amp;&amp; \</span><br><span class="line">npm install -g npm &amp;&amp; \</span><br><span class="line">printf &#x27;\n# Node.js\nexport PATH=&quot;node_modules/.bin:$PATH&quot;&#x27; &gt;&gt; /root/.bashrc</span><br></pre></td></tr></table></figure><h1 id="ERROR"><a href="#ERROR" class="headerlink" title="ERROR"></a>ERROR</h1><h3 id="MSBUILD-error-MSB3428-未能加载-Visual-C-组件“VCBuild-exe”。"><a href="#MSBUILD-error-MSB3428-未能加载-Visual-C-组件“VCBuild-exe”。" class="headerlink" title="MSBUILD : error MSB3428: 未能加载 Visual C++ 组件“VCBuild.exe”。"></a>MSBUILD : error MSB3428: 未能加载 Visual C++ 组件“VCBuild.exe”。</h3><p>解决方法：npm install –global –production windows-build-tools （全局安装windows构建工具）</p><h3 id="Module-build-failed-Error-ENOENT-no-such-file-or-directory-scandir-node-sass"><a href="#Module-build-failed-Error-ENOENT-no-such-file-or-directory-scandir-node-sass" class="headerlink" title="Module build failed: Error: ENOENT: no such file or directory, scandir node-sass"></a>Module build failed: Error: ENOENT: no such file or directory, scandir node-sass</h3><p>解决办法：npm rebuild node-sass</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文记录nvm、node、npm、yarn安装过程&lt;/p&gt;
&lt;h1 id=&quot;Windows下安装&quot;&gt;&lt;a href=&quot;#Windows下安装&quot; class=&quot;headerlink&quot; title=&quot;Windows下安装&quot;&gt;&lt;/a&gt;Windows下安装&lt;/h1&gt;&lt;p&gt;nvm-w</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Node" scheme="https://jarod.vip/tags/Node/"/>
    
    <category term="Nodejs" scheme="https://jarod.vip/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>wol网络唤醒</title>
    <link href="https://jarod.vip/2022/01/05/wol%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92/"/>
    <id>https://jarod.vip/2022/01/05/wol%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92/</id>
    <published>2022-01-05T15:52:03.000Z</published>
    <updated>2022-09-29T13:27:46.181Z</updated>
    
    <content type="html"><![CDATA[<p>首先网络唤醒需要硬件支持，目前大部分主流的板载网卡都支持，只需在bios里开启即可，笔记本中thinkpad全系列都支持，部分品牌的部分型号是不支持的，比如我有2台acer笔记本不支持。(很多时候wol是为了节电考虑，但是电源插座是必须通电的，笔记本也是)</p><h1 id="路由器下安装"><a href="#路由器下安装" class="headerlink" title="路由器下安装"></a>路由器下安装</h1><p>路由器中有相关插件可以直接进行唤醒，比如OpenWRT提供了wol和etherwake两个包来实现WOL功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install wol etherwake</span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/wol 00:1D:5C:1F:5D:16</span><br><span class="line">/usr/bin/etherwake 00:1D:5C:1F:5D:16</span><br></pre></td></tr></table></figure><h1 id="ubuntu下安装："><a href="#ubuntu下安装：" class="headerlink" title="ubuntu下安装："></a>ubuntu下安装：</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install wakeonlan</span><br></pre></td></tr></table></figure><p>使用方法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wakeonlan 00:1D:5C:1F:5D:16</span><br></pre></td></tr></table></figure><h1 id="windows下安装"><a href="#windows下安装" class="headerlink" title="windows下安装:"></a>windows下安装:</h1><p>下载地址：<a href="https://www.depicus.com/downloads/wolcmd.zip">https://www.depicus.com/downloads/wolcmd.zip</a></p><p>使用方法：</p><p>打开cmd，CD到下载wolcmd的文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wolcmd [mac address] [ip address] [subnet mask] [port number]</span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WolCmd.exe 1016932061F0 192.168.0.255 255.255.255.0 80</span><br></pre></td></tr></table></figure><h1 id="公网唤醒内网主机"><a href="#公网唤醒内网主机" class="headerlink" title="公网唤醒内网主机"></a>公网唤醒内网主机</h1><p>外网进行唤醒，前提是路由器上得设置端口映射，和mac绑定。</p><p>原理是这样的：</p><p>1.魔术包数据发送到外网地址的映射端口上。</p><p>2.由于做了映射，路由器会找到对应的IP地址。</p><p>3.IP与对应的mac地址绑定了，所以路由器自然得将数据包发到对应mac地址上。</p><p>4.此时数据包已经发到内网待唤醒主机上了，网卡判断数据帧符合唤醒内容，就把机器启动。</p><p>公网唤醒工具：<a href="http://ip.malu.me/wol/">http://ip.malu.me/wol/</a></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>断电后再通电自动唤醒：在BIOS中电源设置，Restore on AC设置为Last Stste。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先网络唤醒需要硬件支持，目前大部分主流的板载网卡都支持，只需在bios里开启即可，笔记本中thinkpad全系列都支持，部分品牌的部分型号是不支持的，比如我有2台acer笔记本不支持。(很多时候wol是为了节电考虑，但是电源插座是必须通电的，笔记本也是)&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="wol" scheme="https://jarod.vip/tags/wol/"/>
    
    <category term="网络唤醒" scheme="https://jarod.vip/tags/%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92/"/>
    
  </entry>
  
  <entry>
    <title>MySQL线上与本地实时同步</title>
    <link href="https://jarod.vip/2022/01/05/mysql%E7%BA%BF%E4%B8%8A%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/"/>
    <id>https://jarod.vip/2022/01/05/mysql%E7%BA%BF%E4%B8%8A%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/</id>
    <published>2022-01-05T15:51:19.000Z</published>
    <updated>2022-09-29T13:27:46.179Z</updated>
    
    <content type="html"><![CDATA[<h3 id="运行环境："><a href="#运行环境：" class="headerlink" title="运行环境："></a>运行环境：</h3><p>线上：RDS（内网）+ECS</p><p>本地：xampp</p><p>由于本地只能访问ECS，需要在ECS上架设mysql代理：</p><p>参考这篇笔记：<a href="http://git.malu.me/MySQL-Proxy/">http://git.malu.me/MySQL-Proxy/</a></p><h1 id="mysql线上与本地实现主从同步"><a href="#mysql线上与本地实现主从同步" class="headerlink" title="mysql线上与本地实现主从同步"></a>mysql线上与本地实现主从同步</h1><h3 id="ECS配置（作为主服务器master）"><a href="#ECS配置（作为主服务器master）" class="headerlink" title="ECS配置（作为主服务器master）:"></a>ECS配置（作为主服务器master）:</h3><p>修改配置文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#vim /etc/my.cnf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启mysql：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure><p>在主服务器上建立帐户mysync并授权给slave主机:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -h localhost</span><br><span class="line"></span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* to &#x27;mysync&#x27;@&#x27;%&#x27; identified by &#x27;passwd&#x27;;</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status;    #查看master的状态</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"> File              Position  Binlog_Do_DB  Binlog_Ignore_DB </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"> mysql-bin.000002       532                                 </span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">注：执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值Position变化</span><br><span class="line"></span><br><span class="line">mysql&gt; show master logs;    #查看master二进制日志位置</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like &#x27;server_id&#x27;;   #查看server_id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="本地xampp配置（作为从服务器slave）："><a href="#本地xampp配置（作为从服务器slave）：" class="headerlink" title="本地xampp配置（作为从服务器slave）："></a>本地xampp配置（作为从服务器slave）：</h3><p>修改配置文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X:\Xampp\mysql\bin\my.ini   #xampp默认配置文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置Slave：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to  master_host=&#x27;mysql.malu.me&#x27;,master_port=3306,master_user=&#x27;mysync&#x27;,master_password=&#x27;passwd&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=532;</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;          #启动从服务器复制功能</span><br><span class="line"></span><br><span class="line">注：master_log_pos即为master主机状态里的Position</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G   #检查slave的状态</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来往RDS写入数据的时候会自动同步到本地mysql</p><h1 id="mysql线上与本地实现主主同步"><a href="#mysql线上与本地实现主主同步" class="headerlink" title="mysql线上与本地实现主主同步"></a>mysql线上与本地实现主主同步</h1><p>双主架构需要mysql双方能互相通讯，但是本地mysql在内网，所以必须先让ECS穿透到内网:</p><p>内网穿透参考这篇笔记：<a href="http://git.malu.me/%E4%BA%8C%E7%BA%A7proxy%E9%83%A8%E7%BD%B2/">http://git.malu.me/二级proxy部署/</a></p><h3 id="ECS-（作为master-A）"><a href="#ECS-（作为master-A）" class="headerlink" title="ECS （作为master-A）:"></a>ECS （作为master-A）:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin                           #开启二进制日志功能</span><br><span class="line">server-id=1                                 #注意server-id的唯一性</span><br><span class="line">binlog-ignore-db = mysql,information_schema #忽略写入binlog日志的库</span><br><span class="line">relay-log=/app/mysql/relaylogs/relay-bin    #指定中继日志路径</span><br><span class="line">log_slave_updates=1                         #开启从库更新操作写入二进制日志功能*</span><br><span class="line">auto_increment_increment=2                  #双主复制中自增长字段的步长*</span><br><span class="line">auto_increment_offset=1                     #双主复制中自增长字段的起始值，主为1 副为2*</span><br><span class="line">sync_binlog = 1                             #可保证事务日志及时写入磁盘文件</span><br><span class="line">binlog-do-db = TestXXX                      #指定binlog日志记录哪个db</span><br><span class="line">slave-skip-errors                           #定义复制过程中从服务器可以自动跳过错误</span><br></pre></td></tr></table></figure><h3 id="本地xampp（作为master-B）："><a href="#本地xampp（作为master-B）：" class="headerlink" title="本地xampp（作为master-B）："></a>本地xampp（作为master-B）：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin                           #开启二进制日志功能</span><br><span class="line">server-id=2                                 #注意server-id的唯一性</span><br><span class="line">binlog-ignore-db = mysql,information_schema #忽略写入binlog日志的库</span><br><span class="line">relay-log=/app/mysql/relaylogs/relay-bin    #指定中继日志路径</span><br><span class="line">log_slave_updates=1                         #开启从库更新操作写入二进制日志功能*</span><br><span class="line">auto_increment_increment=2                  #双主复制中自增长字段的步长*</span><br><span class="line">auto_increment_offset=2                     #双主复制中自增长字段的起始值，主为1 副为2*</span><br><span class="line">sync_binlog = 1                             #可保证事务日志及时写入磁盘文件</span><br><span class="line">binlog-do-db = TestXXX                      #指定binlog日志记录哪个db</span><br><span class="line">slave-skip-errors                           #定义复制过程中从服务器可以自动跳过错误</span><br></pre></td></tr></table></figure><h3 id="ECS执行："><a href="#ECS执行：" class="headerlink" title="ECS执行："></a>ECS执行：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* to &#x27;mysync&#x27;@&#x27;%&#x27; identified by &#x27;passwd&#x27;;</span><br><span class="line">mysql&gt; flush  privileges;</span><br><span class="line">mysql&gt; change master to  master_host=&#x27;127.0.0.1&#x27;,master_port=3307,master_user=&#x27;mysync&#x27;,master_password=&#x27;passwd&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=532;</span><br><span class="line"></span><br><span class="line">注：3307为隧道入口</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="本地xampp执行："><a href="#本地xampp执行：" class="headerlink" title="本地xampp执行："></a>本地xampp执行：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* to &#x27;mysync&#x27;@&#x27;%&#x27; identified by &#x27;passwd&#x27;;</span><br><span class="line">mysql&gt; flush  privileges;</span><br><span class="line">mysql&gt; change master to  master_host=&#x27;mysql.malu.me&#x27;,master_port=3306,master_user=&#x27;mysync&#x27;,master_password=&#x27;passwd&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=532;</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;          #启动master-B复制功能</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来写入数据试试吧！</p><p>附录：</p><p>mysql主从自动切换脚本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">cat &lt;&lt; README</span><br><span class="line">#####################################################################################################</span><br><span class="line">#Step 1: point the slave IP                                                                         #</span><br><span class="line">#Step 2: check the master and slave information whether good for change                             #</span><br><span class="line">#Step 3: stop old slave,then get new master binlog name and postation,then execute change master to #</span><br><span class="line">#Step 4: start slave,and show whether change successed.                                             #</span><br><span class="line">#####################################################################################################</span><br><span class="line">README</span><br><span class="line">User=root</span><br><span class="line">PW=123456</span><br><span class="line">read -p &quot;-- Please input the slave IP:&quot; Slave</span><br><span class="line">Master=$(mysql -u$&#123;User&#125; -h$&#123;Slave&#125; -p$&#123;PW&#125; -e &quot;show slave status \G;&quot;awk &#x27;/Master_Host/&#123;print $2&#125;&#x27;)</span><br><span class="line"> if [ -n &quot;$&#123;Master&#125;&quot; ]</span><br><span class="line"> then</span><br><span class="line">echo -e &quot;--Master IP:$&#123;Master&#125;,Slave IP:$&#123;Slave&#125;&quot;</span><br><span class="line">M=$(mysql -u$&#123;User&#125; -h$&#123;Master&#125; -p$&#123;PW&#125; -e &quot;show master status;&quot;awk &#x27;NR==2&#123;print $2&#125;&#x27;)</span><br><span class="line">S=$(mysql -u$&#123;User&#125; -h$&#123;Slave&#125; -p$&#123;PW&#125; -e &quot;show slave status \G;&quot;awk &#x27;/Read_Master_Log_Pos/&#123;print $2&#125;&#x27;)</span><br><span class="line">echo -e &quot;-- master pos:$&#123;M&#125;;slave pos is:$&#123;S&#125;&quot;</span><br><span class="line"> else</span><br><span class="line">echo &quot;-- Slave IP input wrong,please input again ! &quot;</span><br><span class="line">exit 1</span><br><span class="line"> fi</span><br><span class="line">       if [ &quot;$&#123;M&#125;&quot; -eq &quot;$&#123;S&#125;&quot; ]</span><br><span class="line">       then</span><br><span class="line">            read -p &quot;-- Master-Slave is accordance,input Yes to start changing:&quot; var</span><br><span class="line">            case &quot;$var&quot; in</span><br><span class="line">                [Yy]es)</span><br><span class="line">                    mysql -u$&#123;User&#125; -h$&#123;Slave&#125; -p$&#123;PW&#125; -e &quot;stop slave;reset slave;change master to master_host=&#x27;&#x27;;&quot;</span><br><span class="line">                    Pos=$(mysql -u$&#123;User&#125; -h$&#123;Slave&#125; -p$&#123;PW&#125; -e &quot;show master status;&quot;awk &#x27;NR==2&#123;print $2&#125;&#x27;)</span><br><span class="line">                    File=$(mysql -u$&#123;User&#125; -h$&#123;Slave&#125; -p$&#123;PW&#125; -e &quot;show master status;&quot;awk &#x27;NR==2&#123;print $1&#125;&#x27;)</span><br><span class="line">                    mysql -u$&#123;User&#125; -h$&#123;Master&#125; -p$&#123;PW&#125; -e &quot;stop slave;</span><br><span class="line">                    change master to master_user=&#x27;ideal&#x27;,master_host=&#x27;$&#123;Slave&#125;&#x27;,master_password=&#x27;123456&#x27;,master_log_file=&#x27;$&#123;File&#125;&#x27;,master_log_pos=$&#123;Pos&#125;;</span><br><span class="line">                   start slave;&quot;</span><br><span class="line">                   ;;</span><br><span class="line">                *)</span><br><span class="line">                   echo &quot;-- error input .... exit!&quot;</span><br><span class="line">                   ;;</span><br><span class="line">           esac</span><br><span class="line">               echo &quot;-- changing, please wait 3s....&quot;</span><br><span class="line">               sleep 3</span><br><span class="line">               echo &quot;-- change successfull,the new master is:$&#123;Slave&#125;,new slave is $&#123;Master&#125;&quot;</span><br><span class="line">                SlaveIOStatus=$(mysql -u$&#123;User&#125; -h$&#123;Master&#125; -p$&#123;PW&#125; -e &quot;show slave status \G;&quot;awk &#x27;/Slave_IO_Running/&#123;print $2&#125;&#x27;)</span><br><span class="line">                SlaveSQLStatus=$(mysql -u$&#123;User&#125; -h$&#123;Master&#125; -p$&#123;PW&#125; -e &quot;show slave status \G;&quot;awk &#x27;/Slave_SQL_Running/&#123;print $2&#125;&#x27;)</span><br><span class="line">                printf &quot;The new master is: \n Slave_IO_Running=$&#123;SlaveIOStatus&#125;\n&quot;</span><br><span class="line">                printf &quot;Slave_SQL_Running=$&#123;SlaveSQLStatus&#125;\n&quot;</span><br><span class="line">       else</span><br><span class="line">          echo &quot;node change failed please change again ! &quot;</span><br><span class="line">          exit 1</span><br><span class="line">       fi</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;运行环境：&quot;&gt;&lt;a href=&quot;#运行环境：&quot; class=&quot;headerlink&quot; title=&quot;运行环境：&quot;&gt;&lt;/a&gt;运行环境：&lt;/h3&gt;&lt;p&gt;线上：RDS（内网）+ECS&lt;/p&gt;
&lt;p&gt;本地：xampp&lt;/p&gt;
&lt;p&gt;由于本地只能访问ECS，需要在ECS上架</summary>
      
    
    
    
    <category term="Linux教程" scheme="https://jarod.vip/categories/Linux%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="MySQL" scheme="https://jarod.vip/tags/MySQL/"/>
    
  </entry>
  
</feed>
